{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yilia/source/main.266c1c.css","path":"main.266c1c.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/slider.096dc6.js","path":"slider.096dc6.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/main.266c1c.js","path":"main.266c1c.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/mobile.906508.js","path":"mobile.906508.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"source/imgs/avatar.png","path":"imgs/avatar.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"a2d54f0a5f5cbcf354ae39c5fa2dab18feeb8681","modified":1501738275000},{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1501737737000},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1501737737000},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1501737737000},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1501737737000},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1501737737000},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1501737737000},{"_id":"themes/yilia/README.md","hash":"86757b00d393bd4956a252d92a469f11f2ae8914","modified":1501737737000},{"_id":"themes/yilia/_config.yml","hash":"a2b39e34d2a9fc1256e8f69b784229816f52507e","modified":1501739020000},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1501737737000},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1501737737000},{"_id":"source/_posts/canvas-draw.md","hash":"64ca2a95934e9b60e5c6ea9712b09be0fd7acc8c","modified":1501728495000},{"_id":"source/_posts/h5-long-push.md","hash":"0245e9b5fe1580c81a92620089322d12c1ee51a4","modified":1501728495000},{"_id":"source/_posts/h5-video-inline.md","hash":"d240fbb32b8724dbdf8ffbb53975b0b64c473f6d","modified":1501728495000},{"_id":"source/_posts/h5-view-port.md","hash":"ce3377575cac2263235a7c364b50f56497eadabf","modified":1501731091000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1501737326000},{"_id":"source/_posts/hexo-install.md","hash":"6053b62a24f54e8fac028ee7b4d4ce3b9873d7b2","modified":1501737002000},{"_id":"source/_posts/why-extends-is-evil.md","hash":"dc532d369deb409837a79b308d7e64c192b3ee56","modified":1501728495000},{"_id":"source/_posts/viewport-test-data.md","hash":"e33eb2b6c355df1b44e7f02ad447618fe9ccbe24","modified":1501728495000},{"_id":"source/_posts/why-getter-and-setter-methods-are-evil.md","hash":"4a44c597f4d52ee50378f35c966026f7adb220c2","modified":1501728495000},{"_id":"source/archive/index.md","hash":"dfc3a87cdc34d54d971b7db466eeb8cabda46cc6","modified":1501728495000},{"_id":"source/categories/index.md","hash":"6f7a8ed18d8054e153fd97c82ce132a3669f3c43","modified":1501728495000},{"_id":"source/tags/index.md","hash":"fae6b8698e6a91d46af3647f2ed795c594993003","modified":1501728495000},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1501737737000},{"_id":"themes/yilia/.git/config","hash":"256e47c5a4386e6881318e44d2a716fdc3197863","modified":1501737737000},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1501737731000},{"_id":"themes/yilia/.git/index","hash":"383581900e64b9f08425759174b64b3bc0f21c2c","modified":1501737737000},{"_id":"themes/yilia/.git/packed-refs","hash":"4dc64835d90ebd62d3df9c760251d3ee4fe50711","modified":1501737737000},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1501737737000},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1501737737000},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1501737737000},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1501737737000},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1501737737000},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1501737737000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1501737737000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1501737737000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1501737737000},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1501737737000},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1501737737000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1501737737000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1501737737000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1501737737000},{"_id":"themes/yilia/source/main.266c1c.css","hash":"6b9cfabb81f021081a93da5a069674e9be910194","modified":1501737737000},{"_id":"themes/yilia/source/slider.096dc6.js","hash":"a8b66ef85d96616086ea6256e7288d0b5a2df56d","modified":1501737737000},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1501737737000},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501737737000},{"_id":"themes/yilia/source/main.266c1c.js","hash":"59ccafbd45d28c397a8a901152ef5e196077e4f4","modified":1501737737000},{"_id":"themes/yilia/source/mobile.906508.js","hash":"86e50eecba93644d6cf4f78fd4f9ff54a0ea82d5","modified":1501737737000},{"_id":"source/_posts/h5-long-push/i1.png","hash":"ba02f03b8f9a0c6f3f5417c7db6cf780400b0143","modified":1501728495000},{"_id":"source/_posts/h5-long-push/i2.png","hash":"a2d40d5cd09e4b966bac14c54e7059a174699651","modified":1501728495000},{"_id":"source/_posts/h5-video-inline/i3.jpg","hash":"2468c13168088fbd6718ff581002d33a66bcb84f","modified":1501728495000},{"_id":"source/_posts/h5-video-inline/i4.jpg","hash":"10133319b970db7f9f0fe9947d485ff5cab84ff1","modified":1501728495000},{"_id":"source/_posts/h5-video-inline/i5.jpg","hash":"c1e3202203b391b316b8c906eff9b7dc931152b6","modified":1501728495000},{"_id":"source/_posts/h5-video-inline/i6.jpg","hash":"9705831063284b1df3b2d38c06bf18bfb7ac17ed","modified":1501728495000},{"_id":"source/_posts/h5-video-inline/i7.png","hash":"efcddb42596f21fa9cba88d1b671ae939030e53a","modified":1501728495000},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1501737731000},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1501737731000},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1501737731000},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1501737731000},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1501737731000},{"_id":"themes/yilia/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1501737731000},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1501737731000},{"_id":"themes/yilia/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1501737731000},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1501737731000},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1501737731000},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1501737731000},{"_id":"themes/yilia/.git/logs/HEAD","hash":"3e46323043cd99c4e45e6608aa1f75e8d707b1a7","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"b86b248720ad415ec1b5fee53fb583776c776f83","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"b75e8fff732292fa26b5a0b47cd253d4281e321a","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"9bfcbd9e71401b6da6b2bbbe61e97625ca247b7a","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"2387d91cf94b0b36e8a36841992a5fce63ebd069","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1501737737000},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1501737737000},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1501737737000},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1501737737000},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1501737737000},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1501737737000},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1501737737000},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1501737737000},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1501737737000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1501737737000},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1501737737000},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1501737737000},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1501737737000},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1501737737000},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1501737737000},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1501737737000},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1501737737000},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1501737737000},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"e6e83d4863afcc589d4dd2f327e9f396f7d7b343","modified":1501737737000},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1501737737000},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1501737737000},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1501737737000},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1501737737000},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1501737737000},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1501737737000},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1501737737000},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1501737737000},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1501737737000},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1501737737000},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1501737737000},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1501737737000},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1501737737000},{"_id":"themes/yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1501737737000},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1501737737000},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"17a97f7c38f5dfacc3eadf354b5826d77f1c2bdb","modified":1501737737000},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1501737737000},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1501737737000},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1501737737000},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1501737737000},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1501737737000},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1501737737000},{"_id":"themes/yilia/source-src/js/fix.js","hash":"9bb1a4918c1b1ee62ce0a71381990a1978c51b2a","modified":1501737737000},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1501737737000},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1501737737000},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1501737737000},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1501737737000},{"_id":"themes/yilia/source-src/js/slider.js","hash":"3bf0d70ae171404a0dc73c33ec48927fc2521a54","modified":1501737737000},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"808a2e1ed407984cfdc929b827d3638f70ec9a2a","modified":1501737737000},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1501737737000},{"_id":"source/_posts/h5-long-push/i3.png","hash":"256340879c4cddbf0ba33e91a6c8f8f50dafff2d","modified":1501728495000},{"_id":"source/_posts/h5-long-push/i4.png","hash":"f864ab7e95b4fcb3938e9c9f580172a6784deff2","modified":1501728495000},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"171b130d25c36f496e4b43e3808707a8f1897729","modified":1501737737000},{"_id":"source/_posts/h5-video-inline/i1.png","hash":"9753fdd63b4ad4e29ca4aa5acfe4c9f74d94a97a","modified":1501728495000},{"_id":"source/_posts/h5-video-inline/i2.png","hash":"c8f8339da953a359a3bc145d56fdbccb9834a9aa","modified":1501728495000},{"_id":"source/imgs/avatar.png","hash":"10807303aca50409317a55fa84c6644a8743e494","modified":1501728495000},{"_id":"themes/yilia/.git/objects/pack/pack-2a17f2eb11c0cabdac77304d511b48ab62c289b1.idx","hash":"7fda91f4c4e817085e6fa5a773dcbf4b32feaf4d","modified":1501737737000},{"_id":"themes/yilia/.git/refs/heads/master","hash":"4d8071322662d313a09ff7b2e716002870d8c94c","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"c2dccf1a95ec09ceeee5004293ac7edb7e1c9a66","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"9f9fa4f8b0de5f87a9494fd0cb5064502a5d5ef5","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"341103df70d0b476e3acd0afbc507a4a120d8f5f","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1501737737000},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1501737737000},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1501737737000},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1501737737000},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1501737737000},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1501737737000},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1501737737000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1501737737000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1501737737000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1501737737000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1501737737000},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1501737737000},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1501737737000},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1501737737000},{"_id":"source/_posts/h5-video-inline/i8.png","hash":"7289f7e4b18687af7169011c55d7e0173232c7f1","modified":1501728495000},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"3e46323043cd99c4e45e6608aa1f75e8d707b1a7","modified":1501737737000},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1501737737000},{"_id":"themes/yilia/.git/logs/refs/remotes/origin/HEAD","hash":"3e46323043cd99c4e45e6608aa1f75e8d707b1a7","modified":1501737737000},{"_id":"source/_posts/hexo-install/helloworld.png","hash":"736f51ae57377b26430a6d02e357aedf98463a34","modified":1501728495000},{"_id":"themes/yilia/.git/objects/pack/pack-2a17f2eb11c0cabdac77304d511b48ab62c289b1.pack","hash":"ff6c45a3fe7b42d67f4c1a44d0728b15775817f0","modified":1501737737000},{"_id":"public/content.json","hash":"6eee9999ffecd8291556b97a4812a7eee537bb02","modified":1501738546847},{"_id":"public/categories/index.html","hash":"33cf7fd64b30457786f922da9c937133c2ff1008","modified":1501739031772},{"_id":"public/tags/index.html","hash":"797cfb5b0377993f2d40e6f3fb59cc9f9263098f","modified":1501739031772},{"_id":"public/archive/index.html","hash":"47ce5a76e214c0eda4c64656f8c1710372f95345","modified":1501739031772},{"_id":"public/2017/08/03/hello-world/index.html","hash":"888abbd006939aafc8264ff1639ace45ec10d2cb","modified":1501739031772},{"_id":"public/2017/07/27/viewport-test-data/index.html","hash":"cc0d1455695c829ff9cf5b0d374a22f4b1dbb400","modified":1501739031772},{"_id":"public/2017/07/20/h5-view-port/index.html","hash":"2b3a2eac8ae8f6d5c0924eea8e509b337c15312d","modified":1501739031772},{"_id":"public/2017/07/19/h5-long-push/index.html","hash":"b667f258e4d1218a0ba59ee027018c065b685e87","modified":1501739031772},{"_id":"public/2017/07/14/h5-video-inline/index.html","hash":"2c98363f1955c6b6f7020b433ac9283bf0ff38a1","modified":1501739031773},{"_id":"public/2017/07/07/canvas-draw/index.html","hash":"9d7aed1c99f1cdc412d494be1858d299f28dac56","modified":1501739031773},{"_id":"public/2017/01/10/why-getter-and-setter-methods-are-evil/index.html","hash":"cb8fed505ce18821353ad09cd97efeefd5dbd2ef","modified":1501739031773},{"_id":"public/2017/01/06/why-extends-is-evil/index.html","hash":"197928d2ac272675722697af4b63d799078640ae","modified":1501739031773},{"_id":"public/2017/01/04/hexo-install/index.html","hash":"4a622fd17d37c3b88e0c6b2409d24c625422304a","modified":1501739031773},{"_id":"public/archives/index.html","hash":"079b40103f6a9c5678743e9022c07b68205c9656","modified":1501739031774},{"_id":"public/archives/2017/index.html","hash":"aa4c9b151e2a2237face83df205267da8a95935c","modified":1501739031774},{"_id":"public/archives/2017/01/index.html","hash":"b4966ddd42b613816fc4e2ee28baf03be971a8bc","modified":1501739031774},{"_id":"public/archives/2017/07/index.html","hash":"5956582b330f6aebda5f561b15b85b62d5f7b85f","modified":1501739031774},{"_id":"public/archives/2017/08/index.html","hash":"536bc8efbda718b2ea09ac13863ef3e60609e217","modified":1501739031774},{"_id":"public/categories/H5/index.html","hash":"35b8034afbcb711ccdc10fd0a9d226d02305b893","modified":1501739031774},{"_id":"public/categories/Hexo/index.html","hash":"db236556750be632a809655b4d9abf236852c90c","modified":1501739031774},{"_id":"public/index.html","hash":"4ccd5f75987cd60c0c6a3440fb2ecd7488e8cc4e","modified":1501739031774},{"_id":"public/categories/Java/index.html","hash":"f1f34c1f51d16c038a06d75f450acee07199550c","modified":1501739031774},{"_id":"public/tags/H5/index.html","hash":"88e640290c35ff7d98a04d05585c76a2f4463bcf","modified":1501739031775},{"_id":"public/tags/canvas/index.html","hash":"8d0a4fdb0afc23155b6c4f0254309479914016cc","modified":1501739031775},{"_id":"public/tags/drawImage/index.html","hash":"860116dac311c16c1ce03f07912fcd5073695605","modified":1501739031775},{"_id":"public/tags/touchend/index.html","hash":"7271f724089adae8f529835cff04ab3073bb9c0f","modified":1501739031775},{"_id":"public/tags/touchstart/index.html","hash":"0d233a3b20262aedae569e50e1f1b87bbdc2efea","modified":1501739031775},{"_id":"public/tags/手势/index.html","hash":"4f037ab131de7fcc04ae2c1e76a8dac45256fc7c","modified":1501739031775},{"_id":"public/tags/移动端/index.html","hash":"83d72c4043ad82eda7c06d461fac589a7e3d3f6d","modified":1501739031775},{"_id":"public/tags/video/index.html","hash":"4a12b413c9503e75d448016c1a59a012400342aa","modified":1501739031776},{"_id":"public/tags/viewport/index.html","hash":"76adf69ddb27173562d2236a4aa94c8ba6abcbb5","modified":1501739031776},{"_id":"public/tags/inline/index.html","hash":"ada021091b95f7bae811751755046461da720873","modified":1501739031776},{"_id":"public/tags/Hexo/index.html","hash":"94bf09b5a7968a4436a8b8203cd067c5799bafe4","modified":1501739031776},{"_id":"public/tags/安装/index.html","hash":"4e074490f8460df36c497aa109eda71b6a724012","modified":1501739031776},{"_id":"public/tags/Java/index.html","hash":"32e5f2185bd47371fa32fc749c1bf18553660f1d","modified":1501739031776},{"_id":"public/tags/翻译/index.html","hash":"750963f27a8506bd12c196ce4bd1a05e9ce314dd","modified":1501739031777},{"_id":"public/tags/继承/index.html","hash":"b319f6353454e71e9e9eedb084e23126b5843444","modified":1501739031776},{"_id":"public/tags/测试数据/index.html","hash":"d80bf5c877d1a7e669d6b4168e1afacda16e7ac8","modified":1501739031777},{"_id":"public/tags/存储器/index.html","hash":"874262118a1e877a4abff0aae51c7bb358a81003","modified":1501739031777},{"_id":"public/tags/getter/index.html","hash":"889c87e7898d5e37f58e2245f3a4874abf68dd6c","modified":1501739031777},{"_id":"public/tags/setter/index.html","hash":"2e96797d7a1b29c0b30a7a064fcb6efc402d16c6","modified":1501739031779},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1501738547341},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1501738547341},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1501738547341},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1501738547341},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1501738547341},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1501738547341},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1501738547341},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1501738547341},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1501738547342},{"_id":"public/2017/07/19/h5-long-push/i1.png","hash":"ba02f03b8f9a0c6f3f5417c7db6cf780400b0143","modified":1501738547342},{"_id":"public/2017/07/19/h5-long-push/i2.png","hash":"a2d40d5cd09e4b966bac14c54e7059a174699651","modified":1501738547342},{"_id":"public/2017/07/14/h5-video-inline/i3.jpg","hash":"2468c13168088fbd6718ff581002d33a66bcb84f","modified":1501738547342},{"_id":"public/2017/07/14/h5-video-inline/i4.jpg","hash":"10133319b970db7f9f0fe9947d485ff5cab84ff1","modified":1501738547342},{"_id":"public/2017/07/14/h5-video-inline/i5.jpg","hash":"c1e3202203b391b316b8c906eff9b7dc931152b6","modified":1501738547342},{"_id":"public/2017/07/14/h5-video-inline/i6.jpg","hash":"9705831063284b1df3b2d38c06bf18bfb7ac17ed","modified":1501738547342},{"_id":"public/2017/07/14/h5-video-inline/i7.png","hash":"efcddb42596f21fa9cba88d1b671ae939030e53a","modified":1501738547342},{"_id":"public/2017/07/19/h5-long-push/i3.png","hash":"256340879c4cddbf0ba33e91a6c8f8f50dafff2d","modified":1501738547347},{"_id":"public/2017/07/19/h5-long-push/i4.png","hash":"f864ab7e95b4fcb3938e9c9f580172a6784deff2","modified":1501738547348},{"_id":"public/main.266c1c.css","hash":"6b9cfabb81f021081a93da5a069674e9be910194","modified":1501738547350},{"_id":"public/slider.096dc6.js","hash":"a8b66ef85d96616086ea6256e7288d0b5a2df56d","modified":1501738547350},{"_id":"public/main.266c1c.js","hash":"59ccafbd45d28c397a8a901152ef5e196077e4f4","modified":1501738547350},{"_id":"public/mobile.906508.js","hash":"86e50eecba93644d6cf4f78fd4f9ff54a0ea82d5","modified":1501738547350},{"_id":"public/2017/07/14/h5-video-inline/i1.png","hash":"9753fdd63b4ad4e29ca4aa5acfe4c9f74d94a97a","modified":1501738547350},{"_id":"public/2017/07/14/h5-video-inline/i2.png","hash":"c8f8339da953a359a3bc145d56fdbccb9834a9aa","modified":1501738547350},{"_id":"public/2017/07/14/h5-video-inline/i8.png","hash":"7289f7e4b18687af7169011c55d7e0173232c7f1","modified":1501738547358},{"_id":"public/imgs/avatar.png","hash":"10807303aca50409317a55fa84c6644a8743e494","modified":1501738547361},{"_id":"public/2017/01/04/hexo-install/helloworld.png","hash":"736f51ae57377b26430a6d02e357aedf98463a34","modified":1501738547369}],"Category":[{"name":"H5","_id":"cj5w0cufv0004ij662b718mh2"},{"name":"Hexo","_id":"cj5w0cugi000kij66frviymge"},{"name":"Java","_id":"cj5w0cugj000oij6614eb9u6i"}],"Data":[],"Page":[{"title":"categories","date":"2017-07-06T06:12:15.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-07-06 14:12:15\n---\n","updated":"2017-08-03T02:48:15.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cj5w0cufs0001ij66vhvbvvte","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-07-06T06:12:08.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-07-06 14:12:08\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-08-03T02:48:15.000Z","path":"tags/index.html","layout":"page","_id":"cj5w0cufu0003ij6661us8f6d","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"archive","date":"2017-07-06T07:02:26.000Z","_content":"","source":"archive/index.md","raw":"---\ntitle: archive\ndate: 2017-07-06 15:02:26\n---\n","updated":"2017-08-03T02:48:15.000Z","path":"archive/index.html","comments":1,"layout":"page","_id":"cj5w0cug10007ij66lau18339","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"使用canvas绘制图片","date":"2017-07-07T07:45:45.000Z","_content":"\n## 使用Canvas绘制图片\n绘制图片CanvasRenderingContext2D对象的哪些主要属性和方法：\n\n`drawImage(mixed image, int x, int y)`  \n以canvas上指定的坐标点开始，按照图像的原始尺寸大小绘制整个图像。这里的image可以是Image对象，也可以是Canvas对象(下同)。\n\n`drawImage(mixed image, int x, int y, int width, int height)`  \n以canvas上指定的坐标点开始，以指定的大小(width和height)绘制整个图像，图像将根据指定的尺寸自动进行相应的缩放。\n\n`drawImage(mixed image, int imageX, int imageY, int imageWidth, int imageHeight, int canvasX, int canvasY, int canvasWidth, int canvasHeight)`  \n将指定图像的局部图像(以(imageX, imageY)为左上角、宽度为imageWidth、高度为imageHeight的矩形部分)绘制到canvas中以(canvasX,canvasY)为左上角坐标、宽度为canvasWidth、高度为canvasHeight的矩形区域中  \n<!--more-->\n很坑，drawImage()方法具有三种不同的变体，每个方法变体允许接收的参数不仅数量不同，连参数的含义也不尽相同。\n{% codeblock lang:javascript %}\n\n\tvar canvas = document.getElementById(\"myCanvas\");\n\t//简单地检测当前浏览器是否支持Canvas对象，以免在一些不支持html5的浏览器中提示语法错误  \n\tif(canvas.getContext){  \n\t\t//获取对应的CanvasRenderingContext2D对象(画笔)  \n\t\tvar ctx = canvas.getContext(\"2d\");  \n\t\t//创建新的图片对象  \n\t\tvar img = new Image();  \n\t\t//指定图片的URL  \n\t\timg.src = \"http://www.365mini.com/image/google_logo.png\";  \n\t\t//浏览器加载图片完毕后再绘制图片  \n\t\timg.onload = function(){  \n\t\t\t//以Canvas画布上的坐标(10,10)为起始点，绘制图像  \n\t\t\tctx.drawImage(img, 10, 10);  \n\t\t};  \n\t}\n{% endcodeblock %}\n\n## 清除图片\nCanvasRenderingContext2D对象提供了一个可以永远重复使用的橡皮擦——clearRect()方法。\n\n`clearRect(x, y, width, height)`  \n\nCanvasRenderingContext2D对象的`clearRect()`方法用于清除canvas内以指定坐标点(x,y)为左上角、宽度为width、高度为height的矩形区域中的所有图形像素。\n\n## 正确设置Canvas高度\n<font color=\"red\">**在js中设置canvas的宽高时，如果设置方式不正确，或者在cass中设置时，在绘制图像时就会出现拉伸的情况。这是因为canvas的默认宽高为300px*150px，在css中设置canvas的宽高，实际上是把canvas在300px*150px的基础上进行了拉伸。所以绘制出来的图像会发生变形。**</font>  \n{% codeblock lang:javascript %}\n\n\t//使用jQuery\n\tvar winWidth = $(window).width();\n\tvar winHeight = $(window).height();\n\t$(\"#cv\").get(0).width = winWidth;\n\t$(\"#cv\").get(0).height = winHeight;\n{% endcodeblock %}\n","source":"_posts/canvas-draw.md","raw":"---\ntitle: 使用canvas绘制图片\ndate: 2017-07-07 15:45:45\ntags:\n  - H5\n  - canvas\n  - drawImage\ncategories: H5\n\n---\n\n## 使用Canvas绘制图片\n绘制图片CanvasRenderingContext2D对象的哪些主要属性和方法：\n\n`drawImage(mixed image, int x, int y)`  \n以canvas上指定的坐标点开始，按照图像的原始尺寸大小绘制整个图像。这里的image可以是Image对象，也可以是Canvas对象(下同)。\n\n`drawImage(mixed image, int x, int y, int width, int height)`  \n以canvas上指定的坐标点开始，以指定的大小(width和height)绘制整个图像，图像将根据指定的尺寸自动进行相应的缩放。\n\n`drawImage(mixed image, int imageX, int imageY, int imageWidth, int imageHeight, int canvasX, int canvasY, int canvasWidth, int canvasHeight)`  \n将指定图像的局部图像(以(imageX, imageY)为左上角、宽度为imageWidth、高度为imageHeight的矩形部分)绘制到canvas中以(canvasX,canvasY)为左上角坐标、宽度为canvasWidth、高度为canvasHeight的矩形区域中  \n<!--more-->\n很坑，drawImage()方法具有三种不同的变体，每个方法变体允许接收的参数不仅数量不同，连参数的含义也不尽相同。\n{% codeblock lang:javascript %}\n\n\tvar canvas = document.getElementById(\"myCanvas\");\n\t//简单地检测当前浏览器是否支持Canvas对象，以免在一些不支持html5的浏览器中提示语法错误  \n\tif(canvas.getContext){  \n\t\t//获取对应的CanvasRenderingContext2D对象(画笔)  \n\t\tvar ctx = canvas.getContext(\"2d\");  \n\t\t//创建新的图片对象  \n\t\tvar img = new Image();  \n\t\t//指定图片的URL  \n\t\timg.src = \"http://www.365mini.com/image/google_logo.png\";  \n\t\t//浏览器加载图片完毕后再绘制图片  \n\t\timg.onload = function(){  \n\t\t\t//以Canvas画布上的坐标(10,10)为起始点，绘制图像  \n\t\t\tctx.drawImage(img, 10, 10);  \n\t\t};  \n\t}\n{% endcodeblock %}\n\n## 清除图片\nCanvasRenderingContext2D对象提供了一个可以永远重复使用的橡皮擦——clearRect()方法。\n\n`clearRect(x, y, width, height)`  \n\nCanvasRenderingContext2D对象的`clearRect()`方法用于清除canvas内以指定坐标点(x,y)为左上角、宽度为width、高度为height的矩形区域中的所有图形像素。\n\n## 正确设置Canvas高度\n<font color=\"red\">**在js中设置canvas的宽高时，如果设置方式不正确，或者在cass中设置时，在绘制图像时就会出现拉伸的情况。这是因为canvas的默认宽高为300px*150px，在css中设置canvas的宽高，实际上是把canvas在300px*150px的基础上进行了拉伸。所以绘制出来的图像会发生变形。**</font>  \n{% codeblock lang:javascript %}\n\n\t//使用jQuery\n\tvar winWidth = $(window).width();\n\tvar winHeight = $(window).height();\n\t$(\"#cv\").get(0).width = winWidth;\n\t$(\"#cv\").get(0).height = winHeight;\n{% endcodeblock %}\n","slug":"canvas-draw","published":1,"updated":"2017-08-03T02:48:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5w0cufo0000ij668elwhvrx","content":"<h2 id=\"使用Canvas绘制图片\"><a href=\"#使用Canvas绘制图片\" class=\"headerlink\" title=\"使用Canvas绘制图片\"></a>使用Canvas绘制图片</h2><p>绘制图片CanvasRenderingContext2D对象的哪些主要属性和方法：</p>\n<p><code>drawImage(mixed image, int x, int y)</code><br>以canvas上指定的坐标点开始，按照图像的原始尺寸大小绘制整个图像。这里的image可以是Image对象，也可以是Canvas对象(下同)。</p>\n<p><code>drawImage(mixed image, int x, int y, int width, int height)</code><br>以canvas上指定的坐标点开始，以指定的大小(width和height)绘制整个图像，图像将根据指定的尺寸自动进行相应的缩放。</p>\n<p><code>drawImage(mixed image, int imageX, int imageY, int imageWidth, int imageHeight, int canvasX, int canvasY, int canvasWidth, int canvasHeight)</code><br>将指定图像的局部图像(以(imageX, imageY)为左上角、宽度为imageWidth、高度为imageHeight的矩形部分)绘制到canvas中以(canvasX,canvasY)为左上角坐标、宽度为canvasWidth、高度为canvasHeight的矩形区域中<br><a id=\"more\"></a><br>很坑，drawImage()方法具有三种不同的变体，每个方法变体允许接收的参数不仅数量不同，连参数的含义也不尽相同。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"myCanvas\"</span>);</div><div class=\"line\"><span class=\"comment\">//简单地检测当前浏览器是否支持Canvas对象，以免在一些不支持html5的浏览器中提示语法错误  </span></div><div class=\"line\"><span class=\"keyword\">if</span>(canvas.getContext)&#123;  </div><div class=\"line\">\t<span class=\"comment\">//获取对应的CanvasRenderingContext2D对象(画笔)  </span></div><div class=\"line\">\t<span class=\"keyword\">var</span> ctx = canvas.getContext(<span class=\"string\">\"2d\"</span>);  </div><div class=\"line\">\t<span class=\"comment\">//创建新的图片对象  </span></div><div class=\"line\">\t<span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();  </div><div class=\"line\">\t<span class=\"comment\">//指定图片的URL  </span></div><div class=\"line\">\timg.src = <span class=\"string\">\"http://www.365mini.com/image/google_logo.png\"</span>;  </div><div class=\"line\">\t<span class=\"comment\">//浏览器加载图片完毕后再绘制图片  </span></div><div class=\"line\">\timg.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;  </div><div class=\"line\">\t\t<span class=\"comment\">//以Canvas画布上的坐标(10,10)为起始点，绘制图像  </span></div><div class=\"line\">\t\tctx.drawImage(img, <span class=\"number\">10</span>, <span class=\"number\">10</span>);  </div><div class=\"line\">\t&#125;;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"清除图片\"><a href=\"#清除图片\" class=\"headerlink\" title=\"清除图片\"></a>清除图片</h2><p>CanvasRenderingContext2D对象提供了一个可以永远重复使用的橡皮擦——clearRect()方法。</p>\n<p><code>clearRect(x, y, width, height)</code>  </p>\n<p>CanvasRenderingContext2D对象的<code>clearRect()</code>方法用于清除canvas内以指定坐标点(x,y)为左上角、宽度为width、高度为height的矩形区域中的所有图形像素。</p>\n<h2 id=\"正确设置Canvas高度\"><a href=\"#正确设置Canvas高度\" class=\"headerlink\" title=\"正确设置Canvas高度\"></a>正确设置Canvas高度</h2><p><font color=\"red\"><strong>在js中设置canvas的宽高时，如果设置方式不正确，或者在cass中设置时，在绘制图像时就会出现拉伸的情况。这是因为canvas的默认宽高为300px<em>150px，在css中设置canvas的宽高，实际上是把canvas在300px</em>150px的基础上进行了拉伸。所以绘制出来的图像会发生变形。</strong></font><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//使用jQuery</span></div><div class=\"line\"><span class=\"keyword\">var</span> winWidth = $(<span class=\"built_in\">window</span>).width();</div><div class=\"line\"><span class=\"keyword\">var</span> winHeight = $(<span class=\"built_in\">window</span>).height();</div><div class=\"line\">$(<span class=\"string\">\"#cv\"</span>).get(<span class=\"number\">0</span>).width = winWidth;</div><div class=\"line\">$(<span class=\"string\">\"#cv\"</span>).get(<span class=\"number\">0</span>).height = winHeight;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"使用Canvas绘制图片\"><a href=\"#使用Canvas绘制图片\" class=\"headerlink\" title=\"使用Canvas绘制图片\"></a>使用Canvas绘制图片</h2><p>绘制图片CanvasRenderingContext2D对象的哪些主要属性和方法：</p>\n<p><code>drawImage(mixed image, int x, int y)</code><br>以canvas上指定的坐标点开始，按照图像的原始尺寸大小绘制整个图像。这里的image可以是Image对象，也可以是Canvas对象(下同)。</p>\n<p><code>drawImage(mixed image, int x, int y, int width, int height)</code><br>以canvas上指定的坐标点开始，以指定的大小(width和height)绘制整个图像，图像将根据指定的尺寸自动进行相应的缩放。</p>\n<p><code>drawImage(mixed image, int imageX, int imageY, int imageWidth, int imageHeight, int canvasX, int canvasY, int canvasWidth, int canvasHeight)</code><br>将指定图像的局部图像(以(imageX, imageY)为左上角、宽度为imageWidth、高度为imageHeight的矩形部分)绘制到canvas中以(canvasX,canvasY)为左上角坐标、宽度为canvasWidth、高度为canvasHeight的矩形区域中<br></p>","more":"<br>很坑，drawImage()方法具有三种不同的变体，每个方法变体允许接收的参数不仅数量不同，连参数的含义也不尽相同。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"myCanvas\"</span>);</div><div class=\"line\"><span class=\"comment\">//简单地检测当前浏览器是否支持Canvas对象，以免在一些不支持html5的浏览器中提示语法错误  </span></div><div class=\"line\"><span class=\"keyword\">if</span>(canvas.getContext)&#123;  </div><div class=\"line\">\t<span class=\"comment\">//获取对应的CanvasRenderingContext2D对象(画笔)  </span></div><div class=\"line\">\t<span class=\"keyword\">var</span> ctx = canvas.getContext(<span class=\"string\">\"2d\"</span>);  </div><div class=\"line\">\t<span class=\"comment\">//创建新的图片对象  </span></div><div class=\"line\">\t<span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();  </div><div class=\"line\">\t<span class=\"comment\">//指定图片的URL  </span></div><div class=\"line\">\timg.src = <span class=\"string\">\"http://www.365mini.com/image/google_logo.png\"</span>;  </div><div class=\"line\">\t<span class=\"comment\">//浏览器加载图片完毕后再绘制图片  </span></div><div class=\"line\">\timg.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;  </div><div class=\"line\">\t\t<span class=\"comment\">//以Canvas画布上的坐标(10,10)为起始点，绘制图像  </span></div><div class=\"line\">\t\tctx.drawImage(img, <span class=\"number\">10</span>, <span class=\"number\">10</span>);  </div><div class=\"line\">\t&#125;;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p></p>\n<h2 id=\"清除图片\"><a href=\"#清除图片\" class=\"headerlink\" title=\"清除图片\"></a>清除图片</h2><p>CanvasRenderingContext2D对象提供了一个可以永远重复使用的橡皮擦——clearRect()方法。</p>\n<p><code>clearRect(x, y, width, height)</code>  </p>\n<p>CanvasRenderingContext2D对象的<code>clearRect()</code>方法用于清除canvas内以指定坐标点(x,y)为左上角、宽度为width、高度为height的矩形区域中的所有图形像素。</p>\n<h2 id=\"正确设置Canvas高度\"><a href=\"#正确设置Canvas高度\" class=\"headerlink\" title=\"正确设置Canvas高度\"></a>正确设置Canvas高度</h2><p><font color=\"red\"><strong>在js中设置canvas的宽高时，如果设置方式不正确，或者在cass中设置时，在绘制图像时就会出现拉伸的情况。这是因为canvas的默认宽高为300px<em>150px，在css中设置canvas的宽高，实际上是把canvas在300px</em>150px的基础上进行了拉伸。所以绘制出来的图像会发生变形。</strong></font><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//使用jQuery</span></div><div class=\"line\"><span class=\"keyword\">var</span> winWidth = $(<span class=\"built_in\">window</span>).width();</div><div class=\"line\"><span class=\"keyword\">var</span> winHeight = $(<span class=\"built_in\">window</span>).height();</div><div class=\"line\">$(<span class=\"string\">\"#cv\"</span>).get(<span class=\"number\">0</span>).width = winWidth;</div><div class=\"line\">$(<span class=\"string\">\"#cv\"</span>).get(<span class=\"number\">0</span>).height = winHeight;</div></pre></td></tr></table></figure></p>"},{"title":"H5中的长按和滑动手势操作","date":"2017-07-19T05:37:33.000Z","_content":"\n在移动端H5中如果设计了一些需要长按或者滑动的手势操作有可能会和系统默认的一些操作相冲突，所以在编写这些手势时需要做一些特定的处理。<font color=red>为方便代码编写本文使用jQuey库。</font>\n\n## 浏览器默认长按事件\n\n为了更好的测试我们构建一个有多个元素构成的页面\n\n\t<body>\n\t\t<button style=\"width: 200px;height: 200px;background-color: cornsilk;font-size: 64px\">点我</button><br><br>\n\t\t<input style=\"width: 300px;height: 50px;background-color: cornsilk;font-size: 44px\"><br><br>\n\t\t<div style=\"width: 300px;height: 150px;background-color: antiquewhite;font-size: 64px\">长按测试</div><br><br>\n\t\t<div style=\"width: 300px;height: 150px;background-color: red;font-size: 64px\">长按测试</div><br><br>\n\t\t<img src=\"resource/bg.png\">\n\t</body>\n\n我们先从chrome开始，虽然我们的目标是移动端，但是为了方便期间都会在chrome上模拟手机端的进行第一步调试。\n主要的默认行为是：\n\n* 长按空白处、图片、输入框，弹出默认系统弹框\n\n <img src=\"h5-long-push/i1.png\" width = \"300\"  alt=\"图片名称\" align=center />\n\n* 长按带有文字的控件会选中文字\n\n <img src=\"h5-long-push/i2.png\" width = \"100\"  alt=\"图片名称\" align=center />\n\n\n接下来是iOS\n* 长按带有文字的控件会选中文字\n* 长按图片会出现保存图像、分享之类的系统菜单\n* 长按任何位置出现放大镜\n\n<img src=\"h5-long-push/i3.png\" width = \"300\"  alt=\"图片名称\" align=center />\n\n再来安卓：\n* 长按带有文字的控件会选中文字或者相同功能的菜单\n* 长按图片会出现保存图像、分享之类的系统菜单\n\n在我们需要实现自己的长按手势功能时以上的默认操作都是妨碍我们用户体验的绊脚石，所以我们要把他们一个一个搬掉。\n\n<!--more-->\n\n## 屏蔽系统默认菜单\n屏蔽系统默认弹出框可以使用以下代码：\n\n    //屏蔽长按菜单\n    document.body.addEventListener('contextmenu', function(e){\n        e.preventDefault();\n    });\n\n在chrome（PC和Android）、safari上测试下，疗效很好。。。弹出菜单都没有了。虽然在腾讯系的浏览器（QQ浏览器、微信、QQ）上还有问题，但是我们等会儿来处理，先来讲讲上面代码用到的方法和事件。\n\n### oncontextmenu事件\n\noncontextmenu 事件在元素中用户右击鼠标时触发并打开上下文菜单。为了避免菜单的弹出，我们捕获了body节点的contextmenu事件，并且使用preventDefault阻止其默认动作的触发。\n\n### preventDefault()、stopPropagation()、return false 之间的区别\n前面代码用到了`preventDefault`方法，这个方法很常用，但是很容易和`stopPropagation`以及`return false`的用法混淆起来。\n具体的区别可以看[这篇文章](http://www.cnblogs.com/dannyxie/p/5642727.html).\n\n简单来讲：\n\n* `preventDefault`阻止浏览器执行默认动作\n* `stopPropagation`阻止事件的冒泡上传\n* `renturn false`相当于立即退出当前函数并且执行`preventDefault`和`stopPropagation`方法\n* `stopImmediatePropagation`立即停止时间继续执行，即使在同一个节点上还绑定了其他事件，这个取决于绑定事件的先后顺序，很危险所以不常用\n\n所以这里的需求我们用`preventDefault`就足够了\n\n## 屏蔽图片弹出菜单\n虽然在chrome、safari上屏蔽了默认菜单，但是在腾讯系的浏览器上无论哪个平台点击图片依然会弹出菜单。\n翻遍网络并没有直接解决这个弹出菜单的办法可能是在App里面用native代码监控了这个点击事件，所以H5无法跳过这个菜单。\n我们只能用曲线救国的方式了：\n大致三种方式:\n* 使用div，在div的background-image里绘制图片（QQ浏览器里依然有问题，但是微信和QQ上解决问题）\n* 使用canvas绘制图片\n* 在img上盖一个透明div，在透明div上实现交互操作\n\n以下的代码将使用第三种解决方案：\n\n\t<div  style=\"width: 500px;height: 700px;position: relative;\">\n\t    <img src=\"resource/bg.png\" width=\"100%\" height=\"100%\">\n\t    <div style=\"position: absolute;top:0;left:0;width: 100%;height: 100%;z-index: 1000\"></div>\n\t</div>\n\n## 屏蔽长按选中\n使用CSS的方法进行屏蔽：\n\n    *{\n        -webkit-touch-callout:none;  /*系统默认菜单被禁用*/\n        -webkit-user-select:none; /*webkit浏览器*/\n        -khtml-user-select:none; /*早期浏览器*/\n        -moz-user-select:none;/*火狐*/\n        -ms-user-select:none; /*IE10*/\n        user-select:none;\n    }\n\n测试一下，长按选中文字、放大镜都没有了，很爽！但是。。。但是！iOS中的input控件也不能输入文字了。。。这还得了，必须要改！！\n    \n    *:not(input,textarea){\n        -webkit-touch-callout:none;  /*系统默认菜单被禁用*/\n        -webkit-user-select:none; /*webkit浏览器*/\n        -khtml-user-select:none; /*早期浏览器*/\n        -moz-user-select:none;/*火狐*/\n        -ms-user-select:none; /*IE10*/\n        user-select:none;\n    }\n\n这下真爽了，唯一的问题是祈祷产品千万不要设计出在input上长按的交互。\n\n到此为止，系统自带的默认长按响应都被我们屏蔽了，唯一有问题的是QQ浏览器，在长按页面空白部位时依然有弹出菜单，这个就真没办法了。。。您还是弄个背景div把页面撑满吧。。。\n\n## 长按手势的实现\n\n在H5中是没有长按这个时间触发的，所以比较麻烦的是必须自己实现长按的手势判断，下面是一个简单的JS判断代码：\n\n    var handle ;\n    $(\"img\").on(\"touchstart\",function () {\n        clearInterval(handle);\n        handle = setInterval(function () {\n            console.log(\"longpress\")\n        },500)\n    }).on(\"touchend\",function () {\n        clearInterval(handle);\n    })\n\n跑一下在控制台正常输出了longpress，代码在iOS和Android端都好使。\n\n## 滑动\n到目前为止还有一个问题，在手机端长按向下滑动会拖动整个页面，如下图：\n\n<img src=\"h5-long-push/i4.png\" width = \"300\"  alt=\"图片名称\" align=center />\n\n直觉上我们可以用`preventDefault`禁止浏览器的默认滑动行为，马上试一下：\n\n    $(window).on(\"touchstart\",function (e) {\n        e.preventDefault();\n    }).on(\"touchend\",function (e) {\n        e.preventDefault();\n    })\n\n果然好使，我们的问题基本解决了（在屏幕左边向右滑动会后退的问题没法解决，因为这不是h5行为，所以请不要设计屏幕左侧像右滑动的交互）\n\n但是等一等。。。一旦屏蔽了window（或者body）的默认行为，一些控件比如页面上的输入框、按钮都不会触发点击效果，因为touchstart方法被拦截之后那些没有申明touchstart事件的控件的默认响应都被取消了。\n\n稍稍改进下代码，使得button和input能正常操作：\n\n    //屏蔽下拉滑动\n    $(window).on(\"touchstart\",function (e) {\n        if(e.touches[0].target.nodeName!=\"BUTTON\" && e.touches[0].target.nodeName!=\"INPUT\"){\n            e.preventDefault();\n        }\n    })\n    \n现在唯一的问题是点在按钮或者输入框上依然可以触发下拉露出黑条。\n\n再换一个思路，下拉出现黑条必然的操作都是手指滑动也就是touchmove时间，而点击只涉及到touchstart和touchend事件，那么我们只需要防止touchmove事件触发默认行为似乎就可以了：\n\n    $(window).on(\"touchmove\",function (e) {\n        e.preventDefault();\n    })\n\n果然有作用，只是这个方式满足了现在的长按需求，但是到了需要有滑动手势的时候依然需要特殊处理，并没有十全十美的处理方案\n\n##完整代码\n\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t    <meta charset=\"UTF-8\">\n\t    <title>Title</title>\n\t</head>\n\t<script src=\"js/jquery-3.1.0.min.js\"></script>\n\t<style>\n\t    /*屏蔽长按选中文字*/\n\t    *:not(input,textarea){\n\t        -webkit-touch-callout:none;  /*系统默认菜单被禁用*/\n\t        -webkit-user-select:none; /*webkit浏览器*/\n\t        -khtml-user-select:none; /*早期浏览器*/\n\t        -moz-user-select:none;/*火狐*/\n\t        -ms-user-select:none; /*IE10*/\n\t        user-select:none;\n\t    }\n\t\n\t</style>\n\t<body>\n\t<button style=\"width: 200px;height: 200px;background-color: cornsilk;font-size: 64px\">点我</button><br><br>\n\t<input style=\"width: 300px;height: 50px;background-color: cornsilk;font-size: 44px\"><br><br>\n\t<div style=\"width: 300px;height: 150px;background-color: antiquewhite;font-size: 64px\">长按测试</div><br><br>\n\t<div style=\"width: 300px;height: 150px;background-color: red;font-size: 64px\">长按测试</div><br><br>\n\t<div  style=\"width: 500px;height: 700px;position: relative;\">\n\t    <img src=\"resource/bg.png\" width=\"100%\" height=\"100%\">\n\t    <div id=\"mask\" style=\"position: absolute;top:0;left:0;width: 100%;height: 100%;z-index: 1000\"></div>\n\t</div>\n\t</body>\n\t</html>\n\t\n\t<script>\n\t    var handle ;\n\t    $(\"#mask\").on(\"touchstart\",function (e) {\n\t//        e.preventDefault();\n\t        clearInterval(handle);\n\t        handle = setInterval(function (e) {\n\t            console.log(\"longpress\")\n\t        },500)\n\t    }).on(\"touchend\",function () {\n\t        clearInterval(handle);\n\t    })\n\t    //屏蔽下拉滑动\n\t    $(window).on(\"touchmove\",function (e) {\n\t        e.preventDefault();\n\t    })\n\t\n\t    //屏蔽长按菜单\n\t    document.body.addEventListener('contextmenu', function(e){\n\t        e.preventDefault();\n\t    });\n\t\n\t    $(\"img\").on(\"touchstart\",function (e) {\n\t        e.preventDefault();\n\t        e.stopPropagation();\n\t    });\n\t\n\t    document.querySelector(\"img\").addEventListener('touchstart', function(e){\n\t        e.preventDefault();\n\t    });\n\t</script>","source":"_posts/h5-long-push.md","raw":"---\ntitle: H5中的长按和滑动手势操作\ndate: 2017-07-19 13:37:33\ntags: \n  - H5\n  - touchstart\n  - touchend\n  - 手势\n  - 移动端\n  \ncategories:\n  - H5\n---\n\n在移动端H5中如果设计了一些需要长按或者滑动的手势操作有可能会和系统默认的一些操作相冲突，所以在编写这些手势时需要做一些特定的处理。<font color=red>为方便代码编写本文使用jQuey库。</font>\n\n## 浏览器默认长按事件\n\n为了更好的测试我们构建一个有多个元素构成的页面\n\n\t<body>\n\t\t<button style=\"width: 200px;height: 200px;background-color: cornsilk;font-size: 64px\">点我</button><br><br>\n\t\t<input style=\"width: 300px;height: 50px;background-color: cornsilk;font-size: 44px\"><br><br>\n\t\t<div style=\"width: 300px;height: 150px;background-color: antiquewhite;font-size: 64px\">长按测试</div><br><br>\n\t\t<div style=\"width: 300px;height: 150px;background-color: red;font-size: 64px\">长按测试</div><br><br>\n\t\t<img src=\"resource/bg.png\">\n\t</body>\n\n我们先从chrome开始，虽然我们的目标是移动端，但是为了方便期间都会在chrome上模拟手机端的进行第一步调试。\n主要的默认行为是：\n\n* 长按空白处、图片、输入框，弹出默认系统弹框\n\n <img src=\"h5-long-push/i1.png\" width = \"300\"  alt=\"图片名称\" align=center />\n\n* 长按带有文字的控件会选中文字\n\n <img src=\"h5-long-push/i2.png\" width = \"100\"  alt=\"图片名称\" align=center />\n\n\n接下来是iOS\n* 长按带有文字的控件会选中文字\n* 长按图片会出现保存图像、分享之类的系统菜单\n* 长按任何位置出现放大镜\n\n<img src=\"h5-long-push/i3.png\" width = \"300\"  alt=\"图片名称\" align=center />\n\n再来安卓：\n* 长按带有文字的控件会选中文字或者相同功能的菜单\n* 长按图片会出现保存图像、分享之类的系统菜单\n\n在我们需要实现自己的长按手势功能时以上的默认操作都是妨碍我们用户体验的绊脚石，所以我们要把他们一个一个搬掉。\n\n<!--more-->\n\n## 屏蔽系统默认菜单\n屏蔽系统默认弹出框可以使用以下代码：\n\n    //屏蔽长按菜单\n    document.body.addEventListener('contextmenu', function(e){\n        e.preventDefault();\n    });\n\n在chrome（PC和Android）、safari上测试下，疗效很好。。。弹出菜单都没有了。虽然在腾讯系的浏览器（QQ浏览器、微信、QQ）上还有问题，但是我们等会儿来处理，先来讲讲上面代码用到的方法和事件。\n\n### oncontextmenu事件\n\noncontextmenu 事件在元素中用户右击鼠标时触发并打开上下文菜单。为了避免菜单的弹出，我们捕获了body节点的contextmenu事件，并且使用preventDefault阻止其默认动作的触发。\n\n### preventDefault()、stopPropagation()、return false 之间的区别\n前面代码用到了`preventDefault`方法，这个方法很常用，但是很容易和`stopPropagation`以及`return false`的用法混淆起来。\n具体的区别可以看[这篇文章](http://www.cnblogs.com/dannyxie/p/5642727.html).\n\n简单来讲：\n\n* `preventDefault`阻止浏览器执行默认动作\n* `stopPropagation`阻止事件的冒泡上传\n* `renturn false`相当于立即退出当前函数并且执行`preventDefault`和`stopPropagation`方法\n* `stopImmediatePropagation`立即停止时间继续执行，即使在同一个节点上还绑定了其他事件，这个取决于绑定事件的先后顺序，很危险所以不常用\n\n所以这里的需求我们用`preventDefault`就足够了\n\n## 屏蔽图片弹出菜单\n虽然在chrome、safari上屏蔽了默认菜单，但是在腾讯系的浏览器上无论哪个平台点击图片依然会弹出菜单。\n翻遍网络并没有直接解决这个弹出菜单的办法可能是在App里面用native代码监控了这个点击事件，所以H5无法跳过这个菜单。\n我们只能用曲线救国的方式了：\n大致三种方式:\n* 使用div，在div的background-image里绘制图片（QQ浏览器里依然有问题，但是微信和QQ上解决问题）\n* 使用canvas绘制图片\n* 在img上盖一个透明div，在透明div上实现交互操作\n\n以下的代码将使用第三种解决方案：\n\n\t<div  style=\"width: 500px;height: 700px;position: relative;\">\n\t    <img src=\"resource/bg.png\" width=\"100%\" height=\"100%\">\n\t    <div style=\"position: absolute;top:0;left:0;width: 100%;height: 100%;z-index: 1000\"></div>\n\t</div>\n\n## 屏蔽长按选中\n使用CSS的方法进行屏蔽：\n\n    *{\n        -webkit-touch-callout:none;  /*系统默认菜单被禁用*/\n        -webkit-user-select:none; /*webkit浏览器*/\n        -khtml-user-select:none; /*早期浏览器*/\n        -moz-user-select:none;/*火狐*/\n        -ms-user-select:none; /*IE10*/\n        user-select:none;\n    }\n\n测试一下，长按选中文字、放大镜都没有了，很爽！但是。。。但是！iOS中的input控件也不能输入文字了。。。这还得了，必须要改！！\n    \n    *:not(input,textarea){\n        -webkit-touch-callout:none;  /*系统默认菜单被禁用*/\n        -webkit-user-select:none; /*webkit浏览器*/\n        -khtml-user-select:none; /*早期浏览器*/\n        -moz-user-select:none;/*火狐*/\n        -ms-user-select:none; /*IE10*/\n        user-select:none;\n    }\n\n这下真爽了，唯一的问题是祈祷产品千万不要设计出在input上长按的交互。\n\n到此为止，系统自带的默认长按响应都被我们屏蔽了，唯一有问题的是QQ浏览器，在长按页面空白部位时依然有弹出菜单，这个就真没办法了。。。您还是弄个背景div把页面撑满吧。。。\n\n## 长按手势的实现\n\n在H5中是没有长按这个时间触发的，所以比较麻烦的是必须自己实现长按的手势判断，下面是一个简单的JS判断代码：\n\n    var handle ;\n    $(\"img\").on(\"touchstart\",function () {\n        clearInterval(handle);\n        handle = setInterval(function () {\n            console.log(\"longpress\")\n        },500)\n    }).on(\"touchend\",function () {\n        clearInterval(handle);\n    })\n\n跑一下在控制台正常输出了longpress，代码在iOS和Android端都好使。\n\n## 滑动\n到目前为止还有一个问题，在手机端长按向下滑动会拖动整个页面，如下图：\n\n<img src=\"h5-long-push/i4.png\" width = \"300\"  alt=\"图片名称\" align=center />\n\n直觉上我们可以用`preventDefault`禁止浏览器的默认滑动行为，马上试一下：\n\n    $(window).on(\"touchstart\",function (e) {\n        e.preventDefault();\n    }).on(\"touchend\",function (e) {\n        e.preventDefault();\n    })\n\n果然好使，我们的问题基本解决了（在屏幕左边向右滑动会后退的问题没法解决，因为这不是h5行为，所以请不要设计屏幕左侧像右滑动的交互）\n\n但是等一等。。。一旦屏蔽了window（或者body）的默认行为，一些控件比如页面上的输入框、按钮都不会触发点击效果，因为touchstart方法被拦截之后那些没有申明touchstart事件的控件的默认响应都被取消了。\n\n稍稍改进下代码，使得button和input能正常操作：\n\n    //屏蔽下拉滑动\n    $(window).on(\"touchstart\",function (e) {\n        if(e.touches[0].target.nodeName!=\"BUTTON\" && e.touches[0].target.nodeName!=\"INPUT\"){\n            e.preventDefault();\n        }\n    })\n    \n现在唯一的问题是点在按钮或者输入框上依然可以触发下拉露出黑条。\n\n再换一个思路，下拉出现黑条必然的操作都是手指滑动也就是touchmove时间，而点击只涉及到touchstart和touchend事件，那么我们只需要防止touchmove事件触发默认行为似乎就可以了：\n\n    $(window).on(\"touchmove\",function (e) {\n        e.preventDefault();\n    })\n\n果然有作用，只是这个方式满足了现在的长按需求，但是到了需要有滑动手势的时候依然需要特殊处理，并没有十全十美的处理方案\n\n##完整代码\n\n\t<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<head>\n\t    <meta charset=\"UTF-8\">\n\t    <title>Title</title>\n\t</head>\n\t<script src=\"js/jquery-3.1.0.min.js\"></script>\n\t<style>\n\t    /*屏蔽长按选中文字*/\n\t    *:not(input,textarea){\n\t        -webkit-touch-callout:none;  /*系统默认菜单被禁用*/\n\t        -webkit-user-select:none; /*webkit浏览器*/\n\t        -khtml-user-select:none; /*早期浏览器*/\n\t        -moz-user-select:none;/*火狐*/\n\t        -ms-user-select:none; /*IE10*/\n\t        user-select:none;\n\t    }\n\t\n\t</style>\n\t<body>\n\t<button style=\"width: 200px;height: 200px;background-color: cornsilk;font-size: 64px\">点我</button><br><br>\n\t<input style=\"width: 300px;height: 50px;background-color: cornsilk;font-size: 44px\"><br><br>\n\t<div style=\"width: 300px;height: 150px;background-color: antiquewhite;font-size: 64px\">长按测试</div><br><br>\n\t<div style=\"width: 300px;height: 150px;background-color: red;font-size: 64px\">长按测试</div><br><br>\n\t<div  style=\"width: 500px;height: 700px;position: relative;\">\n\t    <img src=\"resource/bg.png\" width=\"100%\" height=\"100%\">\n\t    <div id=\"mask\" style=\"position: absolute;top:0;left:0;width: 100%;height: 100%;z-index: 1000\"></div>\n\t</div>\n\t</body>\n\t</html>\n\t\n\t<script>\n\t    var handle ;\n\t    $(\"#mask\").on(\"touchstart\",function (e) {\n\t//        e.preventDefault();\n\t        clearInterval(handle);\n\t        handle = setInterval(function (e) {\n\t            console.log(\"longpress\")\n\t        },500)\n\t    }).on(\"touchend\",function () {\n\t        clearInterval(handle);\n\t    })\n\t    //屏蔽下拉滑动\n\t    $(window).on(\"touchmove\",function (e) {\n\t        e.preventDefault();\n\t    })\n\t\n\t    //屏蔽长按菜单\n\t    document.body.addEventListener('contextmenu', function(e){\n\t        e.preventDefault();\n\t    });\n\t\n\t    $(\"img\").on(\"touchstart\",function (e) {\n\t        e.preventDefault();\n\t        e.stopPropagation();\n\t    });\n\t\n\t    document.querySelector(\"img\").addEventListener('touchstart', function(e){\n\t        e.preventDefault();\n\t    });\n\t</script>","slug":"h5-long-push","published":1,"updated":"2017-08-03T02:48:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5w0cuft0002ij664vylva4w","content":"<p>在移动端H5中如果设计了一些需要长按或者滑动的手势操作有可能会和系统默认的一些操作相冲突，所以在编写这些手势时需要做一些特定的处理。<font color=\"red\">为方便代码编写本文使用jQuey库。</font></p>\n<h2 id=\"浏览器默认长按事件\"><a href=\"#浏览器默认长按事件\" class=\"headerlink\" title=\"浏览器默认长按事件\"></a>浏览器默认长按事件</h2><p>为了更好的测试我们构建一个有多个元素构成的页面</p>\n<pre><code>&lt;body&gt;\n    &lt;button style=&quot;width: 200px;height: 200px;background-color: cornsilk;font-size: 64px&quot;&gt;点我&lt;/button&gt;&lt;br&gt;&lt;br&gt;\n    &lt;input style=&quot;width: 300px;height: 50px;background-color: cornsilk;font-size: 44px&quot;&gt;&lt;br&gt;&lt;br&gt;\n    &lt;div style=&quot;width: 300px;height: 150px;background-color: antiquewhite;font-size: 64px&quot;&gt;长按测试&lt;/div&gt;&lt;br&gt;&lt;br&gt;\n    &lt;div style=&quot;width: 300px;height: 150px;background-color: red;font-size: 64px&quot;&gt;长按测试&lt;/div&gt;&lt;br&gt;&lt;br&gt;\n    &lt;img src=&quot;resource/bg.png&quot;&gt;\n&lt;/body&gt;\n</code></pre><p>我们先从chrome开始，虽然我们的目标是移动端，但是为了方便期间都会在chrome上模拟手机端的进行第一步调试。<br>主要的默认行为是：</p>\n<ul>\n<li><p>长按空白处、图片、输入框，弹出默认系统弹框</p>\n<p><img src=\"/2017/07/19/h5-long-push/i1.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n</li>\n<li><p>长按带有文字的控件会选中文字</p>\n<p><img src=\"/2017/07/19/h5-long-push/i2.png\" width=\"100\" alt=\"图片名称\" align=\"center\"></p>\n</li>\n</ul>\n<p>接下来是iOS</p>\n<ul>\n<li>长按带有文字的控件会选中文字</li>\n<li>长按图片会出现保存图像、分享之类的系统菜单</li>\n<li>长按任何位置出现放大镜</li>\n</ul>\n<p><img src=\"/2017/07/19/h5-long-push/i3.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>再来安卓：</p>\n<ul>\n<li>长按带有文字的控件会选中文字或者相同功能的菜单</li>\n<li>长按图片会出现保存图像、分享之类的系统菜单</li>\n</ul>\n<p>在我们需要实现自己的长按手势功能时以上的默认操作都是妨碍我们用户体验的绊脚石，所以我们要把他们一个一个搬掉。</p>\n<a id=\"more\"></a>\n<h2 id=\"屏蔽系统默认菜单\"><a href=\"#屏蔽系统默认菜单\" class=\"headerlink\" title=\"屏蔽系统默认菜单\"></a>屏蔽系统默认菜单</h2><p>屏蔽系统默认弹出框可以使用以下代码：</p>\n<pre><code>//屏蔽长按菜单\ndocument.body.addEventListener(&apos;contextmenu&apos;, function(e){\n    e.preventDefault();\n});\n</code></pre><p>在chrome（PC和Android）、safari上测试下，疗效很好。。。弹出菜单都没有了。虽然在腾讯系的浏览器（QQ浏览器、微信、QQ）上还有问题，但是我们等会儿来处理，先来讲讲上面代码用到的方法和事件。</p>\n<h3 id=\"oncontextmenu事件\"><a href=\"#oncontextmenu事件\" class=\"headerlink\" title=\"oncontextmenu事件\"></a>oncontextmenu事件</h3><p>oncontextmenu 事件在元素中用户右击鼠标时触发并打开上下文菜单。为了避免菜单的弹出，我们捕获了body节点的contextmenu事件，并且使用preventDefault阻止其默认动作的触发。</p>\n<h3 id=\"preventDefault-、stopPropagation-、return-false-之间的区别\"><a href=\"#preventDefault-、stopPropagation-、return-false-之间的区别\" class=\"headerlink\" title=\"preventDefault()、stopPropagation()、return false 之间的区别\"></a>preventDefault()、stopPropagation()、return false 之间的区别</h3><p>前面代码用到了<code>preventDefault</code>方法，这个方法很常用，但是很容易和<code>stopPropagation</code>以及<code>return false</code>的用法混淆起来。<br>具体的区别可以看<a href=\"http://www.cnblogs.com/dannyxie/p/5642727.html\" target=\"_blank\" rel=\"external\">这篇文章</a>.</p>\n<p>简单来讲：</p>\n<ul>\n<li><code>preventDefault</code>阻止浏览器执行默认动作</li>\n<li><code>stopPropagation</code>阻止事件的冒泡上传</li>\n<li><code>renturn false</code>相当于立即退出当前函数并且执行<code>preventDefault</code>和<code>stopPropagation</code>方法</li>\n<li><code>stopImmediatePropagation</code>立即停止时间继续执行，即使在同一个节点上还绑定了其他事件，这个取决于绑定事件的先后顺序，很危险所以不常用</li>\n</ul>\n<p>所以这里的需求我们用<code>preventDefault</code>就足够了</p>\n<h2 id=\"屏蔽图片弹出菜单\"><a href=\"#屏蔽图片弹出菜单\" class=\"headerlink\" title=\"屏蔽图片弹出菜单\"></a>屏蔽图片弹出菜单</h2><p>虽然在chrome、safari上屏蔽了默认菜单，但是在腾讯系的浏览器上无论哪个平台点击图片依然会弹出菜单。<br>翻遍网络并没有直接解决这个弹出菜单的办法可能是在App里面用native代码监控了这个点击事件，所以H5无法跳过这个菜单。<br>我们只能用曲线救国的方式了：<br>大致三种方式:</p>\n<ul>\n<li>使用div，在div的background-image里绘制图片（QQ浏览器里依然有问题，但是微信和QQ上解决问题）</li>\n<li>使用canvas绘制图片</li>\n<li>在img上盖一个透明div，在透明div上实现交互操作</li>\n</ul>\n<p>以下的代码将使用第三种解决方案：</p>\n<pre><code>&lt;div  style=&quot;width: 500px;height: 700px;position: relative;&quot;&gt;\n    &lt;img src=&quot;resource/bg.png&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt;\n    &lt;div style=&quot;position: absolute;top:0;left:0;width: 100%;height: 100%;z-index: 1000&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre><h2 id=\"屏蔽长按选中\"><a href=\"#屏蔽长按选中\" class=\"headerlink\" title=\"屏蔽长按选中\"></a>屏蔽长按选中</h2><p>使用CSS的方法进行屏蔽：</p>\n<pre><code>*{\n    -webkit-touch-callout:none;  /*系统默认菜单被禁用*/\n    -webkit-user-select:none; /*webkit浏览器*/\n    -khtml-user-select:none; /*早期浏览器*/\n    -moz-user-select:none;/*火狐*/\n    -ms-user-select:none; /*IE10*/\n    user-select:none;\n}\n</code></pre><p>测试一下，长按选中文字、放大镜都没有了，很爽！但是。。。但是！iOS中的input控件也不能输入文字了。。。这还得了，必须要改！！</p>\n<pre><code>*:not(input,textarea){\n    -webkit-touch-callout:none;  /*系统默认菜单被禁用*/\n    -webkit-user-select:none; /*webkit浏览器*/\n    -khtml-user-select:none; /*早期浏览器*/\n    -moz-user-select:none;/*火狐*/\n    -ms-user-select:none; /*IE10*/\n    user-select:none;\n}\n</code></pre><p>这下真爽了，唯一的问题是祈祷产品千万不要设计出在input上长按的交互。</p>\n<p>到此为止，系统自带的默认长按响应都被我们屏蔽了，唯一有问题的是QQ浏览器，在长按页面空白部位时依然有弹出菜单，这个就真没办法了。。。您还是弄个背景div把页面撑满吧。。。</p>\n<h2 id=\"长按手势的实现\"><a href=\"#长按手势的实现\" class=\"headerlink\" title=\"长按手势的实现\"></a>长按手势的实现</h2><p>在H5中是没有长按这个时间触发的，所以比较麻烦的是必须自己实现长按的手势判断，下面是一个简单的JS判断代码：</p>\n<pre><code>var handle ;\n$(&quot;img&quot;).on(&quot;touchstart&quot;,function () {\n    clearInterval(handle);\n    handle = setInterval(function () {\n        console.log(&quot;longpress&quot;)\n    },500)\n}).on(&quot;touchend&quot;,function () {\n    clearInterval(handle);\n})\n</code></pre><p>跑一下在控制台正常输出了longpress，代码在iOS和Android端都好使。</p>\n<h2 id=\"滑动\"><a href=\"#滑动\" class=\"headerlink\" title=\"滑动\"></a>滑动</h2><p>到目前为止还有一个问题，在手机端长按向下滑动会拖动整个页面，如下图：</p>\n<p><img src=\"/2017/07/19/h5-long-push/i4.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>直觉上我们可以用<code>preventDefault</code>禁止浏览器的默认滑动行为，马上试一下：</p>\n<pre><code>$(window).on(&quot;touchstart&quot;,function (e) {\n    e.preventDefault();\n}).on(&quot;touchend&quot;,function (e) {\n    e.preventDefault();\n})\n</code></pre><p>果然好使，我们的问题基本解决了（在屏幕左边向右滑动会后退的问题没法解决，因为这不是h5行为，所以请不要设计屏幕左侧像右滑动的交互）</p>\n<p>但是等一等。。。一旦屏蔽了window（或者body）的默认行为，一些控件比如页面上的输入框、按钮都不会触发点击效果，因为touchstart方法被拦截之后那些没有申明touchstart事件的控件的默认响应都被取消了。</p>\n<p>稍稍改进下代码，使得button和input能正常操作：</p>\n<pre><code>//屏蔽下拉滑动\n$(window).on(&quot;touchstart&quot;,function (e) {\n    if(e.touches[0].target.nodeName!=&quot;BUTTON&quot; &amp;&amp; e.touches[0].target.nodeName!=&quot;INPUT&quot;){\n        e.preventDefault();\n    }\n})\n</code></pre><p>现在唯一的问题是点在按钮或者输入框上依然可以触发下拉露出黑条。</p>\n<p>再换一个思路，下拉出现黑条必然的操作都是手指滑动也就是touchmove时间，而点击只涉及到touchstart和touchend事件，那么我们只需要防止touchmove事件触发默认行为似乎就可以了：</p>\n<pre><code>$(window).on(&quot;touchmove&quot;,function (e) {\n    e.preventDefault();\n})\n</code></pre><p>果然有作用，只是这个方式满足了现在的长按需求，但是到了需要有滑动手势的时候依然需要特殊处理，并没有十全十美的处理方案</p>\n<p>##完整代码</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;script src=&quot;js/jquery-3.1.0.min.js&quot;&gt;&lt;/script&gt;\n&lt;style&gt;\n    /*屏蔽长按选中文字*/\n    *:not(input,textarea){\n        -webkit-touch-callout:none;  /*系统默认菜单被禁用*/\n        -webkit-user-select:none; /*webkit浏览器*/\n        -khtml-user-select:none; /*早期浏览器*/\n        -moz-user-select:none;/*火狐*/\n        -ms-user-select:none; /*IE10*/\n        user-select:none;\n    }\n\n&lt;/style&gt;\n&lt;body&gt;\n&lt;button style=&quot;width: 200px;height: 200px;background-color: cornsilk;font-size: 64px&quot;&gt;点我&lt;/button&gt;&lt;br&gt;&lt;br&gt;\n&lt;input style=&quot;width: 300px;height: 50px;background-color: cornsilk;font-size: 44px&quot;&gt;&lt;br&gt;&lt;br&gt;\n&lt;div style=&quot;width: 300px;height: 150px;background-color: antiquewhite;font-size: 64px&quot;&gt;长按测试&lt;/div&gt;&lt;br&gt;&lt;br&gt;\n&lt;div style=&quot;width: 300px;height: 150px;background-color: red;font-size: 64px&quot;&gt;长按测试&lt;/div&gt;&lt;br&gt;&lt;br&gt;\n&lt;div  style=&quot;width: 500px;height: 700px;position: relative;&quot;&gt;\n    &lt;img src=&quot;resource/bg.png&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt;\n    &lt;div id=&quot;mask&quot; style=&quot;position: absolute;top:0;left:0;width: 100%;height: 100%;z-index: 1000&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n&lt;script&gt;\n    var handle ;\n    $(&quot;#mask&quot;).on(&quot;touchstart&quot;,function (e) {\n//        e.preventDefault();\n        clearInterval(handle);\n        handle = setInterval(function (e) {\n            console.log(&quot;longpress&quot;)\n        },500)\n    }).on(&quot;touchend&quot;,function () {\n        clearInterval(handle);\n    })\n    //屏蔽下拉滑动\n    $(window).on(&quot;touchmove&quot;,function (e) {\n        e.preventDefault();\n    })\n\n    //屏蔽长按菜单\n    document.body.addEventListener(&apos;contextmenu&apos;, function(e){\n        e.preventDefault();\n    });\n\n    $(&quot;img&quot;).on(&quot;touchstart&quot;,function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n    });\n\n    document.querySelector(&quot;img&quot;).addEventListener(&apos;touchstart&apos;, function(e){\n        e.preventDefault();\n    });\n&lt;/script&gt;\n</code></pre>","site":{"data":{}},"excerpt":"<p>在移动端H5中如果设计了一些需要长按或者滑动的手势操作有可能会和系统默认的一些操作相冲突，所以在编写这些手势时需要做一些特定的处理。<font color=\"red\">为方便代码编写本文使用jQuey库。</font></p>\n<h2 id=\"浏览器默认长按事件\"><a href=\"#浏览器默认长按事件\" class=\"headerlink\" title=\"浏览器默认长按事件\"></a>浏览器默认长按事件</h2><p>为了更好的测试我们构建一个有多个元素构成的页面</p>\n<pre><code>&lt;body&gt;\n    &lt;button style=&quot;width: 200px;height: 200px;background-color: cornsilk;font-size: 64px&quot;&gt;点我&lt;/button&gt;&lt;br&gt;&lt;br&gt;\n    &lt;input style=&quot;width: 300px;height: 50px;background-color: cornsilk;font-size: 44px&quot;&gt;&lt;br&gt;&lt;br&gt;\n    &lt;div style=&quot;width: 300px;height: 150px;background-color: antiquewhite;font-size: 64px&quot;&gt;长按测试&lt;/div&gt;&lt;br&gt;&lt;br&gt;\n    &lt;div style=&quot;width: 300px;height: 150px;background-color: red;font-size: 64px&quot;&gt;长按测试&lt;/div&gt;&lt;br&gt;&lt;br&gt;\n    &lt;img src=&quot;resource/bg.png&quot;&gt;\n&lt;/body&gt;\n</code></pre><p>我们先从chrome开始，虽然我们的目标是移动端，但是为了方便期间都会在chrome上模拟手机端的进行第一步调试。<br>主要的默认行为是：</p>\n<ul>\n<li><p>长按空白处、图片、输入框，弹出默认系统弹框</p>\n<p><img src=\"/2017/07/19/h5-long-push/i1.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n</li>\n<li><p>长按带有文字的控件会选中文字</p>\n<p><img src=\"/2017/07/19/h5-long-push/i2.png\" width=\"100\" alt=\"图片名称\" align=\"center\"></p>\n</li>\n</ul>\n<p>接下来是iOS</p>\n<ul>\n<li>长按带有文字的控件会选中文字</li>\n<li>长按图片会出现保存图像、分享之类的系统菜单</li>\n<li>长按任何位置出现放大镜</li>\n</ul>\n<p><img src=\"/2017/07/19/h5-long-push/i3.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>再来安卓：</p>\n<ul>\n<li>长按带有文字的控件会选中文字或者相同功能的菜单</li>\n<li>长按图片会出现保存图像、分享之类的系统菜单</li>\n</ul>\n<p>在我们需要实现自己的长按手势功能时以上的默认操作都是妨碍我们用户体验的绊脚石，所以我们要把他们一个一个搬掉。</p>","more":"<h2 id=\"屏蔽系统默认菜单\"><a href=\"#屏蔽系统默认菜单\" class=\"headerlink\" title=\"屏蔽系统默认菜单\"></a>屏蔽系统默认菜单</h2><p>屏蔽系统默认弹出框可以使用以下代码：</p>\n<pre><code>//屏蔽长按菜单\ndocument.body.addEventListener(&apos;contextmenu&apos;, function(e){\n    e.preventDefault();\n});\n</code></pre><p>在chrome（PC和Android）、safari上测试下，疗效很好。。。弹出菜单都没有了。虽然在腾讯系的浏览器（QQ浏览器、微信、QQ）上还有问题，但是我们等会儿来处理，先来讲讲上面代码用到的方法和事件。</p>\n<h3 id=\"oncontextmenu事件\"><a href=\"#oncontextmenu事件\" class=\"headerlink\" title=\"oncontextmenu事件\"></a>oncontextmenu事件</h3><p>oncontextmenu 事件在元素中用户右击鼠标时触发并打开上下文菜单。为了避免菜单的弹出，我们捕获了body节点的contextmenu事件，并且使用preventDefault阻止其默认动作的触发。</p>\n<h3 id=\"preventDefault-、stopPropagation-、return-false-之间的区别\"><a href=\"#preventDefault-、stopPropagation-、return-false-之间的区别\" class=\"headerlink\" title=\"preventDefault()、stopPropagation()、return false 之间的区别\"></a>preventDefault()、stopPropagation()、return false 之间的区别</h3><p>前面代码用到了<code>preventDefault</code>方法，这个方法很常用，但是很容易和<code>stopPropagation</code>以及<code>return false</code>的用法混淆起来。<br>具体的区别可以看<a href=\"http://www.cnblogs.com/dannyxie/p/5642727.html\" target=\"_blank\" rel=\"external\">这篇文章</a>.</p>\n<p>简单来讲：</p>\n<ul>\n<li><code>preventDefault</code>阻止浏览器执行默认动作</li>\n<li><code>stopPropagation</code>阻止事件的冒泡上传</li>\n<li><code>renturn false</code>相当于立即退出当前函数并且执行<code>preventDefault</code>和<code>stopPropagation</code>方法</li>\n<li><code>stopImmediatePropagation</code>立即停止时间继续执行，即使在同一个节点上还绑定了其他事件，这个取决于绑定事件的先后顺序，很危险所以不常用</li>\n</ul>\n<p>所以这里的需求我们用<code>preventDefault</code>就足够了</p>\n<h2 id=\"屏蔽图片弹出菜单\"><a href=\"#屏蔽图片弹出菜单\" class=\"headerlink\" title=\"屏蔽图片弹出菜单\"></a>屏蔽图片弹出菜单</h2><p>虽然在chrome、safari上屏蔽了默认菜单，但是在腾讯系的浏览器上无论哪个平台点击图片依然会弹出菜单。<br>翻遍网络并没有直接解决这个弹出菜单的办法可能是在App里面用native代码监控了这个点击事件，所以H5无法跳过这个菜单。<br>我们只能用曲线救国的方式了：<br>大致三种方式:</p>\n<ul>\n<li>使用div，在div的background-image里绘制图片（QQ浏览器里依然有问题，但是微信和QQ上解决问题）</li>\n<li>使用canvas绘制图片</li>\n<li>在img上盖一个透明div，在透明div上实现交互操作</li>\n</ul>\n<p>以下的代码将使用第三种解决方案：</p>\n<pre><code>&lt;div  style=&quot;width: 500px;height: 700px;position: relative;&quot;&gt;\n    &lt;img src=&quot;resource/bg.png&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt;\n    &lt;div style=&quot;position: absolute;top:0;left:0;width: 100%;height: 100%;z-index: 1000&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre><h2 id=\"屏蔽长按选中\"><a href=\"#屏蔽长按选中\" class=\"headerlink\" title=\"屏蔽长按选中\"></a>屏蔽长按选中</h2><p>使用CSS的方法进行屏蔽：</p>\n<pre><code>*{\n    -webkit-touch-callout:none;  /*系统默认菜单被禁用*/\n    -webkit-user-select:none; /*webkit浏览器*/\n    -khtml-user-select:none; /*早期浏览器*/\n    -moz-user-select:none;/*火狐*/\n    -ms-user-select:none; /*IE10*/\n    user-select:none;\n}\n</code></pre><p>测试一下，长按选中文字、放大镜都没有了，很爽！但是。。。但是！iOS中的input控件也不能输入文字了。。。这还得了，必须要改！！</p>\n<pre><code>*:not(input,textarea){\n    -webkit-touch-callout:none;  /*系统默认菜单被禁用*/\n    -webkit-user-select:none; /*webkit浏览器*/\n    -khtml-user-select:none; /*早期浏览器*/\n    -moz-user-select:none;/*火狐*/\n    -ms-user-select:none; /*IE10*/\n    user-select:none;\n}\n</code></pre><p>这下真爽了，唯一的问题是祈祷产品千万不要设计出在input上长按的交互。</p>\n<p>到此为止，系统自带的默认长按响应都被我们屏蔽了，唯一有问题的是QQ浏览器，在长按页面空白部位时依然有弹出菜单，这个就真没办法了。。。您还是弄个背景div把页面撑满吧。。。</p>\n<h2 id=\"长按手势的实现\"><a href=\"#长按手势的实现\" class=\"headerlink\" title=\"长按手势的实现\"></a>长按手势的实现</h2><p>在H5中是没有长按这个时间触发的，所以比较麻烦的是必须自己实现长按的手势判断，下面是一个简单的JS判断代码：</p>\n<pre><code>var handle ;\n$(&quot;img&quot;).on(&quot;touchstart&quot;,function () {\n    clearInterval(handle);\n    handle = setInterval(function () {\n        console.log(&quot;longpress&quot;)\n    },500)\n}).on(&quot;touchend&quot;,function () {\n    clearInterval(handle);\n})\n</code></pre><p>跑一下在控制台正常输出了longpress，代码在iOS和Android端都好使。</p>\n<h2 id=\"滑动\"><a href=\"#滑动\" class=\"headerlink\" title=\"滑动\"></a>滑动</h2><p>到目前为止还有一个问题，在手机端长按向下滑动会拖动整个页面，如下图：</p>\n<p><img src=\"/2017/07/19/h5-long-push/i4.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>直觉上我们可以用<code>preventDefault</code>禁止浏览器的默认滑动行为，马上试一下：</p>\n<pre><code>$(window).on(&quot;touchstart&quot;,function (e) {\n    e.preventDefault();\n}).on(&quot;touchend&quot;,function (e) {\n    e.preventDefault();\n})\n</code></pre><p>果然好使，我们的问题基本解决了（在屏幕左边向右滑动会后退的问题没法解决，因为这不是h5行为，所以请不要设计屏幕左侧像右滑动的交互）</p>\n<p>但是等一等。。。一旦屏蔽了window（或者body）的默认行为，一些控件比如页面上的输入框、按钮都不会触发点击效果，因为touchstart方法被拦截之后那些没有申明touchstart事件的控件的默认响应都被取消了。</p>\n<p>稍稍改进下代码，使得button和input能正常操作：</p>\n<pre><code>//屏蔽下拉滑动\n$(window).on(&quot;touchstart&quot;,function (e) {\n    if(e.touches[0].target.nodeName!=&quot;BUTTON&quot; &amp;&amp; e.touches[0].target.nodeName!=&quot;INPUT&quot;){\n        e.preventDefault();\n    }\n})\n</code></pre><p>现在唯一的问题是点在按钮或者输入框上依然可以触发下拉露出黑条。</p>\n<p>再换一个思路，下拉出现黑条必然的操作都是手指滑动也就是touchmove时间，而点击只涉及到touchstart和touchend事件，那么我们只需要防止touchmove事件触发默认行为似乎就可以了：</p>\n<pre><code>$(window).on(&quot;touchmove&quot;,function (e) {\n    e.preventDefault();\n})\n</code></pre><p>果然有作用，只是这个方式满足了现在的长按需求，但是到了需要有滑动手势的时候依然需要特殊处理，并没有十全十美的处理方案</p>\n<p>##完整代码</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;script src=&quot;js/jquery-3.1.0.min.js&quot;&gt;&lt;/script&gt;\n&lt;style&gt;\n    /*屏蔽长按选中文字*/\n    *:not(input,textarea){\n        -webkit-touch-callout:none;  /*系统默认菜单被禁用*/\n        -webkit-user-select:none; /*webkit浏览器*/\n        -khtml-user-select:none; /*早期浏览器*/\n        -moz-user-select:none;/*火狐*/\n        -ms-user-select:none; /*IE10*/\n        user-select:none;\n    }\n\n&lt;/style&gt;\n&lt;body&gt;\n&lt;button style=&quot;width: 200px;height: 200px;background-color: cornsilk;font-size: 64px&quot;&gt;点我&lt;/button&gt;&lt;br&gt;&lt;br&gt;\n&lt;input style=&quot;width: 300px;height: 50px;background-color: cornsilk;font-size: 44px&quot;&gt;&lt;br&gt;&lt;br&gt;\n&lt;div style=&quot;width: 300px;height: 150px;background-color: antiquewhite;font-size: 64px&quot;&gt;长按测试&lt;/div&gt;&lt;br&gt;&lt;br&gt;\n&lt;div style=&quot;width: 300px;height: 150px;background-color: red;font-size: 64px&quot;&gt;长按测试&lt;/div&gt;&lt;br&gt;&lt;br&gt;\n&lt;div  style=&quot;width: 500px;height: 700px;position: relative;&quot;&gt;\n    &lt;img src=&quot;resource/bg.png&quot; width=&quot;100%&quot; height=&quot;100%&quot;&gt;\n    &lt;div id=&quot;mask&quot; style=&quot;position: absolute;top:0;left:0;width: 100%;height: 100%;z-index: 1000&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n&lt;script&gt;\n    var handle ;\n    $(&quot;#mask&quot;).on(&quot;touchstart&quot;,function (e) {\n//        e.preventDefault();\n        clearInterval(handle);\n        handle = setInterval(function (e) {\n            console.log(&quot;longpress&quot;)\n        },500)\n    }).on(&quot;touchend&quot;,function () {\n        clearInterval(handle);\n    })\n    //屏蔽下拉滑动\n    $(window).on(&quot;touchmove&quot;,function (e) {\n        e.preventDefault();\n    })\n\n    //屏蔽长按菜单\n    document.body.addEventListener(&apos;contextmenu&apos;, function(e){\n        e.preventDefault();\n    });\n\n    $(&quot;img&quot;).on(&quot;touchstart&quot;,function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n    });\n\n    document.querySelector(&quot;img&quot;).addEventListener(&apos;touchstart&apos;, function(e){\n        e.preventDefault();\n    });\n&lt;/script&gt;\n</code></pre>"},{"title":"H5全屏视频交互的一点研究","date":"2017-07-14T08:08:20.000Z","_content":"\n项目要求一个在微信可全屏可交互的视频，稍微做了一些研究，稍作一点总结\n\n## &lt;video/&gt;标签\n\n`video`标签最简单的用法\n\n\t<video src=\"movie.ogg\" controls=\"controls\">   \n\t您的浏览器不支持 video 标签。   \n\t</video>;\n\t\n或者，根据浏览器支持的视频类型播放不同的格式:\n\n\t<video src=\"movie.ogg\" controls=\"controls\">\n\t\t<source src=\"movie.ogg\" type=\"video/ogg\" />\n  \t\t<source src=\"movie.mp4\" type=\"video/mp4\" />   \n\t\t您的浏览器不支持 video 标签。   \n\t</video>;\n\n\n`video`标签有几个常用的属性:  \n\n\n属性       | 值         | 描述     |\n----------|------------|---------|\nautoplay\t| autoplay   | 如果出现该属性，则视频在就绪后马上播放。\ncontrols\t| controls   | 如果出现该属性，则向用户显示控件，比如播放按钮。\nheight    | pixels\t   | 设置视频播放器的高度。\nloop      | loop       | 如果出现该属性，则当媒介文件完成播放后再次开始播放。\npreload   | preload\t   | 如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 \"autoplay\"，则忽略该属性。规定是否预加载视频。<br>可能的值：<br>auto - 当页面加载后载入整个视频<br> meta - 当页面加载后只载入元数据<br>none - 当页面加载后不载入视频\nsrc       | url        | 要播放的视频的 URL。\nwidth     | pixels     | 设置视频播放器的宽度。\nposter    | url        | 定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。如果未设置该属性，则使用视频的第一帧来代替。规定图像文件的 URL。<br>可能的值：<br>绝对 URL - 指向另一个网站（比如 href=\"http://www.example.com/poster.jpg\"）<br>相对 URL - 指向网站内的文件（href=\"poster.jpg\"）\nwidth     | pixels     | 设置视频播放器的宽度。\nautoplay  | autoplay   | 规定一旦视频就绪马上开始播放。如果设置了该属性，视频将自动播放。<br>但是这个属性在移动端大多不能使用，如iOS的要求至少有一次用户触摸事件之后才能开始播放视频。\n\n以上是浏览器通用属性，接下来是几个比较特殊的播放属性：\n\n属性                        | 值        | 描述     |\n---------------------------|-----------|---------|\nwebkit-playsinline         | true      | 视频播放时局域播放，不脱离文档流 。但是在安卓中并没有作用 |\nx5-video-player-type       | h5        | 启用同层H5播放器，就是在视频全屏的时候，div可以呈现在视频层上，也是WeChat安卓版特有的属性。同层播放别名也叫做沉浸式播放，播放的时候看似全屏，但是已经除去了control和微信的导航栏，只留下\"X\"和\"<\"两键。目前的同层播放器只在Android（包括微信）上生效，|\nx5-video-orientation       | portraint | 声明播放器支持的方向，可选值landscape 横屏,portraint竖屏。默认值portraint。无论是直播还是全屏H5一般都是竖屏播放，但是这个属性需要x5-video-player-type开启H5模式 |\nx5-video-player-fullscreen | true      | 全屏设置。ture和false的设置会导致布局上的不一样 |\n\n<!--more-->\n\t\n## 同层播放\n如过使用前文中提到的最简单的视频播放代码：\n\n\t<video src=d.mp4 controls=\"controls\">\n\t    您的浏览器不支持 video 标签。\n\t</video>\n\niOS中点击播放会放大全屏播放；Android中点击播放之后会出现一个漂浮于最上层的视频播放窗口，再点击可放大播放。无论哪个系统默认video播放都不能将其他div覆盖在正在播放的video只上，交互更是无从谈起。\n\n我们所说同层播放可定义为，在原始h5页面中播放视频，不自动全屏最大化，可折叠其他div层与视频只上并完成交互。接下来我们就要为了完成这个目标进行探索。\n\n### iOS中的同层播放\n根据我们可以尝试使用webkit-playsinline和playsinline来实现同层播放\n  \n\t<video src=d.mp4 controls=\"controls\" webkit-playsinline=\"true\" playsinline=\"true\">\n\t    您的浏览器不支持 video 标签。\n\t</video>\n\n效果很显著，视频不再自动最大化，并且可以在视频上叠上其他div层了。\n <img src=\"h5-video-inline/i1.png\" width = \"300\"  alt=\"图片名称\" align=center />\n\n接下来要做的就是把视频根据屏幕自适应全屏化，思路是使用js获取页面展示界面的长款，然后使video标签绝对定位并且设置响应的长和宽\n\n\t<video id=\"testVideo\" src=d.mp4 controls=\"controls\" webkit-playsinline=\"true\" playsinline=\"true\" style=\"position: absolute;left:0;top: 0;\">\n\t    您的浏览器不支持 video 标签。\n\t</video>\n\t<div style=\"position: absolute;left:0;top: 0;width: 200px;height: 100px;background-color: aquamarine\">我是漂浮层</div>\n\t<script>\n\t    window.onload = function () {\n\t        var v = document.getElementById(\"testVideo\");\n\t        v.width = innerWidth;\n\t        v.height = innerHeight;\n\t    }\n\t</script>\n\n或者更简单的直接设置video中的width和height属性为100%。。。\n\n <img src=\"h5-video-inline/i2.png\" width = \"300\"  alt=\"图片名称\" align=center />\n \n根据控制条的位置可以判断视频确实全屏了，这里有个问题是视频并没有像我们想想的那样被全屏拉伸，而只是保持了长宽比之后根据最大的缩放尺度拉伸之后居中播放，显然跟我们的要求有点出入，但是没关系，这问题我们放到以后再讲，先去解决android的问题。\n\n### Android中的同层播放\n俺们先打开安卓中的chrome浏览器，因为据说iOS中的浏览器都使用了chrome相同的内核。\n \n<img src=\"h5-video-inline/i3.jpg\" width = \"300\"  alt=\"图片名称\" align=center />\n\n果然效果杠杠的，除了视频比例有点问题外其他完美。我们接着用系统自带浏览器打开，也没问题。\n\n最后我们用微信（或者QQ）打开链接，毫无悬念的出现了问题（废话，要是就这么简单，我就写blog了），在微信中点击播放之后又成了全屏播放。并且无法覆盖div层。\n\n<img src=\"h5-video-inline/i4.jpg\" width = \"300\"  alt=\"图片名称\" align=center />\n \n究其原因iOS微信浏览器是Chrome内核，支持playsinline属性，安卓微信浏览器是腾讯X5内核，playsinline属性是不支持的，因此，始终是全屏。\n\n如果你看过一些腾讯的视频类 HTML5，会发现它们在微信里是可以内联播放的，而这个功能在以前是需要申请加入白名单的。\n\n不过新版的 \u0002TBS 内核（>=036849）支持一个叫 同层播放器。为了实现全屏播放播放交互功能，我们需要去了解QQ浏览器内核里关于同层播放的设定，查看腾讯官方的文档:[《H5同层播放器接入规范》](https://x5.tencent.com/tbs/guide/video.html)\n\n很容易知道我们需要使用`x5-video-player-type`、`x5-video-player-fullscreen`、`x5-video-orientation`三个特殊的属性。\n关键的是`x5-video-player-type=h5`这个属性，我们来修改下原来的代码：\n\n\t<video id=\"testVideo\" src=d.mp4 controls=\"controls\" webkit-playsinline=\"true\" playsinline=\"true\" \n\t\t\tx5-video-player-fullscreen=\"true\" x5-video-player-type=\"h5\" x5-video-orientation=\"portrait\" \n\t\t\tstyle=\"position: absolute;left:0;top: 0;\">\n\t    您的浏览器不支持 video 标签。\n\t</video>\n\n<img src=\"h5-video-inline/i5.jpg\" width = \"300\"  alt=\"图片名称\" align=center />\n\n看上去还成，但是尼玛为什么上下还是回留有黑边呢？再仔细翻翻规范，回发现如下这段话：\n\tx5-video-player-fullscreen全屏方式\n\t\n\t视频播放时将会进入到全屏模式\n\t\n\t如果不申明此属性，页面得到视口区域为原始视口大小(视频未播放前)，比如在微信里，会有一个常驻的标题栏，如果不声明此属性，这个标题栏高度不会给页面，播放时会平均分为两块（上下黑块）\n\t\n\t注： 声明此属性，需要页面自己重新适配新的视口大小变化。可以通过监听resize 事件来实现\n\t需要监听窗口大小变化(resize)实现全屏\n\n\twindow.onresize = function(){\n\t  test_video.style.width = window.innerWidth + \"px\";\n\t  test_video.style.height = window.innerHeight + \"px\";\n\t}\n\t\n我们修改原来的JS代码：\n\t<script>\n\t    window.onload = function () {\n\t        resizeVideo()\n\t    }\n\t    window.onresize = function () {\n\t        resizeVideo()\n\t    }\n\t    function resizeVideo(){\n\t        var v = document.getElementById(\"testVideo\");\n\t        v.style.width = innerWidth;\n\t        v.style.height = innerHeight;\n\t    }\n\t</script>\n\n<img src=\"h5-video-inline/i6.jpg\" width = \"300\"  alt=\"图片名称\" align=center />\n\n感觉上基本完美了（左上和右上的两个按钮是真没法去掉了。。。）\n\n### native的设置\n最后一个问题，如果我们想把页面在自己的native APP中展示在iOS端还需要设置以下UIWebView的一个属性：\n\n\t_web.allowsInlineMediaPlayback = YES;\n\n接下来我们需要把视频全屏拉伸。\n\n## 缩放视频\n\n普通情况下视频只能被保持比例缩放，如果想不按任意缩放，需要采取一些非常之手段。。。\n\n最简单的是使用style里面的object-fit:fill;属性\n\n<img src=\"h5-video-inline/i7.png\" width = \"300\"  alt=\"图片名称\" align=center />\n\n是不是看着已经很完美了。。。但是这个属性有一个缺点就是兼容性不是很好，简单说安卓要4.4.3才能支持这个属性。截至到今天（2017年7月）安卓4.4以下版本占有率还有10%左右，如果还是有必要对这部分用户进行适配的。主要可以参看这篇文章:[巧用transform实现HTML5 video标签视频比例拉伸](http://www.cnblogs.com/liuxianan/p/html5-video-resize.html)\n核心思想就是算出视频长、宽和屏幕长、宽的最大比例差，然后按这个比例缩放之后，再旋转另一边，使其能适应屏幕尺寸，以下是我写的代码，使用了jQuery：\n\n\t<script>\n\t    $().ready(function () {\n\t        var w = $(window).width();\n\t        var h = $(window).height();\n\t        $(\"#wrap\").height(h).width(w);\n\t        $(\"#video\").height(h).width(w);\n\t\n\t        $(\"#video\").click(function () {\n\t            var vh = $(\"#video\").get(0).videoHeight;\n\t            var vw = $(\"#video\").get(0).videoWidth;\n\t            if(vh/h>vw/w){\n\t                var ah = vh*(w/vw);\n\t                $(\"#video\").width(w).height(ah);\n\t                var rotateX = (Math.acos(h/ah)*180/Math.PI).toFixed(2); // 新高度 / 旧高度\n\t                $(\"#video\").css(\"transform\",\"rotateY(0deg) rotateX(\"+rotateX+\"deg)\").css(\"margin-top\",(h-ah)/2+\"px\")\n\t            }else{\n\t                var aw = vw*(h/vh);\n\t                $(\"#video\").width(aw).height(h);\n\t                var rotateY = (Math.acos(w/aw)*180/Math.PI).toFixed(2); // 新宽度 / 旧宽度\n\t                $(\"#video\").css(\"transform\",\"rotateY(\"+rotateY+\"deg) rotateX(0deg)\").css(\"margin-left\",(w-aw)/2+\"px\");\n\t            }\n\t\n\t            $(\"#video\").get(0).play();\n\t        })\n\t\n\t    });\n\t</script>\n\n我手贱把系统升级到6.0了所以就不截图了，哇哈哈哈哈。\n\n### 封面缩放\n为了美观期间经常需要给视频打上个封面，需要用到poster属性，post规定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。如果未设置该属性，则使用视频的第一帧来代替。\n当我们使用了object-fit:fill;属性，封面也能够按照屏幕自适应拉伸了，甚好！\n\n## 横屏播放\n一个移动端全屏视频项目总是会预设此项目应该以横屏还是竖屏的方式展现，如果一旦用户不小心改变了横、竖屏的状态，很可能导致许多显示和交互上的问题，由于在H5中无法限制用户转屏，所以很有必要在检测出屏幕比例不对时，采取一些响应的措施去弥补。\n\n### 提示用户\n\n最简单的方案是当屏幕不是我们需要的状态时给用户一个提示，让用户改变当前转屏状态。\n方法是绑定`window.onorientationchange`事件，判断`window.orientation`属性，该属性为0时表示竖屏，90或-90时为横屏。\n\n### 自动转屏\n这个方案比较复杂，就是如果用户在横屏状态，但是我们的设计又要求是竖屏播放，那就把页面反方向旋转90度，是屏幕依然是竖屏的，入下图所示：\n\n<img src=\"h5-video-inline/i8.png\" width = \"300\"  alt=\"图片名称\" align=center />\n\n代码如下：\n\n    window.onload = function () {\n        resizeVideo()\n    }\n\n    window.onresize = function () {\n        setTimeout(function () {\n            resizeVideo()\n        },100)\n    }\n\n    function resizeVideo(){\n        var v = document.getElementById(\"testVideo\");\n        $(\"#testVideo\").css('transform',\"rotate(0deg)\");\n        v.width = innerWidth;\n        v.height = innerHeight;\n        if(v.width>v.height){\n            var angle = window.orientation?window.orientation:screen.orientation.angle;\n            v.width = innerHeight;\n            v.height = innerWidth;\n            var sub = (innerWidth - innerHeight)/2\n            $(\"#testVideo\").css('transform',\"rotate(\"+angle*(-1)+\"deg) translate(\"+sub+\"px,\"+sub+\"px)\")\n        }\n    }\n\n\n首先根据长宽差判断当前屏幕旋转状态，当宽度大于长度时就认为当前处于横屏状态，于是取得翻转角度后进行反向翻转，然后进行平移，使得翻转后的图像依然在屏幕正中，当然我们的覆盖层也要相应的进行旋转并调整屏幕大小，挺麻烦的，但是话说回来了。。。谁真的会在横屏状态下去操作翻转90度的东西呢？意思意思得了。。。\n\n## 完整测试代码\n\t<html>\n\t<head>\n\t    <meta charset=\"utf-8\">\n\t    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0, user-scalable=no,minimal-ui \">\n\t    <title>Title</title>\n\t    <script src=\"jquery-3.1.0.min.js\"></script>\n\t</head>\n\t<body style=\"margin: 0 auto;overflow: hiddenn\t    <video id=\"testVideo\" src=d.mp4 controls=\"controls\" webkit-playsinline=\"true\" playsinline=\"true\"\n\t           x5-video-player-fullscreen=\"true\" x5-video-player-type=\"h5\" x5-video-orientation=\"portrait\"\n\t           style=\"position: absolute;left:0;top: 0;object-fit:fill;\"\n\t           poster=\"poster.png\">\n\t        您的浏览器不支持 video 标签。\n\t    </video>\n\t    <div id=\"log\" style=\"position: absolute;left:0;top: 0;width: 300px;height: 100px;background-color: aquamarine\">我是漂浮层</div>\n\t</body>\n\t</html>\n\t<script>\n\t\n\t    window.onload = function () {\n\t        resizeVideo()\n\t    }\n\t\n\t    window.onresize = function () {\n\t        setTimeout(function () {\n\t            resizeVideo()\n\t        },100)\n\t    }\n\t\n\t    function resizeVideo(){\n\t        var v = document.getElementById(\"testVideo\");\n\t        $(\"#testVideo\").css('transform',\"rotate(0deg)\");\n\t        v.width = innerWidth;\n\t        v.height = innerHeight;\n\t        if(v.width>v.height){\n\t            var angle = window.orientation?window.orientation:screen.orientation.angle;\n\t            v.width = innerHeight;\n\t            v.height = innerWidth;\n\t            var sub = (innerWidth - innerHeight)/2\n\t            $(\"#testVideo\").css('transform',\"rotate(\"+angle*(-1)+\"deg) translate(\"+sub+\"px,\"+sub+\"px)\")\n\t        }\n\t    }\n\t</script>\n\n## 主要参考：\n* http://www.cnblogs.com/2050/p/3877280.html\n* http://www.cnblogs.com/liuxianan/p/html5-video-resize.html","source":"_posts/h5-video-inline.md","raw":"---\ntitle: H5全屏视频交互的一点研究\ndate: 2017-07-14 16:08:20\ntags:\n  - H5\n  - video\n  - inline\n  - 移动端\ncategories:\n  - H5\n---\n\n项目要求一个在微信可全屏可交互的视频，稍微做了一些研究，稍作一点总结\n\n## &lt;video/&gt;标签\n\n`video`标签最简单的用法\n\n\t<video src=\"movie.ogg\" controls=\"controls\">   \n\t您的浏览器不支持 video 标签。   \n\t</video>;\n\t\n或者，根据浏览器支持的视频类型播放不同的格式:\n\n\t<video src=\"movie.ogg\" controls=\"controls\">\n\t\t<source src=\"movie.ogg\" type=\"video/ogg\" />\n  \t\t<source src=\"movie.mp4\" type=\"video/mp4\" />   \n\t\t您的浏览器不支持 video 标签。   \n\t</video>;\n\n\n`video`标签有几个常用的属性:  \n\n\n属性       | 值         | 描述     |\n----------|------------|---------|\nautoplay\t| autoplay   | 如果出现该属性，则视频在就绪后马上播放。\ncontrols\t| controls   | 如果出现该属性，则向用户显示控件，比如播放按钮。\nheight    | pixels\t   | 设置视频播放器的高度。\nloop      | loop       | 如果出现该属性，则当媒介文件完成播放后再次开始播放。\npreload   | preload\t   | 如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 \"autoplay\"，则忽略该属性。规定是否预加载视频。<br>可能的值：<br>auto - 当页面加载后载入整个视频<br> meta - 当页面加载后只载入元数据<br>none - 当页面加载后不载入视频\nsrc       | url        | 要播放的视频的 URL。\nwidth     | pixels     | 设置视频播放器的宽度。\nposter    | url        | 定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。如果未设置该属性，则使用视频的第一帧来代替。规定图像文件的 URL。<br>可能的值：<br>绝对 URL - 指向另一个网站（比如 href=\"http://www.example.com/poster.jpg\"）<br>相对 URL - 指向网站内的文件（href=\"poster.jpg\"）\nwidth     | pixels     | 设置视频播放器的宽度。\nautoplay  | autoplay   | 规定一旦视频就绪马上开始播放。如果设置了该属性，视频将自动播放。<br>但是这个属性在移动端大多不能使用，如iOS的要求至少有一次用户触摸事件之后才能开始播放视频。\n\n以上是浏览器通用属性，接下来是几个比较特殊的播放属性：\n\n属性                        | 值        | 描述     |\n---------------------------|-----------|---------|\nwebkit-playsinline         | true      | 视频播放时局域播放，不脱离文档流 。但是在安卓中并没有作用 |\nx5-video-player-type       | h5        | 启用同层H5播放器，就是在视频全屏的时候，div可以呈现在视频层上，也是WeChat安卓版特有的属性。同层播放别名也叫做沉浸式播放，播放的时候看似全屏，但是已经除去了control和微信的导航栏，只留下\"X\"和\"<\"两键。目前的同层播放器只在Android（包括微信）上生效，|\nx5-video-orientation       | portraint | 声明播放器支持的方向，可选值landscape 横屏,portraint竖屏。默认值portraint。无论是直播还是全屏H5一般都是竖屏播放，但是这个属性需要x5-video-player-type开启H5模式 |\nx5-video-player-fullscreen | true      | 全屏设置。ture和false的设置会导致布局上的不一样 |\n\n<!--more-->\n\t\n## 同层播放\n如过使用前文中提到的最简单的视频播放代码：\n\n\t<video src=d.mp4 controls=\"controls\">\n\t    您的浏览器不支持 video 标签。\n\t</video>\n\niOS中点击播放会放大全屏播放；Android中点击播放之后会出现一个漂浮于最上层的视频播放窗口，再点击可放大播放。无论哪个系统默认video播放都不能将其他div覆盖在正在播放的video只上，交互更是无从谈起。\n\n我们所说同层播放可定义为，在原始h5页面中播放视频，不自动全屏最大化，可折叠其他div层与视频只上并完成交互。接下来我们就要为了完成这个目标进行探索。\n\n### iOS中的同层播放\n根据我们可以尝试使用webkit-playsinline和playsinline来实现同层播放\n  \n\t<video src=d.mp4 controls=\"controls\" webkit-playsinline=\"true\" playsinline=\"true\">\n\t    您的浏览器不支持 video 标签。\n\t</video>\n\n效果很显著，视频不再自动最大化，并且可以在视频上叠上其他div层了。\n <img src=\"h5-video-inline/i1.png\" width = \"300\"  alt=\"图片名称\" align=center />\n\n接下来要做的就是把视频根据屏幕自适应全屏化，思路是使用js获取页面展示界面的长款，然后使video标签绝对定位并且设置响应的长和宽\n\n\t<video id=\"testVideo\" src=d.mp4 controls=\"controls\" webkit-playsinline=\"true\" playsinline=\"true\" style=\"position: absolute;left:0;top: 0;\">\n\t    您的浏览器不支持 video 标签。\n\t</video>\n\t<div style=\"position: absolute;left:0;top: 0;width: 200px;height: 100px;background-color: aquamarine\">我是漂浮层</div>\n\t<script>\n\t    window.onload = function () {\n\t        var v = document.getElementById(\"testVideo\");\n\t        v.width = innerWidth;\n\t        v.height = innerHeight;\n\t    }\n\t</script>\n\n或者更简单的直接设置video中的width和height属性为100%。。。\n\n <img src=\"h5-video-inline/i2.png\" width = \"300\"  alt=\"图片名称\" align=center />\n \n根据控制条的位置可以判断视频确实全屏了，这里有个问题是视频并没有像我们想想的那样被全屏拉伸，而只是保持了长宽比之后根据最大的缩放尺度拉伸之后居中播放，显然跟我们的要求有点出入，但是没关系，这问题我们放到以后再讲，先去解决android的问题。\n\n### Android中的同层播放\n俺们先打开安卓中的chrome浏览器，因为据说iOS中的浏览器都使用了chrome相同的内核。\n \n<img src=\"h5-video-inline/i3.jpg\" width = \"300\"  alt=\"图片名称\" align=center />\n\n果然效果杠杠的，除了视频比例有点问题外其他完美。我们接着用系统自带浏览器打开，也没问题。\n\n最后我们用微信（或者QQ）打开链接，毫无悬念的出现了问题（废话，要是就这么简单，我就写blog了），在微信中点击播放之后又成了全屏播放。并且无法覆盖div层。\n\n<img src=\"h5-video-inline/i4.jpg\" width = \"300\"  alt=\"图片名称\" align=center />\n \n究其原因iOS微信浏览器是Chrome内核，支持playsinline属性，安卓微信浏览器是腾讯X5内核，playsinline属性是不支持的，因此，始终是全屏。\n\n如果你看过一些腾讯的视频类 HTML5，会发现它们在微信里是可以内联播放的，而这个功能在以前是需要申请加入白名单的。\n\n不过新版的 \u0002TBS 内核（>=036849）支持一个叫 同层播放器。为了实现全屏播放播放交互功能，我们需要去了解QQ浏览器内核里关于同层播放的设定，查看腾讯官方的文档:[《H5同层播放器接入规范》](https://x5.tencent.com/tbs/guide/video.html)\n\n很容易知道我们需要使用`x5-video-player-type`、`x5-video-player-fullscreen`、`x5-video-orientation`三个特殊的属性。\n关键的是`x5-video-player-type=h5`这个属性，我们来修改下原来的代码：\n\n\t<video id=\"testVideo\" src=d.mp4 controls=\"controls\" webkit-playsinline=\"true\" playsinline=\"true\" \n\t\t\tx5-video-player-fullscreen=\"true\" x5-video-player-type=\"h5\" x5-video-orientation=\"portrait\" \n\t\t\tstyle=\"position: absolute;left:0;top: 0;\">\n\t    您的浏览器不支持 video 标签。\n\t</video>\n\n<img src=\"h5-video-inline/i5.jpg\" width = \"300\"  alt=\"图片名称\" align=center />\n\n看上去还成，但是尼玛为什么上下还是回留有黑边呢？再仔细翻翻规范，回发现如下这段话：\n\tx5-video-player-fullscreen全屏方式\n\t\n\t视频播放时将会进入到全屏模式\n\t\n\t如果不申明此属性，页面得到视口区域为原始视口大小(视频未播放前)，比如在微信里，会有一个常驻的标题栏，如果不声明此属性，这个标题栏高度不会给页面，播放时会平均分为两块（上下黑块）\n\t\n\t注： 声明此属性，需要页面自己重新适配新的视口大小变化。可以通过监听resize 事件来实现\n\t需要监听窗口大小变化(resize)实现全屏\n\n\twindow.onresize = function(){\n\t  test_video.style.width = window.innerWidth + \"px\";\n\t  test_video.style.height = window.innerHeight + \"px\";\n\t}\n\t\n我们修改原来的JS代码：\n\t<script>\n\t    window.onload = function () {\n\t        resizeVideo()\n\t    }\n\t    window.onresize = function () {\n\t        resizeVideo()\n\t    }\n\t    function resizeVideo(){\n\t        var v = document.getElementById(\"testVideo\");\n\t        v.style.width = innerWidth;\n\t        v.style.height = innerHeight;\n\t    }\n\t</script>\n\n<img src=\"h5-video-inline/i6.jpg\" width = \"300\"  alt=\"图片名称\" align=center />\n\n感觉上基本完美了（左上和右上的两个按钮是真没法去掉了。。。）\n\n### native的设置\n最后一个问题，如果我们想把页面在自己的native APP中展示在iOS端还需要设置以下UIWebView的一个属性：\n\n\t_web.allowsInlineMediaPlayback = YES;\n\n接下来我们需要把视频全屏拉伸。\n\n## 缩放视频\n\n普通情况下视频只能被保持比例缩放，如果想不按任意缩放，需要采取一些非常之手段。。。\n\n最简单的是使用style里面的object-fit:fill;属性\n\n<img src=\"h5-video-inline/i7.png\" width = \"300\"  alt=\"图片名称\" align=center />\n\n是不是看着已经很完美了。。。但是这个属性有一个缺点就是兼容性不是很好，简单说安卓要4.4.3才能支持这个属性。截至到今天（2017年7月）安卓4.4以下版本占有率还有10%左右，如果还是有必要对这部分用户进行适配的。主要可以参看这篇文章:[巧用transform实现HTML5 video标签视频比例拉伸](http://www.cnblogs.com/liuxianan/p/html5-video-resize.html)\n核心思想就是算出视频长、宽和屏幕长、宽的最大比例差，然后按这个比例缩放之后，再旋转另一边，使其能适应屏幕尺寸，以下是我写的代码，使用了jQuery：\n\n\t<script>\n\t    $().ready(function () {\n\t        var w = $(window).width();\n\t        var h = $(window).height();\n\t        $(\"#wrap\").height(h).width(w);\n\t        $(\"#video\").height(h).width(w);\n\t\n\t        $(\"#video\").click(function () {\n\t            var vh = $(\"#video\").get(0).videoHeight;\n\t            var vw = $(\"#video\").get(0).videoWidth;\n\t            if(vh/h>vw/w){\n\t                var ah = vh*(w/vw);\n\t                $(\"#video\").width(w).height(ah);\n\t                var rotateX = (Math.acos(h/ah)*180/Math.PI).toFixed(2); // 新高度 / 旧高度\n\t                $(\"#video\").css(\"transform\",\"rotateY(0deg) rotateX(\"+rotateX+\"deg)\").css(\"margin-top\",(h-ah)/2+\"px\")\n\t            }else{\n\t                var aw = vw*(h/vh);\n\t                $(\"#video\").width(aw).height(h);\n\t                var rotateY = (Math.acos(w/aw)*180/Math.PI).toFixed(2); // 新宽度 / 旧宽度\n\t                $(\"#video\").css(\"transform\",\"rotateY(\"+rotateY+\"deg) rotateX(0deg)\").css(\"margin-left\",(w-aw)/2+\"px\");\n\t            }\n\t\n\t            $(\"#video\").get(0).play();\n\t        })\n\t\n\t    });\n\t</script>\n\n我手贱把系统升级到6.0了所以就不截图了，哇哈哈哈哈。\n\n### 封面缩放\n为了美观期间经常需要给视频打上个封面，需要用到poster属性，post规定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。如果未设置该属性，则使用视频的第一帧来代替。\n当我们使用了object-fit:fill;属性，封面也能够按照屏幕自适应拉伸了，甚好！\n\n## 横屏播放\n一个移动端全屏视频项目总是会预设此项目应该以横屏还是竖屏的方式展现，如果一旦用户不小心改变了横、竖屏的状态，很可能导致许多显示和交互上的问题，由于在H5中无法限制用户转屏，所以很有必要在检测出屏幕比例不对时，采取一些响应的措施去弥补。\n\n### 提示用户\n\n最简单的方案是当屏幕不是我们需要的状态时给用户一个提示，让用户改变当前转屏状态。\n方法是绑定`window.onorientationchange`事件，判断`window.orientation`属性，该属性为0时表示竖屏，90或-90时为横屏。\n\n### 自动转屏\n这个方案比较复杂，就是如果用户在横屏状态，但是我们的设计又要求是竖屏播放，那就把页面反方向旋转90度，是屏幕依然是竖屏的，入下图所示：\n\n<img src=\"h5-video-inline/i8.png\" width = \"300\"  alt=\"图片名称\" align=center />\n\n代码如下：\n\n    window.onload = function () {\n        resizeVideo()\n    }\n\n    window.onresize = function () {\n        setTimeout(function () {\n            resizeVideo()\n        },100)\n    }\n\n    function resizeVideo(){\n        var v = document.getElementById(\"testVideo\");\n        $(\"#testVideo\").css('transform',\"rotate(0deg)\");\n        v.width = innerWidth;\n        v.height = innerHeight;\n        if(v.width>v.height){\n            var angle = window.orientation?window.orientation:screen.orientation.angle;\n            v.width = innerHeight;\n            v.height = innerWidth;\n            var sub = (innerWidth - innerHeight)/2\n            $(\"#testVideo\").css('transform',\"rotate(\"+angle*(-1)+\"deg) translate(\"+sub+\"px,\"+sub+\"px)\")\n        }\n    }\n\n\n首先根据长宽差判断当前屏幕旋转状态，当宽度大于长度时就认为当前处于横屏状态，于是取得翻转角度后进行反向翻转，然后进行平移，使得翻转后的图像依然在屏幕正中，当然我们的覆盖层也要相应的进行旋转并调整屏幕大小，挺麻烦的，但是话说回来了。。。谁真的会在横屏状态下去操作翻转90度的东西呢？意思意思得了。。。\n\n## 完整测试代码\n\t<html>\n\t<head>\n\t    <meta charset=\"utf-8\">\n\t    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0, user-scalable=no,minimal-ui \">\n\t    <title>Title</title>\n\t    <script src=\"jquery-3.1.0.min.js\"></script>\n\t</head>\n\t<body style=\"margin: 0 auto;overflow: hiddenn\t    <video id=\"testVideo\" src=d.mp4 controls=\"controls\" webkit-playsinline=\"true\" playsinline=\"true\"\n\t           x5-video-player-fullscreen=\"true\" x5-video-player-type=\"h5\" x5-video-orientation=\"portrait\"\n\t           style=\"position: absolute;left:0;top: 0;object-fit:fill;\"\n\t           poster=\"poster.png\">\n\t        您的浏览器不支持 video 标签。\n\t    </video>\n\t    <div id=\"log\" style=\"position: absolute;left:0;top: 0;width: 300px;height: 100px;background-color: aquamarine\">我是漂浮层</div>\n\t</body>\n\t</html>\n\t<script>\n\t\n\t    window.onload = function () {\n\t        resizeVideo()\n\t    }\n\t\n\t    window.onresize = function () {\n\t        setTimeout(function () {\n\t            resizeVideo()\n\t        },100)\n\t    }\n\t\n\t    function resizeVideo(){\n\t        var v = document.getElementById(\"testVideo\");\n\t        $(\"#testVideo\").css('transform',\"rotate(0deg)\");\n\t        v.width = innerWidth;\n\t        v.height = innerHeight;\n\t        if(v.width>v.height){\n\t            var angle = window.orientation?window.orientation:screen.orientation.angle;\n\t            v.width = innerHeight;\n\t            v.height = innerWidth;\n\t            var sub = (innerWidth - innerHeight)/2\n\t            $(\"#testVideo\").css('transform',\"rotate(\"+angle*(-1)+\"deg) translate(\"+sub+\"px,\"+sub+\"px)\")\n\t        }\n\t    }\n\t</script>\n\n## 主要参考：\n* http://www.cnblogs.com/2050/p/3877280.html\n* http://www.cnblogs.com/liuxianan/p/html5-video-resize.html","slug":"h5-video-inline","published":1,"updated":"2017-08-03T02:48:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5w0cufz0006ij660owynyls","content":"<p>项目要求一个在微信可全屏可交互的视频，稍微做了一些研究，稍作一点总结</p>\n<h2 id=\"lt-video-gt-标签\"><a href=\"#lt-video-gt-标签\" class=\"headerlink\" title=\"&lt;video/&gt;标签\"></a>&lt;video/&gt;标签</h2><p><code>video</code>标签最简单的用法</p>\n<pre><code>&lt;video src=&quot;movie.ogg&quot; controls=&quot;controls&quot;&gt;   \n您的浏览器不支持 video 标签。   \n&lt;/video&gt;;\n</code></pre><p>或者，根据浏览器支持的视频类型播放不同的格式:</p>\n<pre><code>&lt;video src=&quot;movie.ogg&quot; controls=&quot;controls&quot;&gt;\n    &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot; /&gt;\n      &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot; /&gt;   \n    您的浏览器不支持 video 标签。   \n&lt;/video&gt;;\n</code></pre><p><code>video</code>标签有几个常用的属性:  </p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>autoplay</td>\n<td>autoplay</td>\n<td>如果出现该属性，则视频在就绪后马上播放。</td>\n</tr>\n<tr>\n<td>controls</td>\n<td>controls</td>\n<td>如果出现该属性，则向用户显示控件，比如播放按钮。</td>\n</tr>\n<tr>\n<td>height</td>\n<td>pixels</td>\n<td>设置视频播放器的高度。</td>\n</tr>\n<tr>\n<td>loop</td>\n<td>loop</td>\n<td>如果出现该属性，则当媒介文件完成播放后再次开始播放。</td>\n</tr>\n<tr>\n<td>preload</td>\n<td>preload</td>\n<td>如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 “autoplay”，则忽略该属性。规定是否预加载视频。<br>可能的值：<br>auto - 当页面加载后载入整个视频<br> meta - 当页面加载后只载入元数据<br>none - 当页面加载后不载入视频</td>\n</tr>\n<tr>\n<td>src</td>\n<td>url</td>\n<td>要播放的视频的 URL。</td>\n</tr>\n<tr>\n<td>width</td>\n<td>pixels</td>\n<td>设置视频播放器的宽度。</td>\n</tr>\n<tr>\n<td>poster</td>\n<td>url</td>\n<td>定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。如果未设置该属性，则使用视频的第一帧来代替。规定图像文件的 URL。<br>可能的值：<br>绝对 URL - 指向另一个网站（比如 href=”<a href=\"http://www.example.com/poster.jpg&quot;）\" target=\"_blank\" rel=\"external\">http://www.example.com/poster.jpg&quot;）</a><br>相对 URL - 指向网站内的文件（href=”poster.jpg”）</td>\n</tr>\n<tr>\n<td>width</td>\n<td>pixels</td>\n<td>设置视频播放器的宽度。</td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td>autoplay</td>\n<td>规定一旦视频就绪马上开始播放。如果设置了该属性，视频将自动播放。<br>但是这个属性在移动端大多不能使用，如iOS的要求至少有一次用户触摸事件之后才能开始播放视频。</td>\n</tr>\n</tbody>\n</table>\n<p>以上是浏览器通用属性，接下来是几个比较特殊的播放属性：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>webkit-playsinline</td>\n<td>true</td>\n<td>视频播放时局域播放，不脱离文档流 。但是在安卓中并没有作用</td>\n<td></td>\n</tr>\n<tr>\n<td>x5-video-player-type</td>\n<td>h5</td>\n<td>启用同层H5播放器，就是在视频全屏的时候，div可以呈现在视频层上，也是WeChat安卓版特有的属性。同层播放别名也叫做沉浸式播放，播放的时候看似全屏，但是已经除去了control和微信的导航栏，只留下”X”和”&lt;”两键。目前的同层播放器只在Android（包括微信）上生效，</td>\n<td></td>\n</tr>\n<tr>\n<td>x5-video-orientation</td>\n<td>portraint</td>\n<td>声明播放器支持的方向，可选值landscape 横屏,portraint竖屏。默认值portraint。无论是直播还是全屏H5一般都是竖屏播放，但是这个属性需要x5-video-player-type开启H5模式</td>\n<td></td>\n</tr>\n<tr>\n<td>x5-video-player-fullscreen</td>\n<td>true</td>\n<td>全屏设置。ture和false的设置会导致布局上的不一样</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<a id=\"more\"></a>\n<h2 id=\"同层播放\"><a href=\"#同层播放\" class=\"headerlink\" title=\"同层播放\"></a>同层播放</h2><p>如过使用前文中提到的最简单的视频播放代码：</p>\n<pre><code>&lt;video src=d.mp4 controls=&quot;controls&quot;&gt;\n    您的浏览器不支持 video 标签。\n&lt;/video&gt;\n</code></pre><p>iOS中点击播放会放大全屏播放；Android中点击播放之后会出现一个漂浮于最上层的视频播放窗口，再点击可放大播放。无论哪个系统默认video播放都不能将其他div覆盖在正在播放的video只上，交互更是无从谈起。</p>\n<p>我们所说同层播放可定义为，在原始h5页面中播放视频，不自动全屏最大化，可折叠其他div层与视频只上并完成交互。接下来我们就要为了完成这个目标进行探索。</p>\n<h3 id=\"iOS中的同层播放\"><a href=\"#iOS中的同层播放\" class=\"headerlink\" title=\"iOS中的同层播放\"></a>iOS中的同层播放</h3><p>根据我们可以尝试使用webkit-playsinline和playsinline来实现同层播放</p>\n<pre><code>&lt;video src=d.mp4 controls=&quot;controls&quot; webkit-playsinline=&quot;true&quot; playsinline=&quot;true&quot;&gt;\n    您的浏览器不支持 video 标签。\n&lt;/video&gt;\n</code></pre><p>效果很显著，视频不再自动最大化，并且可以在视频上叠上其他div层了。<br> <img src=\"/2017/07/14/h5-video-inline/i1.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>接下来要做的就是把视频根据屏幕自适应全屏化，思路是使用js获取页面展示界面的长款，然后使video标签绝对定位并且设置响应的长和宽</p>\n<pre><code>&lt;video id=&quot;testVideo&quot; src=d.mp4 controls=&quot;controls&quot; webkit-playsinline=&quot;true&quot; playsinline=&quot;true&quot; style=&quot;position: absolute;left:0;top: 0;&quot;&gt;\n    您的浏览器不支持 video 标签。\n&lt;/video&gt;\n&lt;div style=&quot;position: absolute;left:0;top: 0;width: 200px;height: 100px;background-color: aquamarine&quot;&gt;我是漂浮层&lt;/div&gt;\n&lt;script&gt;\n    window.onload = function () {\n        var v = document.getElementById(&quot;testVideo&quot;);\n        v.width = innerWidth;\n        v.height = innerHeight;\n    }\n&lt;/script&gt;\n</code></pre><p>或者更简单的直接设置video中的width和height属性为100%。。。</p>\n<p> <img src=\"/2017/07/14/h5-video-inline/i2.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>根据控制条的位置可以判断视频确实全屏了，这里有个问题是视频并没有像我们想想的那样被全屏拉伸，而只是保持了长宽比之后根据最大的缩放尺度拉伸之后居中播放，显然跟我们的要求有点出入，但是没关系，这问题我们放到以后再讲，先去解决android的问题。</p>\n<h3 id=\"Android中的同层播放\"><a href=\"#Android中的同层播放\" class=\"headerlink\" title=\"Android中的同层播放\"></a>Android中的同层播放</h3><p>俺们先打开安卓中的chrome浏览器，因为据说iOS中的浏览器都使用了chrome相同的内核。</p>\n<p><img src=\"/2017/07/14/h5-video-inline/i3.jpg\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>果然效果杠杠的，除了视频比例有点问题外其他完美。我们接着用系统自带浏览器打开，也没问题。</p>\n<p>最后我们用微信（或者QQ）打开链接，毫无悬念的出现了问题（废话，要是就这么简单，我就写blog了），在微信中点击播放之后又成了全屏播放。并且无法覆盖div层。</p>\n<p><img src=\"/2017/07/14/h5-video-inline/i4.jpg\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>究其原因iOS微信浏览器是Chrome内核，支持playsinline属性，安卓微信浏览器是腾讯X5内核，playsinline属性是不支持的，因此，始终是全屏。</p>\n<p>如果你看过一些腾讯的视频类 HTML5，会发现它们在微信里是可以内联播放的，而这个功能在以前是需要申请加入白名单的。</p>\n<p>不过新版的 \u0002TBS 内核（&gt;=036849）支持一个叫 同层播放器。为了实现全屏播放播放交互功能，我们需要去了解QQ浏览器内核里关于同层播放的设定，查看腾讯官方的文档:<a href=\"https://x5.tencent.com/tbs/guide/video.html\" target=\"_blank\" rel=\"external\">《H5同层播放器接入规范》</a></p>\n<p>很容易知道我们需要使用<code>x5-video-player-type</code>、<code>x5-video-player-fullscreen</code>、<code>x5-video-orientation</code>三个特殊的属性。<br>关键的是<code>x5-video-player-type=h5</code>这个属性，我们来修改下原来的代码：</p>\n<pre><code>&lt;video id=&quot;testVideo&quot; src=d.mp4 controls=&quot;controls&quot; webkit-playsinline=&quot;true&quot; playsinline=&quot;true&quot; \n        x5-video-player-fullscreen=&quot;true&quot; x5-video-player-type=&quot;h5&quot; x5-video-orientation=&quot;portrait&quot; \n        style=&quot;position: absolute;left:0;top: 0;&quot;&gt;\n    您的浏览器不支持 video 标签。\n&lt;/video&gt;\n</code></pre><p><img src=\"/2017/07/14/h5-video-inline/i5.jpg\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>看上去还成，但是尼玛为什么上下还是回留有黑边呢？再仔细翻翻规范，回发现如下这段话：<br>    x5-video-player-fullscreen全屏方式</p>\n<pre><code>视频播放时将会进入到全屏模式\n\n如果不申明此属性，页面得到视口区域为原始视口大小(视频未播放前)，比如在微信里，会有一个常驻的标题栏，如果不声明此属性，这个标题栏高度不会给页面，播放时会平均分为两块（上下黑块）\n\n注： 声明此属性，需要页面自己重新适配新的视口大小变化。可以通过监听resize 事件来实现\n需要监听窗口大小变化(resize)实现全屏\n\nwindow.onresize = function(){\n  test_video.style.width = window.innerWidth + &quot;px&quot;;\n  test_video.style.height = window.innerHeight + &quot;px&quot;;\n}\n</code></pre><p>我们修改原来的JS代码：<br>    <script><br>        window.onload = function () {<br>            resizeVideo()<br>        }<br>        window.onresize = function () {<br>            resizeVideo()<br>        }<br>        function resizeVideo(){<br>            var v = document.getElementById(“testVideo”);<br>            v.style.width = innerWidth;<br>            v.style.height = innerHeight;<br>        }<br>    </script></p>\n<p><img src=\"/2017/07/14/h5-video-inline/i6.jpg\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>感觉上基本完美了（左上和右上的两个按钮是真没法去掉了。。。）</p>\n<h3 id=\"native的设置\"><a href=\"#native的设置\" class=\"headerlink\" title=\"native的设置\"></a>native的设置</h3><p>最后一个问题，如果我们想把页面在自己的native APP中展示在iOS端还需要设置以下UIWebView的一个属性：</p>\n<pre><code>_web.allowsInlineMediaPlayback = YES;\n</code></pre><p>接下来我们需要把视频全屏拉伸。</p>\n<h2 id=\"缩放视频\"><a href=\"#缩放视频\" class=\"headerlink\" title=\"缩放视频\"></a>缩放视频</h2><p>普通情况下视频只能被保持比例缩放，如果想不按任意缩放，需要采取一些非常之手段。。。</p>\n<p>最简单的是使用style里面的object-fit:fill;属性</p>\n<p><img src=\"/2017/07/14/h5-video-inline/i7.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>是不是看着已经很完美了。。。但是这个属性有一个缺点就是兼容性不是很好，简单说安卓要4.4.3才能支持这个属性。截至到今天（2017年7月）安卓4.4以下版本占有率还有10%左右，如果还是有必要对这部分用户进行适配的。主要可以参看这篇文章:<a href=\"http://www.cnblogs.com/liuxianan/p/html5-video-resize.html\" target=\"_blank\" rel=\"external\">巧用transform实现HTML5 video标签视频比例拉伸</a><br>核心思想就是算出视频长、宽和屏幕长、宽的最大比例差，然后按这个比例缩放之后，再旋转另一边，使其能适应屏幕尺寸，以下是我写的代码，使用了jQuery：</p>\n<pre><code>&lt;script&gt;\n    $().ready(function () {\n        var w = $(window).width();\n        var h = $(window).height();\n        $(&quot;#wrap&quot;).height(h).width(w);\n        $(&quot;#video&quot;).height(h).width(w);\n\n        $(&quot;#video&quot;).click(function () {\n            var vh = $(&quot;#video&quot;).get(0).videoHeight;\n            var vw = $(&quot;#video&quot;).get(0).videoWidth;\n            if(vh/h&gt;vw/w){\n                var ah = vh*(w/vw);\n                $(&quot;#video&quot;).width(w).height(ah);\n                var rotateX = (Math.acos(h/ah)*180/Math.PI).toFixed(2); // 新高度 / 旧高度\n                $(&quot;#video&quot;).css(&quot;transform&quot;,&quot;rotateY(0deg) rotateX(&quot;+rotateX+&quot;deg)&quot;).css(&quot;margin-top&quot;,(h-ah)/2+&quot;px&quot;)\n            }else{\n                var aw = vw*(h/vh);\n                $(&quot;#video&quot;).width(aw).height(h);\n                var rotateY = (Math.acos(w/aw)*180/Math.PI).toFixed(2); // 新宽度 / 旧宽度\n                $(&quot;#video&quot;).css(&quot;transform&quot;,&quot;rotateY(&quot;+rotateY+&quot;deg) rotateX(0deg)&quot;).css(&quot;margin-left&quot;,(w-aw)/2+&quot;px&quot;);\n            }\n\n            $(&quot;#video&quot;).get(0).play();\n        })\n\n    });\n&lt;/script&gt;\n</code></pre><p>我手贱把系统升级到6.0了所以就不截图了，哇哈哈哈哈。</p>\n<h3 id=\"封面缩放\"><a href=\"#封面缩放\" class=\"headerlink\" title=\"封面缩放\"></a>封面缩放</h3><p>为了美观期间经常需要给视频打上个封面，需要用到poster属性，post规定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。如果未设置该属性，则使用视频的第一帧来代替。<br>当我们使用了object-fit:fill;属性，封面也能够按照屏幕自适应拉伸了，甚好！</p>\n<h2 id=\"横屏播放\"><a href=\"#横屏播放\" class=\"headerlink\" title=\"横屏播放\"></a>横屏播放</h2><p>一个移动端全屏视频项目总是会预设此项目应该以横屏还是竖屏的方式展现，如果一旦用户不小心改变了横、竖屏的状态，很可能导致许多显示和交互上的问题，由于在H5中无法限制用户转屏，所以很有必要在检测出屏幕比例不对时，采取一些响应的措施去弥补。</p>\n<h3 id=\"提示用户\"><a href=\"#提示用户\" class=\"headerlink\" title=\"提示用户\"></a>提示用户</h3><p>最简单的方案是当屏幕不是我们需要的状态时给用户一个提示，让用户改变当前转屏状态。<br>方法是绑定<code>window.onorientationchange</code>事件，判断<code>window.orientation</code>属性，该属性为0时表示竖屏，90或-90时为横屏。</p>\n<h3 id=\"自动转屏\"><a href=\"#自动转屏\" class=\"headerlink\" title=\"自动转屏\"></a>自动转屏</h3><p>这个方案比较复杂，就是如果用户在横屏状态，但是我们的设计又要求是竖屏播放，那就把页面反方向旋转90度，是屏幕依然是竖屏的，入下图所示：</p>\n<p><img src=\"/2017/07/14/h5-video-inline/i8.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>代码如下：</p>\n<pre><code>window.onload = function () {\n    resizeVideo()\n}\n\nwindow.onresize = function () {\n    setTimeout(function () {\n        resizeVideo()\n    },100)\n}\n\nfunction resizeVideo(){\n    var v = document.getElementById(&quot;testVideo&quot;);\n    $(&quot;#testVideo&quot;).css(&apos;transform&apos;,&quot;rotate(0deg)&quot;);\n    v.width = innerWidth;\n    v.height = innerHeight;\n    if(v.width&gt;v.height){\n        var angle = window.orientation?window.orientation:screen.orientation.angle;\n        v.width = innerHeight;\n        v.height = innerWidth;\n        var sub = (innerWidth - innerHeight)/2\n        $(&quot;#testVideo&quot;).css(&apos;transform&apos;,&quot;rotate(&quot;+angle*(-1)+&quot;deg) translate(&quot;+sub+&quot;px,&quot;+sub+&quot;px)&quot;)\n    }\n}\n</code></pre><p>首先根据长宽差判断当前屏幕旋转状态，当宽度大于长度时就认为当前处于横屏状态，于是取得翻转角度后进行反向翻转，然后进行平移，使得翻转后的图像依然在屏幕正中，当然我们的覆盖层也要相应的进行旋转并调整屏幕大小，挺麻烦的，但是话说回来了。。。谁真的会在横屏状态下去操作翻转90度的东西呢？意思意思得了。。。</p>\n<h2 id=\"完整测试代码\"><a href=\"#完整测试代码\" class=\"headerlink\" title=\"完整测试代码\"></a>完整测试代码</h2><pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0, user-scalable=no,minimal-ui &quot;&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n    &lt;script src=&quot;jquery-3.1.0.min.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body style=&quot;margin: 0 auto;overflow: hidden&quot;&gtquot;&gt;\n    &lt;video id=&quot;testVideo&quot; src=d.mp4 controls=&quot;controls&quot; webkit-playsinline=&quot;true&quot; playsinline=&quot;true&quot;\n           x5-video-player-fullscreen=&quot;true&quot; x5-video-player-type=&quot;h5&quot; x5-video-orientation=&quot;portrait&quot;\n           style=&quot;position: absolute;left:0;top: 0;object-fit:fill;&quot;\n           poster=&quot;poster.png&quot;&gt;\n        您的浏览器不支持 video 标签。\n    &lt;/video&gt;\n    &lt;div id=&quot;log&quot; style=&quot;position: absolute;left:0;top: 0;width: 300px;height: 100px;background-color: aquamarine&quot;&gt;我是漂浮层&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n&lt;script&gt;\n\n    window.onload = function () {\n        resizeVideo()\n    }\n\n    window.onresize = function () {\n        setTimeout(function () {\n            resizeVideo()\n        },100)\n    }\n\n    function resizeVideo(){\n        var v = document.getElementById(&quot;testVideo&quot;);\n        $(&quot;#testVideo&quot;).css(&apos;transform&apos;,&quot;rotate(0deg)&quot;);\n        v.width = innerWidth;\n        v.height = innerHeight;\n        if(v.width&gt;v.height){\n            var angle = window.orientation?window.orientation:screen.orientation.angle;\n            v.width = innerHeight;\n            v.height = innerWidth;\n            var sub = (innerWidth - innerHeight)/2\n            $(&quot;#testVideo&quot;).css(&apos;transform&apos;,&quot;rotate(&quot;+angle*(-1)+&quot;deg) translate(&quot;+sub+&quot;px,&quot;+sub+&quot;px)&quot;)\n        }\n    }\n&lt;/script&gt;\n</code></pre><h2 id=\"主要参考：\"><a href=\"#主要参考：\" class=\"headerlink\" title=\"主要参考：\"></a>主要参考：</h2><ul>\n<li><a href=\"http://www.cnblogs.com/2050/p/3877280.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/2050/p/3877280.html</a></li>\n<li><a href=\"http://www.cnblogs.com/liuxianan/p/html5-video-resize.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/liuxianan/p/html5-video-resize.html</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>项目要求一个在微信可全屏可交互的视频，稍微做了一些研究，稍作一点总结</p>\n<h2 id=\"lt-video-gt-标签\"><a href=\"#lt-video-gt-标签\" class=\"headerlink\" title=\"&lt;video/&gt;标签\"></a>&lt;video/&gt;标签</h2><p><code>video</code>标签最简单的用法</p>\n<pre><code>&lt;video src=&quot;movie.ogg&quot; controls=&quot;controls&quot;&gt;   \n您的浏览器不支持 video 标签。   \n&lt;/video&gt;;\n</code></pre><p>或者，根据浏览器支持的视频类型播放不同的格式:</p>\n<pre><code>&lt;video src=&quot;movie.ogg&quot; controls=&quot;controls&quot;&gt;\n    &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot; /&gt;\n      &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot; /&gt;   \n    您的浏览器不支持 video 标签。   \n&lt;/video&gt;;\n</code></pre><p><code>video</code>标签有几个常用的属性:  </p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>autoplay</td>\n<td>autoplay</td>\n<td>如果出现该属性，则视频在就绪后马上播放。</td>\n</tr>\n<tr>\n<td>controls</td>\n<td>controls</td>\n<td>如果出现该属性，则向用户显示控件，比如播放按钮。</td>\n</tr>\n<tr>\n<td>height</td>\n<td>pixels</td>\n<td>设置视频播放器的高度。</td>\n</tr>\n<tr>\n<td>loop</td>\n<td>loop</td>\n<td>如果出现该属性，则当媒介文件完成播放后再次开始播放。</td>\n</tr>\n<tr>\n<td>preload</td>\n<td>preload</td>\n<td>如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 “autoplay”，则忽略该属性。规定是否预加载视频。<br>可能的值：<br>auto - 当页面加载后载入整个视频<br> meta - 当页面加载后只载入元数据<br>none - 当页面加载后不载入视频</td>\n</tr>\n<tr>\n<td>src</td>\n<td>url</td>\n<td>要播放的视频的 URL。</td>\n</tr>\n<tr>\n<td>width</td>\n<td>pixels</td>\n<td>设置视频播放器的宽度。</td>\n</tr>\n<tr>\n<td>poster</td>\n<td>url</td>\n<td>定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。如果未设置该属性，则使用视频的第一帧来代替。规定图像文件的 URL。<br>可能的值：<br>绝对 URL - 指向另一个网站（比如 href=”<a href=\"http://www.example.com/poster.jpg&quot;）\" target=\"_blank\" rel=\"external\">http://www.example.com/poster.jpg&quot;）</a><br>相对 URL - 指向网站内的文件（href=”poster.jpg”）</td>\n</tr>\n<tr>\n<td>width</td>\n<td>pixels</td>\n<td>设置视频播放器的宽度。</td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td>autoplay</td>\n<td>规定一旦视频就绪马上开始播放。如果设置了该属性，视频将自动播放。<br>但是这个属性在移动端大多不能使用，如iOS的要求至少有一次用户触摸事件之后才能开始播放视频。</td>\n</tr>\n</tbody>\n</table>\n<p>以上是浏览器通用属性，接下来是几个比较特殊的播放属性：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>webkit-playsinline</td>\n<td>true</td>\n<td>视频播放时局域播放，不脱离文档流 。但是在安卓中并没有作用</td>\n<td></td>\n</tr>\n<tr>\n<td>x5-video-player-type</td>\n<td>h5</td>\n<td>启用同层H5播放器，就是在视频全屏的时候，div可以呈现在视频层上，也是WeChat安卓版特有的属性。同层播放别名也叫做沉浸式播放，播放的时候看似全屏，但是已经除去了control和微信的导航栏，只留下”X”和”&lt;”两键。目前的同层播放器只在Android（包括微信）上生效，</td>\n<td></td>\n</tr>\n<tr>\n<td>x5-video-orientation</td>\n<td>portraint</td>\n<td>声明播放器支持的方向，可选值landscape 横屏,portraint竖屏。默认值portraint。无论是直播还是全屏H5一般都是竖屏播放，但是这个属性需要x5-video-player-type开启H5模式</td>\n<td></td>\n</tr>\n<tr>\n<td>x5-video-player-fullscreen</td>\n<td>true</td>\n<td>全屏设置。ture和false的设置会导致布局上的不一样</td>\n<td></td>\n</tr>\n</tbody>\n</table>","more":"<h2 id=\"同层播放\"><a href=\"#同层播放\" class=\"headerlink\" title=\"同层播放\"></a>同层播放</h2><p>如过使用前文中提到的最简单的视频播放代码：</p>\n<pre><code>&lt;video src=d.mp4 controls=&quot;controls&quot;&gt;\n    您的浏览器不支持 video 标签。\n&lt;/video&gt;\n</code></pre><p>iOS中点击播放会放大全屏播放；Android中点击播放之后会出现一个漂浮于最上层的视频播放窗口，再点击可放大播放。无论哪个系统默认video播放都不能将其他div覆盖在正在播放的video只上，交互更是无从谈起。</p>\n<p>我们所说同层播放可定义为，在原始h5页面中播放视频，不自动全屏最大化，可折叠其他div层与视频只上并完成交互。接下来我们就要为了完成这个目标进行探索。</p>\n<h3 id=\"iOS中的同层播放\"><a href=\"#iOS中的同层播放\" class=\"headerlink\" title=\"iOS中的同层播放\"></a>iOS中的同层播放</h3><p>根据我们可以尝试使用webkit-playsinline和playsinline来实现同层播放</p>\n<pre><code>&lt;video src=d.mp4 controls=&quot;controls&quot; webkit-playsinline=&quot;true&quot; playsinline=&quot;true&quot;&gt;\n    您的浏览器不支持 video 标签。\n&lt;/video&gt;\n</code></pre><p>效果很显著，视频不再自动最大化，并且可以在视频上叠上其他div层了。<br> <img src=\"/2017/07/14/h5-video-inline/i1.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>接下来要做的就是把视频根据屏幕自适应全屏化，思路是使用js获取页面展示界面的长款，然后使video标签绝对定位并且设置响应的长和宽</p>\n<pre><code>&lt;video id=&quot;testVideo&quot; src=d.mp4 controls=&quot;controls&quot; webkit-playsinline=&quot;true&quot; playsinline=&quot;true&quot; style=&quot;position: absolute;left:0;top: 0;&quot;&gt;\n    您的浏览器不支持 video 标签。\n&lt;/video&gt;\n&lt;div style=&quot;position: absolute;left:0;top: 0;width: 200px;height: 100px;background-color: aquamarine&quot;&gt;我是漂浮层&lt;/div&gt;\n&lt;script&gt;\n    window.onload = function () {\n        var v = document.getElementById(&quot;testVideo&quot;);\n        v.width = innerWidth;\n        v.height = innerHeight;\n    }\n&lt;/script&gt;\n</code></pre><p>或者更简单的直接设置video中的width和height属性为100%。。。</p>\n<p> <img src=\"/2017/07/14/h5-video-inline/i2.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>根据控制条的位置可以判断视频确实全屏了，这里有个问题是视频并没有像我们想想的那样被全屏拉伸，而只是保持了长宽比之后根据最大的缩放尺度拉伸之后居中播放，显然跟我们的要求有点出入，但是没关系，这问题我们放到以后再讲，先去解决android的问题。</p>\n<h3 id=\"Android中的同层播放\"><a href=\"#Android中的同层播放\" class=\"headerlink\" title=\"Android中的同层播放\"></a>Android中的同层播放</h3><p>俺们先打开安卓中的chrome浏览器，因为据说iOS中的浏览器都使用了chrome相同的内核。</p>\n<p><img src=\"/2017/07/14/h5-video-inline/i3.jpg\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>果然效果杠杠的，除了视频比例有点问题外其他完美。我们接着用系统自带浏览器打开，也没问题。</p>\n<p>最后我们用微信（或者QQ）打开链接，毫无悬念的出现了问题（废话，要是就这么简单，我就写blog了），在微信中点击播放之后又成了全屏播放。并且无法覆盖div层。</p>\n<p><img src=\"/2017/07/14/h5-video-inline/i4.jpg\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>究其原因iOS微信浏览器是Chrome内核，支持playsinline属性，安卓微信浏览器是腾讯X5内核，playsinline属性是不支持的，因此，始终是全屏。</p>\n<p>如果你看过一些腾讯的视频类 HTML5，会发现它们在微信里是可以内联播放的，而这个功能在以前是需要申请加入白名单的。</p>\n<p>不过新版的 \u0002TBS 内核（&gt;=036849）支持一个叫 同层播放器。为了实现全屏播放播放交互功能，我们需要去了解QQ浏览器内核里关于同层播放的设定，查看腾讯官方的文档:<a href=\"https://x5.tencent.com/tbs/guide/video.html\" target=\"_blank\" rel=\"external\">《H5同层播放器接入规范》</a></p>\n<p>很容易知道我们需要使用<code>x5-video-player-type</code>、<code>x5-video-player-fullscreen</code>、<code>x5-video-orientation</code>三个特殊的属性。<br>关键的是<code>x5-video-player-type=h5</code>这个属性，我们来修改下原来的代码：</p>\n<pre><code>&lt;video id=&quot;testVideo&quot; src=d.mp4 controls=&quot;controls&quot; webkit-playsinline=&quot;true&quot; playsinline=&quot;true&quot; \n        x5-video-player-fullscreen=&quot;true&quot; x5-video-player-type=&quot;h5&quot; x5-video-orientation=&quot;portrait&quot; \n        style=&quot;position: absolute;left:0;top: 0;&quot;&gt;\n    您的浏览器不支持 video 标签。\n&lt;/video&gt;\n</code></pre><p><img src=\"/2017/07/14/h5-video-inline/i5.jpg\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>看上去还成，但是尼玛为什么上下还是回留有黑边呢？再仔细翻翻规范，回发现如下这段话：<br>    x5-video-player-fullscreen全屏方式</p>\n<pre><code>视频播放时将会进入到全屏模式\n\n如果不申明此属性，页面得到视口区域为原始视口大小(视频未播放前)，比如在微信里，会有一个常驻的标题栏，如果不声明此属性，这个标题栏高度不会给页面，播放时会平均分为两块（上下黑块）\n\n注： 声明此属性，需要页面自己重新适配新的视口大小变化。可以通过监听resize 事件来实现\n需要监听窗口大小变化(resize)实现全屏\n\nwindow.onresize = function(){\n  test_video.style.width = window.innerWidth + &quot;px&quot;;\n  test_video.style.height = window.innerHeight + &quot;px&quot;;\n}\n</code></pre><p>我们修改原来的JS代码：<br>    <script><br>        window.onload = function () {<br>            resizeVideo()<br>        }<br>        window.onresize = function () {<br>            resizeVideo()<br>        }<br>        function resizeVideo(){<br>            var v = document.getElementById(“testVideo”);<br>            v.style.width = innerWidth;<br>            v.style.height = innerHeight;<br>        }<br>    </script></p>\n<p><img src=\"/2017/07/14/h5-video-inline/i6.jpg\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>感觉上基本完美了（左上和右上的两个按钮是真没法去掉了。。。）</p>\n<h3 id=\"native的设置\"><a href=\"#native的设置\" class=\"headerlink\" title=\"native的设置\"></a>native的设置</h3><p>最后一个问题，如果我们想把页面在自己的native APP中展示在iOS端还需要设置以下UIWebView的一个属性：</p>\n<pre><code>_web.allowsInlineMediaPlayback = YES;\n</code></pre><p>接下来我们需要把视频全屏拉伸。</p>\n<h2 id=\"缩放视频\"><a href=\"#缩放视频\" class=\"headerlink\" title=\"缩放视频\"></a>缩放视频</h2><p>普通情况下视频只能被保持比例缩放，如果想不按任意缩放，需要采取一些非常之手段。。。</p>\n<p>最简单的是使用style里面的object-fit:fill;属性</p>\n<p><img src=\"/2017/07/14/h5-video-inline/i7.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>是不是看着已经很完美了。。。但是这个属性有一个缺点就是兼容性不是很好，简单说安卓要4.4.3才能支持这个属性。截至到今天（2017年7月）安卓4.4以下版本占有率还有10%左右，如果还是有必要对这部分用户进行适配的。主要可以参看这篇文章:<a href=\"http://www.cnblogs.com/liuxianan/p/html5-video-resize.html\" target=\"_blank\" rel=\"external\">巧用transform实现HTML5 video标签视频比例拉伸</a><br>核心思想就是算出视频长、宽和屏幕长、宽的最大比例差，然后按这个比例缩放之后，再旋转另一边，使其能适应屏幕尺寸，以下是我写的代码，使用了jQuery：</p>\n<pre><code>&lt;script&gt;\n    $().ready(function () {\n        var w = $(window).width();\n        var h = $(window).height();\n        $(&quot;#wrap&quot;).height(h).width(w);\n        $(&quot;#video&quot;).height(h).width(w);\n\n        $(&quot;#video&quot;).click(function () {\n            var vh = $(&quot;#video&quot;).get(0).videoHeight;\n            var vw = $(&quot;#video&quot;).get(0).videoWidth;\n            if(vh/h&gt;vw/w){\n                var ah = vh*(w/vw);\n                $(&quot;#video&quot;).width(w).height(ah);\n                var rotateX = (Math.acos(h/ah)*180/Math.PI).toFixed(2); // 新高度 / 旧高度\n                $(&quot;#video&quot;).css(&quot;transform&quot;,&quot;rotateY(0deg) rotateX(&quot;+rotateX+&quot;deg)&quot;).css(&quot;margin-top&quot;,(h-ah)/2+&quot;px&quot;)\n            }else{\n                var aw = vw*(h/vh);\n                $(&quot;#video&quot;).width(aw).height(h);\n                var rotateY = (Math.acos(w/aw)*180/Math.PI).toFixed(2); // 新宽度 / 旧宽度\n                $(&quot;#video&quot;).css(&quot;transform&quot;,&quot;rotateY(&quot;+rotateY+&quot;deg) rotateX(0deg)&quot;).css(&quot;margin-left&quot;,(w-aw)/2+&quot;px&quot;);\n            }\n\n            $(&quot;#video&quot;).get(0).play();\n        })\n\n    });\n&lt;/script&gt;\n</code></pre><p>我手贱把系统升级到6.0了所以就不截图了，哇哈哈哈哈。</p>\n<h3 id=\"封面缩放\"><a href=\"#封面缩放\" class=\"headerlink\" title=\"封面缩放\"></a>封面缩放</h3><p>为了美观期间经常需要给视频打上个封面，需要用到poster属性，post规定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。如果未设置该属性，则使用视频的第一帧来代替。<br>当我们使用了object-fit:fill;属性，封面也能够按照屏幕自适应拉伸了，甚好！</p>\n<h2 id=\"横屏播放\"><a href=\"#横屏播放\" class=\"headerlink\" title=\"横屏播放\"></a>横屏播放</h2><p>一个移动端全屏视频项目总是会预设此项目应该以横屏还是竖屏的方式展现，如果一旦用户不小心改变了横、竖屏的状态，很可能导致许多显示和交互上的问题，由于在H5中无法限制用户转屏，所以很有必要在检测出屏幕比例不对时，采取一些响应的措施去弥补。</p>\n<h3 id=\"提示用户\"><a href=\"#提示用户\" class=\"headerlink\" title=\"提示用户\"></a>提示用户</h3><p>最简单的方案是当屏幕不是我们需要的状态时给用户一个提示，让用户改变当前转屏状态。<br>方法是绑定<code>window.onorientationchange</code>事件，判断<code>window.orientation</code>属性，该属性为0时表示竖屏，90或-90时为横屏。</p>\n<h3 id=\"自动转屏\"><a href=\"#自动转屏\" class=\"headerlink\" title=\"自动转屏\"></a>自动转屏</h3><p>这个方案比较复杂，就是如果用户在横屏状态，但是我们的设计又要求是竖屏播放，那就把页面反方向旋转90度，是屏幕依然是竖屏的，入下图所示：</p>\n<p><img src=\"/2017/07/14/h5-video-inline/i8.png\" width=\"300\" alt=\"图片名称\" align=\"center\"></p>\n<p>代码如下：</p>\n<pre><code>window.onload = function () {\n    resizeVideo()\n}\n\nwindow.onresize = function () {\n    setTimeout(function () {\n        resizeVideo()\n    },100)\n}\n\nfunction resizeVideo(){\n    var v = document.getElementById(&quot;testVideo&quot;);\n    $(&quot;#testVideo&quot;).css(&apos;transform&apos;,&quot;rotate(0deg)&quot;);\n    v.width = innerWidth;\n    v.height = innerHeight;\n    if(v.width&gt;v.height){\n        var angle = window.orientation?window.orientation:screen.orientation.angle;\n        v.width = innerHeight;\n        v.height = innerWidth;\n        var sub = (innerWidth - innerHeight)/2\n        $(&quot;#testVideo&quot;).css(&apos;transform&apos;,&quot;rotate(&quot;+angle*(-1)+&quot;deg) translate(&quot;+sub+&quot;px,&quot;+sub+&quot;px)&quot;)\n    }\n}\n</code></pre><p>首先根据长宽差判断当前屏幕旋转状态，当宽度大于长度时就认为当前处于横屏状态，于是取得翻转角度后进行反向翻转，然后进行平移，使得翻转后的图像依然在屏幕正中，当然我们的覆盖层也要相应的进行旋转并调整屏幕大小，挺麻烦的，但是话说回来了。。。谁真的会在横屏状态下去操作翻转90度的东西呢？意思意思得了。。。</p>\n<h2 id=\"完整测试代码\"><a href=\"#完整测试代码\" class=\"headerlink\" title=\"完整测试代码\"></a>完整测试代码</h2><pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0, user-scalable=no,minimal-ui &quot;&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n    &lt;script src=&quot;jquery-3.1.0.min.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body style=&quot;margin: 0 auto;overflow: hidden&quot;&gtquot;&gt;\n    &lt;video id=&quot;testVideo&quot; src=d.mp4 controls=&quot;controls&quot; webkit-playsinline=&quot;true&quot; playsinline=&quot;true&quot;\n           x5-video-player-fullscreen=&quot;true&quot; x5-video-player-type=&quot;h5&quot; x5-video-orientation=&quot;portrait&quot;\n           style=&quot;position: absolute;left:0;top: 0;object-fit:fill;&quot;\n           poster=&quot;poster.png&quot;&gt;\n        您的浏览器不支持 video 标签。\n    &lt;/video&gt;\n    &lt;div id=&quot;log&quot; style=&quot;position: absolute;left:0;top: 0;width: 300px;height: 100px;background-color: aquamarine&quot;&gt;我是漂浮层&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n&lt;script&gt;\n\n    window.onload = function () {\n        resizeVideo()\n    }\n\n    window.onresize = function () {\n        setTimeout(function () {\n            resizeVideo()\n        },100)\n    }\n\n    function resizeVideo(){\n        var v = document.getElementById(&quot;testVideo&quot;);\n        $(&quot;#testVideo&quot;).css(&apos;transform&apos;,&quot;rotate(0deg)&quot;);\n        v.width = innerWidth;\n        v.height = innerHeight;\n        if(v.width&gt;v.height){\n            var angle = window.orientation?window.orientation:screen.orientation.angle;\n            v.width = innerHeight;\n            v.height = innerWidth;\n            var sub = (innerWidth - innerHeight)/2\n            $(&quot;#testVideo&quot;).css(&apos;transform&apos;,&quot;rotate(&quot;+angle*(-1)+&quot;deg) translate(&quot;+sub+&quot;px,&quot;+sub+&quot;px)&quot;)\n        }\n    }\n&lt;/script&gt;\n</code></pre><h2 id=\"主要参考：\"><a href=\"#主要参考：\" class=\"headerlink\" title=\"主要参考：\"></a>主要参考：</h2><ul>\n<li><a href=\"http://www.cnblogs.com/2050/p/3877280.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/2050/p/3877280.html</a></li>\n<li><a href=\"http://www.cnblogs.com/liuxianan/p/html5-video-resize.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/liuxianan/p/html5-video-resize.html</a></li>\n</ul>"},{"title":"使用viewport进行移动端H5页面适配","date":"2017-07-20T08:11:49.000Z","categores":["H5"],"_content":"\n移动端机型适配是个比较头疼的问题，适配的方式也很多，今天主要讨论下使用viewport进行适配\n\n\n## ViewPort\n\n 网上能找到的东西就不重复了请看这两篇博客[《移动H5页面开发多屏适配 - viewport和像素篇》](http://www.jianshu.com/p/dd25d84647e2)以及[《移动前端开发之viewport的深入理解》](http://www.cnblogs.com/2050/p/3877280.html)\n \n 总结起来，当页面不设置ViewPort时，移动设备上的浏览器都会把自己默认的viewport设为980px或1024px（也可能是其它值，这个是由设备自己决定的），总之是一个比较大的值为了能展示pc上的网页。\n \n 对于一个专门为移动端设计的页面，980的宽度显然太大，所以需要重新设置viewport\n \t\n \t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\">\n \t\n 在苹果的规范中，meta viewport 有6个属性(暂且把content中的那些东西称为一个个属性和值)，如下：\n \n\n属性       | 描述     |\n----------|---------|\nwidth\t| 设置layout viewport  的宽度，为一个正整数，或字符串\"width-device\"\ninitial-scale\t| 设置页面的初始缩放值，为一个数字，可以带小数\nminimum-scale\t| 允许用户的最小缩放值，为一个数字，可以带小数\nmaximum-scale\t| 允许用户的最大缩放值，为一个数字，可以带小数\nheight\t| 设置layout viewport  的高度，这个属性对我们并不重要，很少使用\nuser-scalable| \t是否允许用户进行缩放，值为\"no\"或\"yes\", no 代表不允许，yes代表允许\n\n针对这几个属性，我做了一个简单的测试，测试数据可见这篇[文章]()\n<!--more-->\n\n在iphone和ipad上，无论你给viewport设的宽的是多少，如果没有指定默认的缩放值，则iphone和ipad会自动计算这个缩放值，以达到当前页面不会出现横向滚动条(或者说viewport的宽度就是屏幕的宽度)的目的。\n","source":"_posts/h5-view-port.md","raw":"---\ntitle: 使用viewport进行移动端H5页面适配\ndate: 2017-07-20 16:11:49\ntags:\n  - H5\n  - viewport\ncategores:\n  - H5\n---\n\n移动端机型适配是个比较头疼的问题，适配的方式也很多，今天主要讨论下使用viewport进行适配\n\n\n## ViewPort\n\n 网上能找到的东西就不重复了请看这两篇博客[《移动H5页面开发多屏适配 - viewport和像素篇》](http://www.jianshu.com/p/dd25d84647e2)以及[《移动前端开发之viewport的深入理解》](http://www.cnblogs.com/2050/p/3877280.html)\n \n 总结起来，当页面不设置ViewPort时，移动设备上的浏览器都会把自己默认的viewport设为980px或1024px（也可能是其它值，这个是由设备自己决定的），总之是一个比较大的值为了能展示pc上的网页。\n \n 对于一个专门为移动端设计的页面，980的宽度显然太大，所以需要重新设置viewport\n \t\n \t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\">\n \t\n 在苹果的规范中，meta viewport 有6个属性(暂且把content中的那些东西称为一个个属性和值)，如下：\n \n\n属性       | 描述     |\n----------|---------|\nwidth\t| 设置layout viewport  的宽度，为一个正整数，或字符串\"width-device\"\ninitial-scale\t| 设置页面的初始缩放值，为一个数字，可以带小数\nminimum-scale\t| 允许用户的最小缩放值，为一个数字，可以带小数\nmaximum-scale\t| 允许用户的最大缩放值，为一个数字，可以带小数\nheight\t| 设置layout viewport  的高度，这个属性对我们并不重要，很少使用\nuser-scalable| \t是否允许用户进行缩放，值为\"no\"或\"yes\", no 代表不允许，yes代表允许\n\n针对这几个属性，我做了一个简单的测试，测试数据可见这篇[文章]()\n<!--more-->\n\n在iphone和ipad上，无论你给viewport设的宽的是多少，如果没有指定默认的缩放值，则iphone和ipad会自动计算这个缩放值，以达到当前页面不会出现横向滚动条(或者说viewport的宽度就是屏幕的宽度)的目的。\n","slug":"h5-view-port","published":1,"updated":"2017-08-03T03:31:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5w0cug20008ij66vm5z9tuk","content":"<p>移动端机型适配是个比较头疼的问题，适配的方式也很多，今天主要讨论下使用viewport进行适配</p>\n<h2 id=\"ViewPort\"><a href=\"#ViewPort\" class=\"headerlink\" title=\"ViewPort\"></a>ViewPort</h2><p> 网上能找到的东西就不重复了请看这两篇博客<a href=\"http://www.jianshu.com/p/dd25d84647e2\" target=\"_blank\" rel=\"external\">《移动H5页面开发多屏适配 - viewport和像素篇》</a>以及<a href=\"http://www.cnblogs.com/2050/p/3877280.html\" target=\"_blank\" rel=\"external\">《移动前端开发之viewport的深入理解》</a></p>\n<p> 总结起来，当页面不设置ViewPort时，移动设备上的浏览器都会把自己默认的viewport设为980px或1024px（也可能是其它值，这个是由设备自己决定的），总之是一个比较大的值为了能展示pc上的网页。</p>\n<p> 对于一个专门为移动端设计的页面，980的宽度显然太大，所以需要重新设置viewport</p>\n<pre><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&quot;&gt;\n</code></pre><p> 在苹果的规范中，meta viewport 有6个属性(暂且把content中的那些东西称为一个个属性和值)，如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>width</td>\n<td>设置layout viewport  的宽度，为一个正整数，或字符串”width-device”</td>\n</tr>\n<tr>\n<td>initial-scale</td>\n<td>设置页面的初始缩放值，为一个数字，可以带小数</td>\n</tr>\n<tr>\n<td>minimum-scale</td>\n<td>允许用户的最小缩放值，为一个数字，可以带小数</td>\n</tr>\n<tr>\n<td>maximum-scale</td>\n<td>允许用户的最大缩放值，为一个数字，可以带小数</td>\n</tr>\n<tr>\n<td>height</td>\n<td>设置layout viewport  的高度，这个属性对我们并不重要，很少使用</td>\n</tr>\n<tr>\n<td>user-scalable</td>\n<td>是否允许用户进行缩放，值为”no”或”yes”, no 代表不允许，yes代表允许</td>\n</tr>\n</tbody>\n</table>\n<p>针对这几个属性，我做了一个简单的测试，测试数据可见这篇<a href=\"\">文章</a><br><a id=\"more\"></a></p>\n<p>在iphone和ipad上，无论你给viewport设的宽的是多少，如果没有指定默认的缩放值，则iphone和ipad会自动计算这个缩放值，以达到当前页面不会出现横向滚动条(或者说viewport的宽度就是屏幕的宽度)的目的。</p>\n","site":{"data":{}},"excerpt":"<p>移动端机型适配是个比较头疼的问题，适配的方式也很多，今天主要讨论下使用viewport进行适配</p>\n<h2 id=\"ViewPort\"><a href=\"#ViewPort\" class=\"headerlink\" title=\"ViewPort\"></a>ViewPort</h2><p> 网上能找到的东西就不重复了请看这两篇博客<a href=\"http://www.jianshu.com/p/dd25d84647e2\" target=\"_blank\" rel=\"external\">《移动H5页面开发多屏适配 - viewport和像素篇》</a>以及<a href=\"http://www.cnblogs.com/2050/p/3877280.html\" target=\"_blank\" rel=\"external\">《移动前端开发之viewport的深入理解》</a></p>\n<p> 总结起来，当页面不设置ViewPort时，移动设备上的浏览器都会把自己默认的viewport设为980px或1024px（也可能是其它值，这个是由设备自己决定的），总之是一个比较大的值为了能展示pc上的网页。</p>\n<p> 对于一个专门为移动端设计的页面，980的宽度显然太大，所以需要重新设置viewport</p>\n<pre><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&quot;&gt;\n</code></pre><p> 在苹果的规范中，meta viewport 有6个属性(暂且把content中的那些东西称为一个个属性和值)，如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>width</td>\n<td>设置layout viewport  的宽度，为一个正整数，或字符串”width-device”</td>\n</tr>\n<tr>\n<td>initial-scale</td>\n<td>设置页面的初始缩放值，为一个数字，可以带小数</td>\n</tr>\n<tr>\n<td>minimum-scale</td>\n<td>允许用户的最小缩放值，为一个数字，可以带小数</td>\n</tr>\n<tr>\n<td>maximum-scale</td>\n<td>允许用户的最大缩放值，为一个数字，可以带小数</td>\n</tr>\n<tr>\n<td>height</td>\n<td>设置layout viewport  的高度，这个属性对我们并不重要，很少使用</td>\n</tr>\n<tr>\n<td>user-scalable</td>\n<td>是否允许用户进行缩放，值为”no”或”yes”, no 代表不允许，yes代表允许</td>\n</tr>\n</tbody>\n</table>\n<p>针对这几个属性，我做了一个简单的测试，测试数据可见这篇<a href=\"\">文章</a><br></p>","more":"<p></p>\n<p>在iphone和ipad上，无论你给viewport设的宽的是多少，如果没有指定默认的缩放值，则iphone和ipad会自动计算这个缩放值，以达到当前页面不会出现横向滚动条(或者说viewport的宽度就是屏幕的宽度)的目的。</p>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-08-03T05:15:26.000Z","updated":"2017-08-03T05:15:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5w0cug70009ij666foyyhyj","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"},{"title":"Mac上搭建基于Hexo+Github的Blog","date":"2017-01-04T02:32:42.000Z","_content":"\n　　听人说资深程序员要没自己的blog都不好意思跟人打招呼，为了出去好zhuangB，参考一些文章，花了大半天搭建了基于Hexo+Github的Blog。\n主要参考了[这篇文章](http://www.cnblogs.com/MuYunyun/p/5927491.html)。\n\n## 准备工作\n　　Hexo基于NodeJs所以先需要安装NodeJS，可以去[官网]（https://nodejs.org/en/）下载安装，或者使用brew进行安装。还需要在GitHub上创建仓库以发布Blog。  \n<!--more-->\n### 安装NodeJS\n#### 安装brew\nruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n#### 卸载node\n　　如果已经安装了旧版本NodeJS可以先卸载，Hexo的某些插件可能需要新版本的node。\n \n\t清理brew的link\n\t$ brew cleanup\n\t删除node文件，完全卸载node和npm\n\tsudo rm -rf /usr/local/{lib/node{,/.npm,_modules},bin,share/man}/{npm*,node*,man1/node*}\n\t或者是\n\tsudo rm -rf /usr/local/bin/npm /usr/local/share/man/man1/node* /usr/local/lib/dtrace/node.d ~/.npm ~/.node-gyp /opt/local/bin/node opt/local/include/node /opt/local/lib/node_modules\n\t或者是下面这样：\n\t1. 在/usr/local/lib目录下，删除任何与node和 node_modules有关的目录；\n\t2. 在/usr/local/include 目录下，删除任何与node 和node_modules有关的目录；\n\t3. 如果你是通过**brew install node**安装的node，则在终端执行**brew uninstall node** ，并在home目录下查找 **local** 或**lib** 或 **include**文件夹，删除任何与**node** 和 **node_modules**有关的目录；\n\t4. 在**/usr/local/bin**目录下，删除任何与 **node** 执行文件；\n\t5. 最后下载 **nvm** ，跟随它的介绍安装node。当然，你也可以通过**npm**来安装最新版本的Node。\n\n#### brew安装node\n1. 首先更新brew，使其在最新版本，代码如下：  \n `$ brew update`  \n\n2. 确保brew是安全可靠的，代码如下：  \n `$ brew doctor`  \n   如果诊断有问题可以一一解决  \n\n3. 将brew的位置添加到$PATH环境变量中，并保存bash或者profile文件；  \n   `export PATH=\"/usr/local/bin:$PATH\"`\n\n4. 通过brew安装node和npm  \n`brew link node`  \n`brew uninstall node`  \n`brew install node`\n\n5. 查看安装版本  \n`node -v`  \n`npm -v`\n\n### 创建远程仓库\n　　登录Github帐号，新建仓库，用于blog的发布，名为`用户名.github.io`固定写法。  \n　　最好再创建一个仓库用于备份本地blog文件\n\n## 安装Hexo\n　　参考[官网教程](https://hexo.io/zh-cn/docs/index.html)安装Hexo，执行如下命令：  \n　　`$ sudo npm install -g hexo` \n\t\n\tHexo官网上的安装命令是$ npm install -g hexo-cli，安装时不要忘记前面加上sudo，否则会因为权限问题报错。\n\t我在第二次安装时加上sudo反而出现了权限问题，去掉就好了\n\n　　创建一个blog目录，用于存放本地文件：  \n　　`mkdir blog`  \n　　`cd blog`  \n　　在创建目录下初始化,并安装hexo blog文件：  \n　　`hexo init`  \n　　`npm install`  \n　　hexo自带一个测试服务器，可以在正式发布钱进行预览：\n　　`hexo s`  \n　　此时，浏览器中打开网址http://localhost:4000，能看到初始页面\n![logo](hexo-install/helloworld.png)\n","source":"_posts/hexo-install.md","raw":"---\ntitle: Mac上搭建基于Hexo+Github的Blog\ndate: 2017-01-04 10:32:42\ntags:\n  - Hexo\n  - 安装\ncategories: Hexo\n\n---\n\n　　听人说资深程序员要没自己的blog都不好意思跟人打招呼，为了出去好zhuangB，参考一些文章，花了大半天搭建了基于Hexo+Github的Blog。\n主要参考了[这篇文章](http://www.cnblogs.com/MuYunyun/p/5927491.html)。\n\n## 准备工作\n　　Hexo基于NodeJs所以先需要安装NodeJS，可以去[官网]（https://nodejs.org/en/）下载安装，或者使用brew进行安装。还需要在GitHub上创建仓库以发布Blog。  \n<!--more-->\n### 安装NodeJS\n#### 安装brew\nruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n#### 卸载node\n　　如果已经安装了旧版本NodeJS可以先卸载，Hexo的某些插件可能需要新版本的node。\n \n\t清理brew的link\n\t$ brew cleanup\n\t删除node文件，完全卸载node和npm\n\tsudo rm -rf /usr/local/{lib/node{,/.npm,_modules},bin,share/man}/{npm*,node*,man1/node*}\n\t或者是\n\tsudo rm -rf /usr/local/bin/npm /usr/local/share/man/man1/node* /usr/local/lib/dtrace/node.d ~/.npm ~/.node-gyp /opt/local/bin/node opt/local/include/node /opt/local/lib/node_modules\n\t或者是下面这样：\n\t1. 在/usr/local/lib目录下，删除任何与node和 node_modules有关的目录；\n\t2. 在/usr/local/include 目录下，删除任何与node 和node_modules有关的目录；\n\t3. 如果你是通过**brew install node**安装的node，则在终端执行**brew uninstall node** ，并在home目录下查找 **local** 或**lib** 或 **include**文件夹，删除任何与**node** 和 **node_modules**有关的目录；\n\t4. 在**/usr/local/bin**目录下，删除任何与 **node** 执行文件；\n\t5. 最后下载 **nvm** ，跟随它的介绍安装node。当然，你也可以通过**npm**来安装最新版本的Node。\n\n#### brew安装node\n1. 首先更新brew，使其在最新版本，代码如下：  \n `$ brew update`  \n\n2. 确保brew是安全可靠的，代码如下：  \n `$ brew doctor`  \n   如果诊断有问题可以一一解决  \n\n3. 将brew的位置添加到$PATH环境变量中，并保存bash或者profile文件；  \n   `export PATH=\"/usr/local/bin:$PATH\"`\n\n4. 通过brew安装node和npm  \n`brew link node`  \n`brew uninstall node`  \n`brew install node`\n\n5. 查看安装版本  \n`node -v`  \n`npm -v`\n\n### 创建远程仓库\n　　登录Github帐号，新建仓库，用于blog的发布，名为`用户名.github.io`固定写法。  \n　　最好再创建一个仓库用于备份本地blog文件\n\n## 安装Hexo\n　　参考[官网教程](https://hexo.io/zh-cn/docs/index.html)安装Hexo，执行如下命令：  \n　　`$ sudo npm install -g hexo` \n\t\n\tHexo官网上的安装命令是$ npm install -g hexo-cli，安装时不要忘记前面加上sudo，否则会因为权限问题报错。\n\t我在第二次安装时加上sudo反而出现了权限问题，去掉就好了\n\n　　创建一个blog目录，用于存放本地文件：  \n　　`mkdir blog`  \n　　`cd blog`  \n　　在创建目录下初始化,并安装hexo blog文件：  \n　　`hexo init`  \n　　`npm install`  \n　　hexo自带一个测试服务器，可以在正式发布钱进行预览：\n　　`hexo s`  \n　　此时，浏览器中打开网址http://localhost:4000，能看到初始页面\n![logo](hexo-install/helloworld.png)\n","slug":"hexo-install","published":1,"updated":"2017-08-03T05:10:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5w0cugc000cij66t5sz0myu","content":"<p>　　听人说资深程序员要没自己的blog都不好意思跟人打招呼，为了出去好zhuangB，参考一些文章，花了大半天搭建了基于Hexo+Github的Blog。<br>主要参考了<a href=\"http://www.cnblogs.com/MuYunyun/p/5927491.html\" target=\"_blank\" rel=\"external\">这篇文章</a>。</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><p>　　Hexo基于NodeJs所以先需要安装NodeJS，可以去[官网]（<a href=\"https://nodejs.org/en/）下载安装，或者使用brew进行安装。还需要在GitHub上创建仓库以发布Blog。\" target=\"_blank\" rel=\"external\">https://nodejs.org/en/）下载安装，或者使用brew进行安装。还需要在GitHub上创建仓库以发布Blog。</a><br><a id=\"more\"></a></p>\n<h3 id=\"安装NodeJS\"><a href=\"#安装NodeJS\" class=\"headerlink\" title=\"安装NodeJS\"></a>安装NodeJS</h3><h4 id=\"安装brew\"><a href=\"#安装brew\" class=\"headerlink\" title=\"安装brew\"></a>安装brew</h4><p>ruby -e “$(curl -fsSL <a href=\"https://raw.githubusercontent.com/Homebrew/install/master/install\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/Homebrew/install/master/install</a>)”</p>\n<h4 id=\"卸载node\"><a href=\"#卸载node\" class=\"headerlink\" title=\"卸载node\"></a>卸载node</h4><p>　　如果已经安装了旧版本NodeJS可以先卸载，Hexo的某些插件可能需要新版本的node。</p>\n<pre><code>清理brew的link\n$ brew cleanup\n删除node文件，完全卸载node和npm\nsudo rm -rf /usr/local/{lib/node{,/.npm,_modules},bin,share/man}/{npm*,node*,man1/node*}\n或者是\nsudo rm -rf /usr/local/bin/npm /usr/local/share/man/man1/node* /usr/local/lib/dtrace/node.d ~/.npm ~/.node-gyp /opt/local/bin/node opt/local/include/node /opt/local/lib/node_modules\n或者是下面这样：\n1. 在/usr/local/lib目录下，删除任何与node和 node_modules有关的目录；\n2. 在/usr/local/include 目录下，删除任何与node 和node_modules有关的目录；\n3. 如果你是通过**brew install node**安装的node，则在终端执行**brew uninstall node** ，并在home目录下查找 **local** 或**lib** 或 **include**文件夹，删除任何与**node** 和 **node_modules**有关的目录；\n4. 在**/usr/local/bin**目录下，删除任何与 **node** 执行文件；\n5. 最后下载 **nvm** ，跟随它的介绍安装node。当然，你也可以通过**npm**来安装最新版本的Node。\n</code></pre><h4 id=\"brew安装node\"><a href=\"#brew安装node\" class=\"headerlink\" title=\"brew安装node\"></a>brew安装node</h4><ol>\n<li><p>首先更新brew，使其在最新版本，代码如下：<br><code>$ brew update</code>  </p>\n</li>\n<li><p>确保brew是安全可靠的，代码如下：<br><code>$ brew doctor</code><br>如果诊断有问题可以一一解决  </p>\n</li>\n<li><p>将brew的位置添加到$PATH环境变量中，并保存bash或者profile文件；<br><code>export PATH=&quot;/usr/local/bin:$PATH&quot;</code></p>\n</li>\n<li><p>通过brew安装node和npm<br><code>brew link node</code><br><code>brew uninstall node</code><br><code>brew install node</code></p>\n</li>\n<li><p>查看安装版本<br><code>node -v</code><br><code>npm -v</code></p>\n</li>\n</ol>\n<h3 id=\"创建远程仓库\"><a href=\"#创建远程仓库\" class=\"headerlink\" title=\"创建远程仓库\"></a>创建远程仓库</h3><p>　　登录Github帐号，新建仓库，用于blog的发布，名为<code>用户名.github.io</code>固定写法。<br>　　最好再创建一个仓库用于备份本地blog文件</p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p>　　参考<a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"external\">官网教程</a>安装Hexo，执行如下命令：<br>　　<code>$ sudo npm install -g hexo</code> </p>\n<pre><code>Hexo官网上的安装命令是$ npm install -g hexo-cli，安装时不要忘记前面加上sudo，否则会因为权限问题报错。\n我在第二次安装时加上sudo反而出现了权限问题，去掉就好了\n</code></pre><p>　　创建一个blog目录，用于存放本地文件：<br>　　<code>mkdir blog</code><br>　　<code>cd blog</code><br>　　在创建目录下初始化,并安装hexo blog文件：<br>　　<code>hexo init</code><br>　　<code>npm install</code><br>　　hexo自带一个测试服务器，可以在正式发布钱进行预览：<br>　　<code>hexo s</code><br>　　此时，浏览器中打开网址<a href=\"http://localhost:4000，能看到初始页面\" target=\"_blank\" rel=\"external\">http://localhost:4000，能看到初始页面</a><br><img src=\"/2017/01/04/hexo-install/helloworld.png\" alt=\"logo\"></p>\n","site":{"data":{}},"excerpt":"<p>　　听人说资深程序员要没自己的blog都不好意思跟人打招呼，为了出去好zhuangB，参考一些文章，花了大半天搭建了基于Hexo+Github的Blog。<br>主要参考了<a href=\"http://www.cnblogs.com/MuYunyun/p/5927491.html\" target=\"_blank\" rel=\"external\">这篇文章</a>。</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><p>　　Hexo基于NodeJs所以先需要安装NodeJS，可以去[官网]（<a href=\"https://nodejs.org/en/）下载安装，或者使用brew进行安装。还需要在GitHub上创建仓库以发布Blog。\" target=\"_blank\" rel=\"external\">https://nodejs.org/en/）下载安装，或者使用brew进行安装。还需要在GitHub上创建仓库以发布Blog。</a><br></p>","more":"<p></p>\n<h3 id=\"安装NodeJS\"><a href=\"#安装NodeJS\" class=\"headerlink\" title=\"安装NodeJS\"></a>安装NodeJS</h3><h4 id=\"安装brew\"><a href=\"#安装brew\" class=\"headerlink\" title=\"安装brew\"></a>安装brew</h4><p>ruby -e “$(curl -fsSL <a href=\"https://raw.githubusercontent.com/Homebrew/install/master/install\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/Homebrew/install/master/install</a>)”</p>\n<h4 id=\"卸载node\"><a href=\"#卸载node\" class=\"headerlink\" title=\"卸载node\"></a>卸载node</h4><p>　　如果已经安装了旧版本NodeJS可以先卸载，Hexo的某些插件可能需要新版本的node。</p>\n<pre><code>清理brew的link\n$ brew cleanup\n删除node文件，完全卸载node和npm\nsudo rm -rf /usr/local/{lib/node{,/.npm,_modules},bin,share/man}/{npm*,node*,man1/node*}\n或者是\nsudo rm -rf /usr/local/bin/npm /usr/local/share/man/man1/node* /usr/local/lib/dtrace/node.d ~/.npm ~/.node-gyp /opt/local/bin/node opt/local/include/node /opt/local/lib/node_modules\n或者是下面这样：\n1. 在/usr/local/lib目录下，删除任何与node和 node_modules有关的目录；\n2. 在/usr/local/include 目录下，删除任何与node 和node_modules有关的目录；\n3. 如果你是通过**brew install node**安装的node，则在终端执行**brew uninstall node** ，并在home目录下查找 **local** 或**lib** 或 **include**文件夹，删除任何与**node** 和 **node_modules**有关的目录；\n4. 在**/usr/local/bin**目录下，删除任何与 **node** 执行文件；\n5. 最后下载 **nvm** ，跟随它的介绍安装node。当然，你也可以通过**npm**来安装最新版本的Node。\n</code></pre><h4 id=\"brew安装node\"><a href=\"#brew安装node\" class=\"headerlink\" title=\"brew安装node\"></a>brew安装node</h4><ol>\n<li><p>首先更新brew，使其在最新版本，代码如下：<br><code>$ brew update</code>  </p>\n</li>\n<li><p>确保brew是安全可靠的，代码如下：<br><code>$ brew doctor</code><br>如果诊断有问题可以一一解决  </p>\n</li>\n<li><p>将brew的位置添加到$PATH环境变量中，并保存bash或者profile文件；<br><code>export PATH=&quot;/usr/local/bin:$PATH&quot;</code></p>\n</li>\n<li><p>通过brew安装node和npm<br><code>brew link node</code><br><code>brew uninstall node</code><br><code>brew install node</code></p>\n</li>\n<li><p>查看安装版本<br><code>node -v</code><br><code>npm -v</code></p>\n</li>\n</ol>\n<h3 id=\"创建远程仓库\"><a href=\"#创建远程仓库\" class=\"headerlink\" title=\"创建远程仓库\"></a>创建远程仓库</h3><p>　　登录Github帐号，新建仓库，用于blog的发布，名为<code>用户名.github.io</code>固定写法。<br>　　最好再创建一个仓库用于备份本地blog文件</p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p>　　参考<a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"external\">官网教程</a>安装Hexo，执行如下命令：<br>　　<code>$ sudo npm install -g hexo</code> </p>\n<pre><code>Hexo官网上的安装命令是$ npm install -g hexo-cli，安装时不要忘记前面加上sudo，否则会因为权限问题报错。\n我在第二次安装时加上sudo反而出现了权限问题，去掉就好了\n</code></pre><p>　　创建一个blog目录，用于存放本地文件：<br>　　<code>mkdir blog</code><br>　　<code>cd blog</code><br>　　在创建目录下初始化,并安装hexo blog文件：<br>　　<code>hexo init</code><br>　　<code>npm install</code><br>　　hexo自带一个测试服务器，可以在正式发布钱进行预览：<br>　　<code>hexo s</code><br>　　此时，浏览器中打开网址<a href=\"http://localhost:4000，能看到初始页面\" target=\"_blank\" rel=\"external\">http://localhost:4000，能看到初始页面</a><br><img src=\"/2017/01/04/hexo-install/helloworld.png\" alt=\"logo\"></p>"},{"title":"为什么extends是魔鬼","date":"2017-01-06T08:02:08.000Z","_content":"# 为什么extends是魔鬼\n**_通过使用接口替换具体的base类来改进你的代码_**\n\n[原文地址](http://www.javaworld.com/javaworld/jw-08-2003/jw-0801-toolbox.html)\n\n# 前言\n　　`extends`关键字是魔鬼。可能还没有达到Charles Manson的程度，但是也已经达到了需要敬而远之的地步。四人帮的设计模式一书详尽的讨论了使用接口继承(`implements`)替代实现继承(`extends`)。\n　　\n　　好的设计者基于接口编写代码而不是依靠具体的基础类。这篇文章阐述了为什么设计者有这种古怪习惯，以及介绍一些基于接口的编程基础。\n\n\n## 接口与类\n\n　　一次我去参加一个Java用户小组会议，当时Java的发明者James Gosling是主讲人。在那个另人难忘的提问环节，有人问他：“如果给你个机会重新设计JAVA，你会做些什么改变？”。他回答道：“我会去除类”。在哄堂大笑之后他解释到从本质上问题不出在类本身而出在实现继承关系上。(`extends`关系)。接口继承（`implements`关系）是更好的。你应该尽可能的避免实现继承关系无论在何时。\n<!--more-->\n## 失去灵活性\n　　为什么要避免实现继承关系？首当其冲的问题是明确使用具体的类名会把你与特定的实现捆绑在一起，这给以后的变更带来了不必要的麻烦。\n\n　　设计和开发并行是现代敏捷开发理念的核心观点。在完全设计好程序之前就已经开始着手开发了。这种技术悍然无视传统理论中开发之前必须有完备设计的观念，但是很多的成功项目都证明比起传统途径来你可以使用敏捷理念来更快速更有性价比的开发高质量代码。然而，在并行开发的理念中灵活性是核心理念。你不得不使你的代码能够做到只需很小的改动就能把新需求融合到现有的代码中去。\n\n　　只实现明确需要的特性而不是实现可能需要的特性并且包容变化。没有这种灵活性，并行开发是不可能的。\n\n　　面向接口编程是灵活结构的核心。为了说清为什么，让我们来看看当不用的时候会发生什么。思考以下代码\n\n\tf()\n\t{   LinkedList list = new LinkedList();\n\t\t//...\n\t\tg( list );\n\t}\n\tg( LinkedList list )\n\t{\n\t\tlist.add( ... );\n\t\tg2( list )\n\t}\n\n　　现在设想一个新的快速查找的需求出现了，因此LinkedList不能解决问题。你需要使用HashSet取代。在现在的代码里，这个改动不局限于一处因为你必须同事改动f函数和g函数以及所有像g函数那样获取这个list的方法。\n\n　　重写代码如下:\n\n\tf()\n\t{   Collection list = new LinkedList();\n\t\t//...\n\t\tg( list );\n\t}\n\tg( Collection list )\n\t{\n\t\tlist.add( ... );\n\t\tg2( list )\n\t}\n　　重构使得只需要简单的把new LinkedList( )替换成new HashSet( ) 酒可以把Link list改成hash表。就是这么神奇，不要其他任何改动。\n\n　　另一个例子，比较下以下两段代码：\n\t\n\tf()\n\t{   Collection c = new HashSet();\n\t\t//...\n\t\tg( c );\n\t}\n\tg( Collection c )\n\t{\n\t\tfor( Iterator i = c.iterator(); i.hasNext() ;)\n\t\tdo_something_with( i.next() );\n\t}\n\tf2()\n\t{   Collection c = new HashSet();\n\t\t//...\n\t\tg2( c.iterator() );\n\t}\n\tg2( Iterator i )\n\t{   while( i.hasNext() ;)\n\t\tdo_something_with( i.next() );\n\t}\n　　g2函数现在不仅可以遍历Collection的衍生对象也可以遍历像Map这种键值列表。事实上，你能使用迭代器生成数据而不是遍历集合。你可以使用迭代器为程序从测试框架或者文件中收集信息。这里面有巨大的灵活性\n\n## 耦合\n　　实现继承的一个更关键的问题时耦合——一部分模块对另一部分不恰当的依赖。强耦合带来麻烦最经典的例子是全局变量。比如你改变了全局变量的类型，所有使用这个变量（也就是耦合于此变量）的所有函数都会收到影响，因此所有的代码都必须被检查、修改、重新测试。进一步，所有函数都因为使用了这个变量而被彼此耦合在一起。如果一个方法在不恰当的时间修改了变量的值那么它就可能错误的影响了其他函数的表现。这个问题在多线程的程序中特别的可怕。\n\n　　作为一个设计这，你应该致力于构建最小的耦合关系。你不能完全消除耦合因为一个类对象调用另一个对象的方法是松耦合的一种形式。一个没有耦合的程序是天方夜谭。虽然如此，你只要闭着眼睛去遵循OO的戒律（最重要的是一个类的实现应该对调用的类完全隐藏）就能把耦合降到最低。比如类实例变量（不是常量的成员字段）应该始终是私有的。句号！毫无例外！永远！（你能偶尔有效地使用`protected`方法，但是`protected`实例变量是被唾弃的）你永远不应该使用get/set方法因为相同的原因——它只是用一个非常复杂的方法使成员变成了共有的（虽然返回成熟对象的存取方法而不是基本类型值在某些情况下是合理的，比如当返回的对象在设计中是一个关键的抽象）\n\n　　我不是在这卖弄学问。我已经找到了一条途径去解决严格的OO方法、快速开发和易维护性之间的矛盾。每当我违反一条OO的核心原则类似实现隐藏，最终否导致我必须重写那些代码（最常见的原因是不能进行debug）。我没有时间重写代码，所以我遵循这些规则。我的顾虑都是很实际的而不是为了完美而完美。\n\n## 脆弱的基础类问题\n　　现在，让我们把耦合的概念应用到继承.在一个使用`extends`的实现继承系统里,衍生类与基础类有着非常紧密的耦合。这种密切的联系是不可取的。设计者给这种行为起了个绰号“脆弱的基础类问题”。基础类被认为是脆弱的因为你能用一种看似看全的方法修改技术类，但是这个新的行为当被衍生类继承后可能导致衍生类出现故障。你不能简单说一个基础类是否安全仅仅是通过单独测试基础类的方法。你也必须测试所有的衍生类。进一步，你必须检查所有使用基础类和衍生类对象的代码，因为这些代码可能被新的行为破坏。一个简单的关键基础类的变动可能导致整个程序无法工作。\n\n　　让我们一起检查脆弱的基础类和基础类耦合问题。下面的类继承了Java的ArrayList类并添加一个类似于栈的新行为：\n\n\tclass Stack extends ArrayList\n\t{   private int stack_pointer = 0;\n\t\tpublic void push( Object article )\n\t\t{   add( stack_pointer++, article );\n\t\t}\n\t\tpublic Object pop()\n\t\t{   return remove( --stack_pointer );\n\t\t}\n\t\tpublic void push_many( Object[] articles )\n\t\t{   for( int i = 0; i < articles.length; ++i )\n\t\t\tpush( articles[i] );\n\t\t}\n\t}\n　　如此之简单的类都会有问题。考虑当一个用户利用继承并使用`ArrayList`的`clear()`方法去清空栈：\n\n\tStack a_stack = new Stack();\n\ta_stack.push(\"1\");\n\ta_stack.push(\"2\");\n\ta_stack.clear();\n　　代码成功编译，但因为基础类不知道`stack_pointer`的存在，这个栈对象现在是没有定义的状态。下一个调用`push()`你压入新的元素在序列2处（`stack_pointer`当前值），因此栈事实上有3个元素，底部的两个变成了脏数据。（Java的栈类有相同的问题，不要使用他）。\n\n　　一个解决这个方法继承不当的问题是为栈重写所有的`ArrayList`方法使其能修改队列状态，重写那些方法去正确操作`stack_pointer`或者抛出异常。（`removeRange()`方法是一个很好的抛出异常的候选者）\n\n　　这个方法有两个劣势。首先，你重写了所有方法，基础类实际上变成了一个接口，不是一个类。既然你不使用任何继承方法那么实现继承还有任何意义吗？其次，一个更重要的原因，你不想栈支持所有的`ArrayList`方法。例如烦人的`removeRange`方法就毫无用处。对于继承来的无用的方法唯一可行的办法是抛出异常，因为它应该永远不会被调用。这种方式实际上把一个编译错误变成了运行时错误。非常不好。如果一个方法不是简单因为未被声明而被编译器检查出方法未找到错误。如果方法仅仅是抛出异常，那么你在程序运行钱都不会发现调用错误。\n\n　　一个更好的基础类解决方案是封装数据机构代替使用继承。下面是一个新的改进过的栈版本\n\n\tclass Stack\n\t{   private int stack_pointer = 0;\n\t\tprivate ArrayList the_data = new ArrayList();\n\t\tpublic void push( Object article )\n\t\t{   the_data.add( stack_pointer++, article );\n\t\t}\n\t\tpublic Object pop()\n\t\t{   return the_data.remove( --stack_pointer );\n\t\t}\n\t\tpublic void push_many( Object[] articles )\n\t\t{   for( int i = 0; i < o.length; ++i )\n\t\t\tpush( articles[i] );\n\t\t}\n\t}\n　　到目前为止看起来还不错，但是考虑考虑脆弱的基础类问题。让我们看下当你想创建一个栈的变体用来跟踪确定时间端内栈的最大值，一个可能的实现如下所示：\n\n\tclass Monitorable_stack extends Stack\n\t{\n\t\tprivate int high_water_mark = 0;\n\t\tprivate int current_size;\n\t\tpublic void push( Object article )\n\t\t{   if( ++current_size > high_water_mark )\n\t\t\thigh_water_mark = current_size;\n\t\t\tsuper.push(article);\n\t\t}\n\t\tpublic Object pop()\n\t\t{   --current_size;\n\t\t\treturn super.pop();\n\t\t}\n\t\tpublic int maximum_size_so_far()\n\t\t{   return high_water_mark;\n\t\t}\n\t}\n　　这个新对象运行正常，至少暂时是这样，不幸的是这段代码利用了一个事实那就是`push_many()`是通过调用`push()`来完成它的工作的。其实，这些细节似乎不是一个坏的选择。这简化了代码，你通过重载`push()`版本来实现，即使当`Monitorable_stact`通过获得一个`stack`引用来实现的，所以`high_water_mark`正确的更新了。\n　　\n　　在一个阳光明媚的日子，某人可能跑了一个性能测试并且注意到Stack类在被大量使用时运行效率不太理想。你决定重写Stack并且放弃使用ArrayList，因此你提高了Stack类的性能。下面是新类的部分核心代码：\n\n\tclass Stack\n\t{   private int stack_pointer = -1;\n\t\tprivate Object[] stack = new Object[1000];\n\t\tpublic void push( Object article )\n\t\t{   assert stack_pointer < stack.length;\n\t\t\tstack[ ++stack_pointer ] = article;\n\t\t}\n\t\tpublic Object pop()\n\t\t{   assert stack_pointer >= 0;\n\t\t\treturn stack[ stack_pointer-- ];\n\t\t}\n\t\tpublic void push_many( Object[] articles )\n\t\t{   assert (stack_pointer + articles.length) < stack.length;\n\t\t\tSystem.arraycopy(articles, 0, stack, stack_pointer+1,\n\t\t\t\t\t\t\t\tarticles.length);\n\t\t\tstack_pointer += articles.length;\n\t\t}\n\t}\n　　注意`push_many()`不再重复调用`push( )`而是使用了块转移。新的栈版本工作的很好；事实上，它比前个版本要更好。不幸的是，`Monitorable_stack`衍生类将不再工作，因为当`push_many`被调用是它不能正确的跟踪栈的使用情况。（衍生类的push版本不再被`push_many`调用，所以`push_many`也不再更新high_water_mark）。Stack就是脆弱的基础类。事实证明，通过谨慎的做法来解决这些问题几乎是不可能的。\n　　\n　　记住，如果你使用接口继承就不会有这些问题，因为没有继承的方法会对你产生不利的影响。如果Stack是接口，通过同时实现`Simple_stack`和`Monitorable_stack`来使用,代码会变得更健壮。\n　　\n　　我在清单0.1中提供一个基于接口的解决方案。这个解决方案和实现继承方案有相同的灵活性：你能在Stack抽象基础上构建你的代码为不用担心你究竟是在操作哪种具体类型的栈。既然两个实现类必须提供公共接口中的所有东西的实现版本，因此很难出现前面所讲的问题。虽然不使用基础类我仍然能获得类似的好处，因为我使用了封装而不是派生。另一方面，在封装类中我不得不使用没有价值的访问方法去访问默认的实现。(比如在第41行`Monitorable_Stack.push(…）`不得不在`Simp_stack`中调用`equivalent`方法。程序员总是抱怨写这些看似多余的代码，但是多些一行代码的代价比起一个消除一个严重的隐藏bug来还是微不足道的。\nListing 0.1. Eliminate fragile base classes using interfaces\n\n\t 1| import java.util.*;\n\t 2| \n\t 3| interface Stack\n\t 4| {\n\t 5|　　 \tvoid push( Object o );\n\t 6|　　 \tObject pop();\n\t 7|　　 \tvoid push_many( Object[] source );\n\t 8| }\n\t 9| \n\t10| class Simple_stack `implements` Stack\n\t11| {   private int stack_pointer = -1;\n\t12|　　 \tprivate Object[] stack = new Object[1000];\n\t13| \n\t14|　　 public void push( Object o )\n\t15|　　 {   \tassert stack_pointer < stack.length;\n\t16| \n\t17|　　 \t\tstack[ ++stack_pointer ] = o;\n\t18|　　 }\n\t19| \n\t20|　　 public Object pop()\n\t21|　　 {   \tassert stack_pointer >= 0;\n\t22| \n\t23|　　 \t\treturn stack[ stack_pointer-- ];\n\t24|　　 }\n\t25| \n\t26|　　 public void push_many( Object[] source )\n\t27|　　 {   \tassert (stack_pointer + source.length) < stack.length;\n\t28| \n\t29|　　 \t\tSystem.arraycopy(source,0,stack,stack_pointer+1,source.length);\n\t30|　　 \t\tstack_pointer += source.length;\n\t31|　　 }\n\t32| }\n\t33| \n\t34| \n\t35| class Monitorable_Stack `implements` Stack\n\t36| {\n\t37|　　 private int high_water_mark = 0;\n\t38|　　 private int current_size;\n\t39|　　 Simple_stack stack = new Simple_stack();\n\t40| \n\t41|　　 public void push( Object o )\n\t42|　　 {   if( ++current_size > high_water_mark )\n\t43|　　　　 \t\thigh_water_mark = current_size;\n\t44|　　 \t\tstack.push(o);\n\t45|　　 }\n\t46|　　 \n\t47|　　 public Object pop()\n\t48|　　 {   \t--current_size;\n\t49|　　 \t\treturn stack.pop();\n\t50|　　 }\n\t51| \n\t52|　　 public void push_many( Object[] source )\n\t53|　　 {\n\t54|　　 \t\tif( current_size + source.length > high_water_mark )\n\t55|　　　　\t\thigh_water_mark = current_size + source.length;\n\t56| \n\t57|　　 \t\tstack.push_many( source );\n\t58|　　 }\n\t59| \n\t60|　　 public int maximum_size()\n\t61|　　 {   return high_water_mark;\n\t62|　　 }\n\t63| }\n\t64| \n## 框架\n　　脱离了具体的程序架构来谈脆弱的基础类问题就是耍流氓。像MFC这样的框架已经成为了类库构建的流行方式。尽管MFC本身正在令人欣喜的逐渐衰弱，但是在微软商店里MFC框架还是拥有统治地位因为那里的程序员相信微软即正义。\n　　基于框架的系统通常开始于库提供的半成品类，你不需要做任何事，只要通过派生类去提供缺失的方法。典型的例子是Java的`Component`类里的`paint`方法，这个方法只不过是一个占位符；派生类必须提供真实的实现版本。\n　　你能适当的避免这类事情，但是基于类派生订制实现的类框架是极其脆弱的。基础类太脆弱了。当我在MFC中开发程序，我就要有随时改写程序以应对微软发布新版本的觉悟。今天可用的代码到了明天就未必了，因为基础类方法变了。\n　　所有的java包都是即插即用工作良好。你不需要继承任何东西并实现方法。这种即插即用的工作机构要好于基于派生的框架。它更易维护和使用并且不会把你的代码置于因为Sun公司修改类库实现而崩溃的风险之下。\n\n## 总结脆弱的基础类\n　　通常来讲，最好是避免使用具体的基础类和`extends`继承关系而以接口和`implements`实现关系取代。我的经验法则是我最少80%的代码需要基于接口重构。比如，我永远不会使用HashMap的引用，而是使用Map接口。（我这里使用宽泛的“接口”定义。当你看到InputStream如何实现你就会知道实际上它也是个接口，尽管在Java中是需要被实现的抽象类。）\n　　你使用越多的抽象，你就能获得越大的灵活性。在如今的商业环境里，开发过程中需求不断变化，这种灵活性是必须的。进一步，绝大多数的敏捷开发方法论（比如Crystal和极限开发）无法实施除非代码都是基于抽象的。\n　　如果你仔细阅读四人帮的设计模式，你会发现他们提供的许多方法都是消除了实现继承取而代之的是接口继承，这是大多数模式的普遍特征。这个重要的事实就是我们开头所说的：设计模式是被发现的而不是被发明的。设计模式总结了那些优美的、易于维护的代码。他告诉我们优美的、易于维护的代码都不惜一切代价避免实现继承。","source":"_posts/why-extends-is-evil.md","raw":"---\ntitle: 为什么extends是魔鬼\ndate: 2017-01-06 16:02:08\ntags:\n  - Java\n  - 继承\n  - 翻译\ncategories: Java\n\n---\n# 为什么extends是魔鬼\n**_通过使用接口替换具体的base类来改进你的代码_**\n\n[原文地址](http://www.javaworld.com/javaworld/jw-08-2003/jw-0801-toolbox.html)\n\n# 前言\n　　`extends`关键字是魔鬼。可能还没有达到Charles Manson的程度，但是也已经达到了需要敬而远之的地步。四人帮的设计模式一书详尽的讨论了使用接口继承(`implements`)替代实现继承(`extends`)。\n　　\n　　好的设计者基于接口编写代码而不是依靠具体的基础类。这篇文章阐述了为什么设计者有这种古怪习惯，以及介绍一些基于接口的编程基础。\n\n\n## 接口与类\n\n　　一次我去参加一个Java用户小组会议，当时Java的发明者James Gosling是主讲人。在那个另人难忘的提问环节，有人问他：“如果给你个机会重新设计JAVA，你会做些什么改变？”。他回答道：“我会去除类”。在哄堂大笑之后他解释到从本质上问题不出在类本身而出在实现继承关系上。(`extends`关系)。接口继承（`implements`关系）是更好的。你应该尽可能的避免实现继承关系无论在何时。\n<!--more-->\n## 失去灵活性\n　　为什么要避免实现继承关系？首当其冲的问题是明确使用具体的类名会把你与特定的实现捆绑在一起，这给以后的变更带来了不必要的麻烦。\n\n　　设计和开发并行是现代敏捷开发理念的核心观点。在完全设计好程序之前就已经开始着手开发了。这种技术悍然无视传统理论中开发之前必须有完备设计的观念，但是很多的成功项目都证明比起传统途径来你可以使用敏捷理念来更快速更有性价比的开发高质量代码。然而，在并行开发的理念中灵活性是核心理念。你不得不使你的代码能够做到只需很小的改动就能把新需求融合到现有的代码中去。\n\n　　只实现明确需要的特性而不是实现可能需要的特性并且包容变化。没有这种灵活性，并行开发是不可能的。\n\n　　面向接口编程是灵活结构的核心。为了说清为什么，让我们来看看当不用的时候会发生什么。思考以下代码\n\n\tf()\n\t{   LinkedList list = new LinkedList();\n\t\t//...\n\t\tg( list );\n\t}\n\tg( LinkedList list )\n\t{\n\t\tlist.add( ... );\n\t\tg2( list )\n\t}\n\n　　现在设想一个新的快速查找的需求出现了，因此LinkedList不能解决问题。你需要使用HashSet取代。在现在的代码里，这个改动不局限于一处因为你必须同事改动f函数和g函数以及所有像g函数那样获取这个list的方法。\n\n　　重写代码如下:\n\n\tf()\n\t{   Collection list = new LinkedList();\n\t\t//...\n\t\tg( list );\n\t}\n\tg( Collection list )\n\t{\n\t\tlist.add( ... );\n\t\tg2( list )\n\t}\n　　重构使得只需要简单的把new LinkedList( )替换成new HashSet( ) 酒可以把Link list改成hash表。就是这么神奇，不要其他任何改动。\n\n　　另一个例子，比较下以下两段代码：\n\t\n\tf()\n\t{   Collection c = new HashSet();\n\t\t//...\n\t\tg( c );\n\t}\n\tg( Collection c )\n\t{\n\t\tfor( Iterator i = c.iterator(); i.hasNext() ;)\n\t\tdo_something_with( i.next() );\n\t}\n\tf2()\n\t{   Collection c = new HashSet();\n\t\t//...\n\t\tg2( c.iterator() );\n\t}\n\tg2( Iterator i )\n\t{   while( i.hasNext() ;)\n\t\tdo_something_with( i.next() );\n\t}\n　　g2函数现在不仅可以遍历Collection的衍生对象也可以遍历像Map这种键值列表。事实上，你能使用迭代器生成数据而不是遍历集合。你可以使用迭代器为程序从测试框架或者文件中收集信息。这里面有巨大的灵活性\n\n## 耦合\n　　实现继承的一个更关键的问题时耦合——一部分模块对另一部分不恰当的依赖。强耦合带来麻烦最经典的例子是全局变量。比如你改变了全局变量的类型，所有使用这个变量（也就是耦合于此变量）的所有函数都会收到影响，因此所有的代码都必须被检查、修改、重新测试。进一步，所有函数都因为使用了这个变量而被彼此耦合在一起。如果一个方法在不恰当的时间修改了变量的值那么它就可能错误的影响了其他函数的表现。这个问题在多线程的程序中特别的可怕。\n\n　　作为一个设计这，你应该致力于构建最小的耦合关系。你不能完全消除耦合因为一个类对象调用另一个对象的方法是松耦合的一种形式。一个没有耦合的程序是天方夜谭。虽然如此，你只要闭着眼睛去遵循OO的戒律（最重要的是一个类的实现应该对调用的类完全隐藏）就能把耦合降到最低。比如类实例变量（不是常量的成员字段）应该始终是私有的。句号！毫无例外！永远！（你能偶尔有效地使用`protected`方法，但是`protected`实例变量是被唾弃的）你永远不应该使用get/set方法因为相同的原因——它只是用一个非常复杂的方法使成员变成了共有的（虽然返回成熟对象的存取方法而不是基本类型值在某些情况下是合理的，比如当返回的对象在设计中是一个关键的抽象）\n\n　　我不是在这卖弄学问。我已经找到了一条途径去解决严格的OO方法、快速开发和易维护性之间的矛盾。每当我违反一条OO的核心原则类似实现隐藏，最终否导致我必须重写那些代码（最常见的原因是不能进行debug）。我没有时间重写代码，所以我遵循这些规则。我的顾虑都是很实际的而不是为了完美而完美。\n\n## 脆弱的基础类问题\n　　现在，让我们把耦合的概念应用到继承.在一个使用`extends`的实现继承系统里,衍生类与基础类有着非常紧密的耦合。这种密切的联系是不可取的。设计者给这种行为起了个绰号“脆弱的基础类问题”。基础类被认为是脆弱的因为你能用一种看似看全的方法修改技术类，但是这个新的行为当被衍生类继承后可能导致衍生类出现故障。你不能简单说一个基础类是否安全仅仅是通过单独测试基础类的方法。你也必须测试所有的衍生类。进一步，你必须检查所有使用基础类和衍生类对象的代码，因为这些代码可能被新的行为破坏。一个简单的关键基础类的变动可能导致整个程序无法工作。\n\n　　让我们一起检查脆弱的基础类和基础类耦合问题。下面的类继承了Java的ArrayList类并添加一个类似于栈的新行为：\n\n\tclass Stack extends ArrayList\n\t{   private int stack_pointer = 0;\n\t\tpublic void push( Object article )\n\t\t{   add( stack_pointer++, article );\n\t\t}\n\t\tpublic Object pop()\n\t\t{   return remove( --stack_pointer );\n\t\t}\n\t\tpublic void push_many( Object[] articles )\n\t\t{   for( int i = 0; i < articles.length; ++i )\n\t\t\tpush( articles[i] );\n\t\t}\n\t}\n　　如此之简单的类都会有问题。考虑当一个用户利用继承并使用`ArrayList`的`clear()`方法去清空栈：\n\n\tStack a_stack = new Stack();\n\ta_stack.push(\"1\");\n\ta_stack.push(\"2\");\n\ta_stack.clear();\n　　代码成功编译，但因为基础类不知道`stack_pointer`的存在，这个栈对象现在是没有定义的状态。下一个调用`push()`你压入新的元素在序列2处（`stack_pointer`当前值），因此栈事实上有3个元素，底部的两个变成了脏数据。（Java的栈类有相同的问题，不要使用他）。\n\n　　一个解决这个方法继承不当的问题是为栈重写所有的`ArrayList`方法使其能修改队列状态，重写那些方法去正确操作`stack_pointer`或者抛出异常。（`removeRange()`方法是一个很好的抛出异常的候选者）\n\n　　这个方法有两个劣势。首先，你重写了所有方法，基础类实际上变成了一个接口，不是一个类。既然你不使用任何继承方法那么实现继承还有任何意义吗？其次，一个更重要的原因，你不想栈支持所有的`ArrayList`方法。例如烦人的`removeRange`方法就毫无用处。对于继承来的无用的方法唯一可行的办法是抛出异常，因为它应该永远不会被调用。这种方式实际上把一个编译错误变成了运行时错误。非常不好。如果一个方法不是简单因为未被声明而被编译器检查出方法未找到错误。如果方法仅仅是抛出异常，那么你在程序运行钱都不会发现调用错误。\n\n　　一个更好的基础类解决方案是封装数据机构代替使用继承。下面是一个新的改进过的栈版本\n\n\tclass Stack\n\t{   private int stack_pointer = 0;\n\t\tprivate ArrayList the_data = new ArrayList();\n\t\tpublic void push( Object article )\n\t\t{   the_data.add( stack_pointer++, article );\n\t\t}\n\t\tpublic Object pop()\n\t\t{   return the_data.remove( --stack_pointer );\n\t\t}\n\t\tpublic void push_many( Object[] articles )\n\t\t{   for( int i = 0; i < o.length; ++i )\n\t\t\tpush( articles[i] );\n\t\t}\n\t}\n　　到目前为止看起来还不错，但是考虑考虑脆弱的基础类问题。让我们看下当你想创建一个栈的变体用来跟踪确定时间端内栈的最大值，一个可能的实现如下所示：\n\n\tclass Monitorable_stack extends Stack\n\t{\n\t\tprivate int high_water_mark = 0;\n\t\tprivate int current_size;\n\t\tpublic void push( Object article )\n\t\t{   if( ++current_size > high_water_mark )\n\t\t\thigh_water_mark = current_size;\n\t\t\tsuper.push(article);\n\t\t}\n\t\tpublic Object pop()\n\t\t{   --current_size;\n\t\t\treturn super.pop();\n\t\t}\n\t\tpublic int maximum_size_so_far()\n\t\t{   return high_water_mark;\n\t\t}\n\t}\n　　这个新对象运行正常，至少暂时是这样，不幸的是这段代码利用了一个事实那就是`push_many()`是通过调用`push()`来完成它的工作的。其实，这些细节似乎不是一个坏的选择。这简化了代码，你通过重载`push()`版本来实现，即使当`Monitorable_stact`通过获得一个`stack`引用来实现的，所以`high_water_mark`正确的更新了。\n　　\n　　在一个阳光明媚的日子，某人可能跑了一个性能测试并且注意到Stack类在被大量使用时运行效率不太理想。你决定重写Stack并且放弃使用ArrayList，因此你提高了Stack类的性能。下面是新类的部分核心代码：\n\n\tclass Stack\n\t{   private int stack_pointer = -1;\n\t\tprivate Object[] stack = new Object[1000];\n\t\tpublic void push( Object article )\n\t\t{   assert stack_pointer < stack.length;\n\t\t\tstack[ ++stack_pointer ] = article;\n\t\t}\n\t\tpublic Object pop()\n\t\t{   assert stack_pointer >= 0;\n\t\t\treturn stack[ stack_pointer-- ];\n\t\t}\n\t\tpublic void push_many( Object[] articles )\n\t\t{   assert (stack_pointer + articles.length) < stack.length;\n\t\t\tSystem.arraycopy(articles, 0, stack, stack_pointer+1,\n\t\t\t\t\t\t\t\tarticles.length);\n\t\t\tstack_pointer += articles.length;\n\t\t}\n\t}\n　　注意`push_many()`不再重复调用`push( )`而是使用了块转移。新的栈版本工作的很好；事实上，它比前个版本要更好。不幸的是，`Monitorable_stack`衍生类将不再工作，因为当`push_many`被调用是它不能正确的跟踪栈的使用情况。（衍生类的push版本不再被`push_many`调用，所以`push_many`也不再更新high_water_mark）。Stack就是脆弱的基础类。事实证明，通过谨慎的做法来解决这些问题几乎是不可能的。\n　　\n　　记住，如果你使用接口继承就不会有这些问题，因为没有继承的方法会对你产生不利的影响。如果Stack是接口，通过同时实现`Simple_stack`和`Monitorable_stack`来使用,代码会变得更健壮。\n　　\n　　我在清单0.1中提供一个基于接口的解决方案。这个解决方案和实现继承方案有相同的灵活性：你能在Stack抽象基础上构建你的代码为不用担心你究竟是在操作哪种具体类型的栈。既然两个实现类必须提供公共接口中的所有东西的实现版本，因此很难出现前面所讲的问题。虽然不使用基础类我仍然能获得类似的好处，因为我使用了封装而不是派生。另一方面，在封装类中我不得不使用没有价值的访问方法去访问默认的实现。(比如在第41行`Monitorable_Stack.push(…）`不得不在`Simp_stack`中调用`equivalent`方法。程序员总是抱怨写这些看似多余的代码，但是多些一行代码的代价比起一个消除一个严重的隐藏bug来还是微不足道的。\nListing 0.1. Eliminate fragile base classes using interfaces\n\n\t 1| import java.util.*;\n\t 2| \n\t 3| interface Stack\n\t 4| {\n\t 5|　　 \tvoid push( Object o );\n\t 6|　　 \tObject pop();\n\t 7|　　 \tvoid push_many( Object[] source );\n\t 8| }\n\t 9| \n\t10| class Simple_stack `implements` Stack\n\t11| {   private int stack_pointer = -1;\n\t12|　　 \tprivate Object[] stack = new Object[1000];\n\t13| \n\t14|　　 public void push( Object o )\n\t15|　　 {   \tassert stack_pointer < stack.length;\n\t16| \n\t17|　　 \t\tstack[ ++stack_pointer ] = o;\n\t18|　　 }\n\t19| \n\t20|　　 public Object pop()\n\t21|　　 {   \tassert stack_pointer >= 0;\n\t22| \n\t23|　　 \t\treturn stack[ stack_pointer-- ];\n\t24|　　 }\n\t25| \n\t26|　　 public void push_many( Object[] source )\n\t27|　　 {   \tassert (stack_pointer + source.length) < stack.length;\n\t28| \n\t29|　　 \t\tSystem.arraycopy(source,0,stack,stack_pointer+1,source.length);\n\t30|　　 \t\tstack_pointer += source.length;\n\t31|　　 }\n\t32| }\n\t33| \n\t34| \n\t35| class Monitorable_Stack `implements` Stack\n\t36| {\n\t37|　　 private int high_water_mark = 0;\n\t38|　　 private int current_size;\n\t39|　　 Simple_stack stack = new Simple_stack();\n\t40| \n\t41|　　 public void push( Object o )\n\t42|　　 {   if( ++current_size > high_water_mark )\n\t43|　　　　 \t\thigh_water_mark = current_size;\n\t44|　　 \t\tstack.push(o);\n\t45|　　 }\n\t46|　　 \n\t47|　　 public Object pop()\n\t48|　　 {   \t--current_size;\n\t49|　　 \t\treturn stack.pop();\n\t50|　　 }\n\t51| \n\t52|　　 public void push_many( Object[] source )\n\t53|　　 {\n\t54|　　 \t\tif( current_size + source.length > high_water_mark )\n\t55|　　　　\t\thigh_water_mark = current_size + source.length;\n\t56| \n\t57|　　 \t\tstack.push_many( source );\n\t58|　　 }\n\t59| \n\t60|　　 public int maximum_size()\n\t61|　　 {   return high_water_mark;\n\t62|　　 }\n\t63| }\n\t64| \n## 框架\n　　脱离了具体的程序架构来谈脆弱的基础类问题就是耍流氓。像MFC这样的框架已经成为了类库构建的流行方式。尽管MFC本身正在令人欣喜的逐渐衰弱，但是在微软商店里MFC框架还是拥有统治地位因为那里的程序员相信微软即正义。\n　　基于框架的系统通常开始于库提供的半成品类，你不需要做任何事，只要通过派生类去提供缺失的方法。典型的例子是Java的`Component`类里的`paint`方法，这个方法只不过是一个占位符；派生类必须提供真实的实现版本。\n　　你能适当的避免这类事情，但是基于类派生订制实现的类框架是极其脆弱的。基础类太脆弱了。当我在MFC中开发程序，我就要有随时改写程序以应对微软发布新版本的觉悟。今天可用的代码到了明天就未必了，因为基础类方法变了。\n　　所有的java包都是即插即用工作良好。你不需要继承任何东西并实现方法。这种即插即用的工作机构要好于基于派生的框架。它更易维护和使用并且不会把你的代码置于因为Sun公司修改类库实现而崩溃的风险之下。\n\n## 总结脆弱的基础类\n　　通常来讲，最好是避免使用具体的基础类和`extends`继承关系而以接口和`implements`实现关系取代。我的经验法则是我最少80%的代码需要基于接口重构。比如，我永远不会使用HashMap的引用，而是使用Map接口。（我这里使用宽泛的“接口”定义。当你看到InputStream如何实现你就会知道实际上它也是个接口，尽管在Java中是需要被实现的抽象类。）\n　　你使用越多的抽象，你就能获得越大的灵活性。在如今的商业环境里，开发过程中需求不断变化，这种灵活性是必须的。进一步，绝大多数的敏捷开发方法论（比如Crystal和极限开发）无法实施除非代码都是基于抽象的。\n　　如果你仔细阅读四人帮的设计模式，你会发现他们提供的许多方法都是消除了实现继承取而代之的是接口继承，这是大多数模式的普遍特征。这个重要的事实就是我们开头所说的：设计模式是被发现的而不是被发明的。设计模式总结了那些优美的、易于维护的代码。他告诉我们优美的、易于维护的代码都不惜一切代价避免实现继承。","slug":"why-extends-is-evil","published":1,"updated":"2017-08-03T02:48:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5w0cuge000eij66cdrq7f0z","content":"<h1 id=\"为什么extends是魔鬼\"><a href=\"#为什么extends是魔鬼\" class=\"headerlink\" title=\"为什么extends是魔鬼\"></a>为什么extends是魔鬼</h1><p><strong><em>通过使用接口替换具体的base类来改进你的代码</em></strong></p>\n<p><a href=\"http://www.javaworld.com/javaworld/jw-08-2003/jw-0801-toolbox.html\" target=\"_blank\" rel=\"external\">原文地址</a></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>　　<code>extends</code>关键字是魔鬼。可能还没有达到Charles Manson的程度，但是也已经达到了需要敬而远之的地步。四人帮的设计模式一书详尽的讨论了使用接口继承(<code>implements</code>)替代实现继承(<code>extends</code>)。<br>　　<br>　　好的设计者基于接口编写代码而不是依靠具体的基础类。这篇文章阐述了为什么设计者有这种古怪习惯，以及介绍一些基于接口的编程基础。</p>\n<h2 id=\"接口与类\"><a href=\"#接口与类\" class=\"headerlink\" title=\"接口与类\"></a>接口与类</h2><p>　　一次我去参加一个Java用户小组会议，当时Java的发明者James Gosling是主讲人。在那个另人难忘的提问环节，有人问他：“如果给你个机会重新设计JAVA，你会做些什么改变？”。他回答道：“我会去除类”。在哄堂大笑之后他解释到从本质上问题不出在类本身而出在实现继承关系上。(<code>extends</code>关系)。接口继承（<code>implements</code>关系）是更好的。你应该尽可能的避免实现继承关系无论在何时。<br><a id=\"more\"></a></p>\n<h2 id=\"失去灵活性\"><a href=\"#失去灵活性\" class=\"headerlink\" title=\"失去灵活性\"></a>失去灵活性</h2><p>　　为什么要避免实现继承关系？首当其冲的问题是明确使用具体的类名会把你与特定的实现捆绑在一起，这给以后的变更带来了不必要的麻烦。</p>\n<p>　　设计和开发并行是现代敏捷开发理念的核心观点。在完全设计好程序之前就已经开始着手开发了。这种技术悍然无视传统理论中开发之前必须有完备设计的观念，但是很多的成功项目都证明比起传统途径来你可以使用敏捷理念来更快速更有性价比的开发高质量代码。然而，在并行开发的理念中灵活性是核心理念。你不得不使你的代码能够做到只需很小的改动就能把新需求融合到现有的代码中去。</p>\n<p>　　只实现明确需要的特性而不是实现可能需要的特性并且包容变化。没有这种灵活性，并行开发是不可能的。</p>\n<p>　　面向接口编程是灵活结构的核心。为了说清为什么，让我们来看看当不用的时候会发生什么。思考以下代码</p>\n<pre><code>f()\n{   LinkedList list = new LinkedList();\n    //...\n    g( list );\n}\ng( LinkedList list )\n{\n    list.add( ... );\n    g2( list )\n}\n</code></pre><p>　　现在设想一个新的快速查找的需求出现了，因此LinkedList不能解决问题。你需要使用HashSet取代。在现在的代码里，这个改动不局限于一处因为你必须同事改动f函数和g函数以及所有像g函数那样获取这个list的方法。</p>\n<p>　　重写代码如下:</p>\n<pre><code>f()\n{   Collection list = new LinkedList();\n    //...\n    g( list );\n}\ng( Collection list )\n{\n    list.add( ... );\n    g2( list )\n}\n</code></pre><p>　　重构使得只需要简单的把new LinkedList( )替换成new HashSet( ) 酒可以把Link list改成hash表。就是这么神奇，不要其他任何改动。</p>\n<p>　　另一个例子，比较下以下两段代码：</p>\n<pre><code>f()\n{   Collection c = new HashSet();\n    //...\n    g( c );\n}\ng( Collection c )\n{\n    for( Iterator i = c.iterator(); i.hasNext() ;)\n    do_something_with( i.next() );\n}\nf2()\n{   Collection c = new HashSet();\n    //...\n    g2( c.iterator() );\n}\ng2( Iterator i )\n{   while( i.hasNext() ;)\n    do_something_with( i.next() );\n}\n</code></pre><p>　　g2函数现在不仅可以遍历Collection的衍生对象也可以遍历像Map这种键值列表。事实上，你能使用迭代器生成数据而不是遍历集合。你可以使用迭代器为程序从测试框架或者文件中收集信息。这里面有巨大的灵活性</p>\n<h2 id=\"耦合\"><a href=\"#耦合\" class=\"headerlink\" title=\"耦合\"></a>耦合</h2><p>　　实现继承的一个更关键的问题时耦合——一部分模块对另一部分不恰当的依赖。强耦合带来麻烦最经典的例子是全局变量。比如你改变了全局变量的类型，所有使用这个变量（也就是耦合于此变量）的所有函数都会收到影响，因此所有的代码都必须被检查、修改、重新测试。进一步，所有函数都因为使用了这个变量而被彼此耦合在一起。如果一个方法在不恰当的时间修改了变量的值那么它就可能错误的影响了其他函数的表现。这个问题在多线程的程序中特别的可怕。</p>\n<p>　　作为一个设计这，你应该致力于构建最小的耦合关系。你不能完全消除耦合因为一个类对象调用另一个对象的方法是松耦合的一种形式。一个没有耦合的程序是天方夜谭。虽然如此，你只要闭着眼睛去遵循OO的戒律（最重要的是一个类的实现应该对调用的类完全隐藏）就能把耦合降到最低。比如类实例变量（不是常量的成员字段）应该始终是私有的。句号！毫无例外！永远！（你能偶尔有效地使用<code>protected</code>方法，但是<code>protected</code>实例变量是被唾弃的）你永远不应该使用get/set方法因为相同的原因——它只是用一个非常复杂的方法使成员变成了共有的（虽然返回成熟对象的存取方法而不是基本类型值在某些情况下是合理的，比如当返回的对象在设计中是一个关键的抽象）</p>\n<p>　　我不是在这卖弄学问。我已经找到了一条途径去解决严格的OO方法、快速开发和易维护性之间的矛盾。每当我违反一条OO的核心原则类似实现隐藏，最终否导致我必须重写那些代码（最常见的原因是不能进行debug）。我没有时间重写代码，所以我遵循这些规则。我的顾虑都是很实际的而不是为了完美而完美。</p>\n<h2 id=\"脆弱的基础类问题\"><a href=\"#脆弱的基础类问题\" class=\"headerlink\" title=\"脆弱的基础类问题\"></a>脆弱的基础类问题</h2><p>　　现在，让我们把耦合的概念应用到继承.在一个使用<code>extends</code>的实现继承系统里,衍生类与基础类有着非常紧密的耦合。这种密切的联系是不可取的。设计者给这种行为起了个绰号“脆弱的基础类问题”。基础类被认为是脆弱的因为你能用一种看似看全的方法修改技术类，但是这个新的行为当被衍生类继承后可能导致衍生类出现故障。你不能简单说一个基础类是否安全仅仅是通过单独测试基础类的方法。你也必须测试所有的衍生类。进一步，你必须检查所有使用基础类和衍生类对象的代码，因为这些代码可能被新的行为破坏。一个简单的关键基础类的变动可能导致整个程序无法工作。</p>\n<p>　　让我们一起检查脆弱的基础类和基础类耦合问题。下面的类继承了Java的ArrayList类并添加一个类似于栈的新行为：</p>\n<pre><code>class Stack extends ArrayList\n{   private int stack_pointer = 0;\n    public void push( Object article )\n    {   add( stack_pointer++, article );\n    }\n    public Object pop()\n    {   return remove( --stack_pointer );\n    }\n    public void push_many( Object[] articles )\n    {   for( int i = 0; i &lt; articles.length; ++i )\n        push( articles[i] );\n    }\n}\n</code></pre><p>　　如此之简单的类都会有问题。考虑当一个用户利用继承并使用<code>ArrayList</code>的<code>clear()</code>方法去清空栈：</p>\n<pre><code>Stack a_stack = new Stack();\na_stack.push(&quot;1&quot;);\na_stack.push(&quot;2&quot;);\na_stack.clear();\n</code></pre><p>　　代码成功编译，但因为基础类不知道<code>stack_pointer</code>的存在，这个栈对象现在是没有定义的状态。下一个调用<code>push()</code>你压入新的元素在序列2处（<code>stack_pointer</code>当前值），因此栈事实上有3个元素，底部的两个变成了脏数据。（Java的栈类有相同的问题，不要使用他）。</p>\n<p>　　一个解决这个方法继承不当的问题是为栈重写所有的<code>ArrayList</code>方法使其能修改队列状态，重写那些方法去正确操作<code>stack_pointer</code>或者抛出异常。（<code>removeRange()</code>方法是一个很好的抛出异常的候选者）</p>\n<p>　　这个方法有两个劣势。首先，你重写了所有方法，基础类实际上变成了一个接口，不是一个类。既然你不使用任何继承方法那么实现继承还有任何意义吗？其次，一个更重要的原因，你不想栈支持所有的<code>ArrayList</code>方法。例如烦人的<code>removeRange</code>方法就毫无用处。对于继承来的无用的方法唯一可行的办法是抛出异常，因为它应该永远不会被调用。这种方式实际上把一个编译错误变成了运行时错误。非常不好。如果一个方法不是简单因为未被声明而被编译器检查出方法未找到错误。如果方法仅仅是抛出异常，那么你在程序运行钱都不会发现调用错误。</p>\n<p>　　一个更好的基础类解决方案是封装数据机构代替使用继承。下面是一个新的改进过的栈版本</p>\n<pre><code>class Stack\n{   private int stack_pointer = 0;\n    private ArrayList the_data = new ArrayList();\n    public void push( Object article )\n    {   the_data.add( stack_pointer++, article );\n    }\n    public Object pop()\n    {   return the_data.remove( --stack_pointer );\n    }\n    public void push_many( Object[] articles )\n    {   for( int i = 0; i &lt; o.length; ++i )\n        push( articles[i] );\n    }\n}\n</code></pre><p>　　到目前为止看起来还不错，但是考虑考虑脆弱的基础类问题。让我们看下当你想创建一个栈的变体用来跟踪确定时间端内栈的最大值，一个可能的实现如下所示：</p>\n<pre><code>class Monitorable_stack extends Stack\n{\n    private int high_water_mark = 0;\n    private int current_size;\n    public void push( Object article )\n    {   if( ++current_size &gt; high_water_mark )\n        high_water_mark = current_size;\n        super.push(article);\n    }\n    public Object pop()\n    {   --current_size;\n        return super.pop();\n    }\n    public int maximum_size_so_far()\n    {   return high_water_mark;\n    }\n}\n</code></pre><p>　　这个新对象运行正常，至少暂时是这样，不幸的是这段代码利用了一个事实那就是<code>push_many()</code>是通过调用<code>push()</code>来完成它的工作的。其实，这些细节似乎不是一个坏的选择。这简化了代码，你通过重载<code>push()</code>版本来实现，即使当<code>Monitorable_stact</code>通过获得一个<code>stack</code>引用来实现的，所以<code>high_water_mark</code>正确的更新了。<br>　　<br>　　在一个阳光明媚的日子，某人可能跑了一个性能测试并且注意到Stack类在被大量使用时运行效率不太理想。你决定重写Stack并且放弃使用ArrayList，因此你提高了Stack类的性能。下面是新类的部分核心代码：</p>\n<pre><code>class Stack\n{   private int stack_pointer = -1;\n    private Object[] stack = new Object[1000];\n    public void push( Object article )\n    {   assert stack_pointer &lt; stack.length;\n        stack[ ++stack_pointer ] = article;\n    }\n    public Object pop()\n    {   assert stack_pointer &gt;= 0;\n        return stack[ stack_pointer-- ];\n    }\n    public void push_many( Object[] articles )\n    {   assert (stack_pointer + articles.length) &lt; stack.length;\n        System.arraycopy(articles, 0, stack, stack_pointer+1,\n                            articles.length);\n        stack_pointer += articles.length;\n    }\n}\n</code></pre><p>　　注意<code>push_many()</code>不再重复调用<code>push( )</code>而是使用了块转移。新的栈版本工作的很好；事实上，它比前个版本要更好。不幸的是，<code>Monitorable_stack</code>衍生类将不再工作，因为当<code>push_many</code>被调用是它不能正确的跟踪栈的使用情况。（衍生类的push版本不再被<code>push_many</code>调用，所以<code>push_many</code>也不再更新high_water_mark）。Stack就是脆弱的基础类。事实证明，通过谨慎的做法来解决这些问题几乎是不可能的。<br>　　<br>　　记住，如果你使用接口继承就不会有这些问题，因为没有继承的方法会对你产生不利的影响。如果Stack是接口，通过同时实现<code>Simple_stack</code>和<code>Monitorable_stack</code>来使用,代码会变得更健壮。<br>　　<br>　　我在清单0.1中提供一个基于接口的解决方案。这个解决方案和实现继承方案有相同的灵活性：你能在Stack抽象基础上构建你的代码为不用担心你究竟是在操作哪种具体类型的栈。既然两个实现类必须提供公共接口中的所有东西的实现版本，因此很难出现前面所讲的问题。虽然不使用基础类我仍然能获得类似的好处，因为我使用了封装而不是派生。另一方面，在封装类中我不得不使用没有价值的访问方法去访问默认的实现。(比如在第41行<code>Monitorable_Stack.push(…）</code>不得不在<code>Simp_stack</code>中调用<code>equivalent</code>方法。程序员总是抱怨写这些看似多余的代码，但是多些一行代码的代价比起一个消除一个严重的隐藏bug来还是微不足道的。<br>Listing 0.1. Eliminate fragile base classes using interfaces</p>\n<pre><code> 1| import java.util.*;\n 2| \n 3| interface Stack\n 4| {\n 5|　　     void push( Object o );\n 6|　　     Object pop();\n 7|　　     void push_many( Object[] source );\n 8| }\n 9| \n10| class Simple_stack `implements` Stack\n11| {   private int stack_pointer = -1;\n12|　　     private Object[] stack = new Object[1000];\n13| \n14|　　 public void push( Object o )\n15|　　 {       assert stack_pointer &lt; stack.length;\n16| \n17|　　         stack[ ++stack_pointer ] = o;\n18|　　 }\n19| \n20|　　 public Object pop()\n21|　　 {       assert stack_pointer &gt;= 0;\n22| \n23|　　         return stack[ stack_pointer-- ];\n24|　　 }\n25| \n26|　　 public void push_many( Object[] source )\n27|　　 {       assert (stack_pointer + source.length) &lt; stack.length;\n28| \n29|　　         System.arraycopy(source,0,stack,stack_pointer+1,source.length);\n30|　　         stack_pointer += source.length;\n31|　　 }\n32| }\n33| \n34| \n35| class Monitorable_Stack `implements` Stack\n36| {\n37|　　 private int high_water_mark = 0;\n38|　　 private int current_size;\n39|　　 Simple_stack stack = new Simple_stack();\n40| \n41|　　 public void push( Object o )\n42|　　 {   if( ++current_size &gt; high_water_mark )\n43|　　　　         high_water_mark = current_size;\n44|　　         stack.push(o);\n45|　　 }\n46|　　 \n47|　　 public Object pop()\n48|　　 {       --current_size;\n49|　　         return stack.pop();\n50|　　 }\n51| \n52|　　 public void push_many( Object[] source )\n53|　　 {\n54|　　         if( current_size + source.length &gt; high_water_mark )\n55|　　　　        high_water_mark = current_size + source.length;\n56| \n57|　　         stack.push_many( source );\n58|　　 }\n59| \n60|　　 public int maximum_size()\n61|　　 {   return high_water_mark;\n62|　　 }\n63| }\n64| \n</code></pre><h2 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h2><p>　　脱离了具体的程序架构来谈脆弱的基础类问题就是耍流氓。像MFC这样的框架已经成为了类库构建的流行方式。尽管MFC本身正在令人欣喜的逐渐衰弱，但是在微软商店里MFC框架还是拥有统治地位因为那里的程序员相信微软即正义。<br>　　基于框架的系统通常开始于库提供的半成品类，你不需要做任何事，只要通过派生类去提供缺失的方法。典型的例子是Java的<code>Component</code>类里的<code>paint</code>方法，这个方法只不过是一个占位符；派生类必须提供真实的实现版本。<br>　　你能适当的避免这类事情，但是基于类派生订制实现的类框架是极其脆弱的。基础类太脆弱了。当我在MFC中开发程序，我就要有随时改写程序以应对微软发布新版本的觉悟。今天可用的代码到了明天就未必了，因为基础类方法变了。<br>　　所有的java包都是即插即用工作良好。你不需要继承任何东西并实现方法。这种即插即用的工作机构要好于基于派生的框架。它更易维护和使用并且不会把你的代码置于因为Sun公司修改类库实现而崩溃的风险之下。</p>\n<h2 id=\"总结脆弱的基础类\"><a href=\"#总结脆弱的基础类\" class=\"headerlink\" title=\"总结脆弱的基础类\"></a>总结脆弱的基础类</h2><p>　　通常来讲，最好是避免使用具体的基础类和<code>extends</code>继承关系而以接口和<code>implements</code>实现关系取代。我的经验法则是我最少80%的代码需要基于接口重构。比如，我永远不会使用HashMap的引用，而是使用Map接口。（我这里使用宽泛的“接口”定义。当你看到InputStream如何实现你就会知道实际上它也是个接口，尽管在Java中是需要被实现的抽象类。）<br>　　你使用越多的抽象，你就能获得越大的灵活性。在如今的商业环境里，开发过程中需求不断变化，这种灵活性是必须的。进一步，绝大多数的敏捷开发方法论（比如Crystal和极限开发）无法实施除非代码都是基于抽象的。<br>　　如果你仔细阅读四人帮的设计模式，你会发现他们提供的许多方法都是消除了实现继承取而代之的是接口继承，这是大多数模式的普遍特征。这个重要的事实就是我们开头所说的：设计模式是被发现的而不是被发明的。设计模式总结了那些优美的、易于维护的代码。他告诉我们优美的、易于维护的代码都不惜一切代价避免实现继承。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"为什么extends是魔鬼\"><a href=\"#为什么extends是魔鬼\" class=\"headerlink\" title=\"为什么extends是魔鬼\"></a>为什么extends是魔鬼</h1><p><strong><em>通过使用接口替换具体的base类来改进你的代码</em></strong></p>\n<p><a href=\"http://www.javaworld.com/javaworld/jw-08-2003/jw-0801-toolbox.html\" target=\"_blank\" rel=\"external\">原文地址</a></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>　　<code>extends</code>关键字是魔鬼。可能还没有达到Charles Manson的程度，但是也已经达到了需要敬而远之的地步。四人帮的设计模式一书详尽的讨论了使用接口继承(<code>implements</code>)替代实现继承(<code>extends</code>)。<br>　　<br>　　好的设计者基于接口编写代码而不是依靠具体的基础类。这篇文章阐述了为什么设计者有这种古怪习惯，以及介绍一些基于接口的编程基础。</p>\n<h2 id=\"接口与类\"><a href=\"#接口与类\" class=\"headerlink\" title=\"接口与类\"></a>接口与类</h2><p>　　一次我去参加一个Java用户小组会议，当时Java的发明者James Gosling是主讲人。在那个另人难忘的提问环节，有人问他：“如果给你个机会重新设计JAVA，你会做些什么改变？”。他回答道：“我会去除类”。在哄堂大笑之后他解释到从本质上问题不出在类本身而出在实现继承关系上。(<code>extends</code>关系)。接口继承（<code>implements</code>关系）是更好的。你应该尽可能的避免实现继承关系无论在何时。<br></p>","more":"<p></p>\n<h2 id=\"失去灵活性\"><a href=\"#失去灵活性\" class=\"headerlink\" title=\"失去灵活性\"></a>失去灵活性</h2><p>　　为什么要避免实现继承关系？首当其冲的问题是明确使用具体的类名会把你与特定的实现捆绑在一起，这给以后的变更带来了不必要的麻烦。</p>\n<p>　　设计和开发并行是现代敏捷开发理念的核心观点。在完全设计好程序之前就已经开始着手开发了。这种技术悍然无视传统理论中开发之前必须有完备设计的观念，但是很多的成功项目都证明比起传统途径来你可以使用敏捷理念来更快速更有性价比的开发高质量代码。然而，在并行开发的理念中灵活性是核心理念。你不得不使你的代码能够做到只需很小的改动就能把新需求融合到现有的代码中去。</p>\n<p>　　只实现明确需要的特性而不是实现可能需要的特性并且包容变化。没有这种灵活性，并行开发是不可能的。</p>\n<p>　　面向接口编程是灵活结构的核心。为了说清为什么，让我们来看看当不用的时候会发生什么。思考以下代码</p>\n<pre><code>f()\n{   LinkedList list = new LinkedList();\n    //...\n    g( list );\n}\ng( LinkedList list )\n{\n    list.add( ... );\n    g2( list )\n}\n</code></pre><p>　　现在设想一个新的快速查找的需求出现了，因此LinkedList不能解决问题。你需要使用HashSet取代。在现在的代码里，这个改动不局限于一处因为你必须同事改动f函数和g函数以及所有像g函数那样获取这个list的方法。</p>\n<p>　　重写代码如下:</p>\n<pre><code>f()\n{   Collection list = new LinkedList();\n    //...\n    g( list );\n}\ng( Collection list )\n{\n    list.add( ... );\n    g2( list )\n}\n</code></pre><p>　　重构使得只需要简单的把new LinkedList( )替换成new HashSet( ) 酒可以把Link list改成hash表。就是这么神奇，不要其他任何改动。</p>\n<p>　　另一个例子，比较下以下两段代码：</p>\n<pre><code>f()\n{   Collection c = new HashSet();\n    //...\n    g( c );\n}\ng( Collection c )\n{\n    for( Iterator i = c.iterator(); i.hasNext() ;)\n    do_something_with( i.next() );\n}\nf2()\n{   Collection c = new HashSet();\n    //...\n    g2( c.iterator() );\n}\ng2( Iterator i )\n{   while( i.hasNext() ;)\n    do_something_with( i.next() );\n}\n</code></pre><p>　　g2函数现在不仅可以遍历Collection的衍生对象也可以遍历像Map这种键值列表。事实上，你能使用迭代器生成数据而不是遍历集合。你可以使用迭代器为程序从测试框架或者文件中收集信息。这里面有巨大的灵活性</p>\n<h2 id=\"耦合\"><a href=\"#耦合\" class=\"headerlink\" title=\"耦合\"></a>耦合</h2><p>　　实现继承的一个更关键的问题时耦合——一部分模块对另一部分不恰当的依赖。强耦合带来麻烦最经典的例子是全局变量。比如你改变了全局变量的类型，所有使用这个变量（也就是耦合于此变量）的所有函数都会收到影响，因此所有的代码都必须被检查、修改、重新测试。进一步，所有函数都因为使用了这个变量而被彼此耦合在一起。如果一个方法在不恰当的时间修改了变量的值那么它就可能错误的影响了其他函数的表现。这个问题在多线程的程序中特别的可怕。</p>\n<p>　　作为一个设计这，你应该致力于构建最小的耦合关系。你不能完全消除耦合因为一个类对象调用另一个对象的方法是松耦合的一种形式。一个没有耦合的程序是天方夜谭。虽然如此，你只要闭着眼睛去遵循OO的戒律（最重要的是一个类的实现应该对调用的类完全隐藏）就能把耦合降到最低。比如类实例变量（不是常量的成员字段）应该始终是私有的。句号！毫无例外！永远！（你能偶尔有效地使用<code>protected</code>方法，但是<code>protected</code>实例变量是被唾弃的）你永远不应该使用get/set方法因为相同的原因——它只是用一个非常复杂的方法使成员变成了共有的（虽然返回成熟对象的存取方法而不是基本类型值在某些情况下是合理的，比如当返回的对象在设计中是一个关键的抽象）</p>\n<p>　　我不是在这卖弄学问。我已经找到了一条途径去解决严格的OO方法、快速开发和易维护性之间的矛盾。每当我违反一条OO的核心原则类似实现隐藏，最终否导致我必须重写那些代码（最常见的原因是不能进行debug）。我没有时间重写代码，所以我遵循这些规则。我的顾虑都是很实际的而不是为了完美而完美。</p>\n<h2 id=\"脆弱的基础类问题\"><a href=\"#脆弱的基础类问题\" class=\"headerlink\" title=\"脆弱的基础类问题\"></a>脆弱的基础类问题</h2><p>　　现在，让我们把耦合的概念应用到继承.在一个使用<code>extends</code>的实现继承系统里,衍生类与基础类有着非常紧密的耦合。这种密切的联系是不可取的。设计者给这种行为起了个绰号“脆弱的基础类问题”。基础类被认为是脆弱的因为你能用一种看似看全的方法修改技术类，但是这个新的行为当被衍生类继承后可能导致衍生类出现故障。你不能简单说一个基础类是否安全仅仅是通过单独测试基础类的方法。你也必须测试所有的衍生类。进一步，你必须检查所有使用基础类和衍生类对象的代码，因为这些代码可能被新的行为破坏。一个简单的关键基础类的变动可能导致整个程序无法工作。</p>\n<p>　　让我们一起检查脆弱的基础类和基础类耦合问题。下面的类继承了Java的ArrayList类并添加一个类似于栈的新行为：</p>\n<pre><code>class Stack extends ArrayList\n{   private int stack_pointer = 0;\n    public void push( Object article )\n    {   add( stack_pointer++, article );\n    }\n    public Object pop()\n    {   return remove( --stack_pointer );\n    }\n    public void push_many( Object[] articles )\n    {   for( int i = 0; i &lt; articles.length; ++i )\n        push( articles[i] );\n    }\n}\n</code></pre><p>　　如此之简单的类都会有问题。考虑当一个用户利用继承并使用<code>ArrayList</code>的<code>clear()</code>方法去清空栈：</p>\n<pre><code>Stack a_stack = new Stack();\na_stack.push(&quot;1&quot;);\na_stack.push(&quot;2&quot;);\na_stack.clear();\n</code></pre><p>　　代码成功编译，但因为基础类不知道<code>stack_pointer</code>的存在，这个栈对象现在是没有定义的状态。下一个调用<code>push()</code>你压入新的元素在序列2处（<code>stack_pointer</code>当前值），因此栈事实上有3个元素，底部的两个变成了脏数据。（Java的栈类有相同的问题，不要使用他）。</p>\n<p>　　一个解决这个方法继承不当的问题是为栈重写所有的<code>ArrayList</code>方法使其能修改队列状态，重写那些方法去正确操作<code>stack_pointer</code>或者抛出异常。（<code>removeRange()</code>方法是一个很好的抛出异常的候选者）</p>\n<p>　　这个方法有两个劣势。首先，你重写了所有方法，基础类实际上变成了一个接口，不是一个类。既然你不使用任何继承方法那么实现继承还有任何意义吗？其次，一个更重要的原因，你不想栈支持所有的<code>ArrayList</code>方法。例如烦人的<code>removeRange</code>方法就毫无用处。对于继承来的无用的方法唯一可行的办法是抛出异常，因为它应该永远不会被调用。这种方式实际上把一个编译错误变成了运行时错误。非常不好。如果一个方法不是简单因为未被声明而被编译器检查出方法未找到错误。如果方法仅仅是抛出异常，那么你在程序运行钱都不会发现调用错误。</p>\n<p>　　一个更好的基础类解决方案是封装数据机构代替使用继承。下面是一个新的改进过的栈版本</p>\n<pre><code>class Stack\n{   private int stack_pointer = 0;\n    private ArrayList the_data = new ArrayList();\n    public void push( Object article )\n    {   the_data.add( stack_pointer++, article );\n    }\n    public Object pop()\n    {   return the_data.remove( --stack_pointer );\n    }\n    public void push_many( Object[] articles )\n    {   for( int i = 0; i &lt; o.length; ++i )\n        push( articles[i] );\n    }\n}\n</code></pre><p>　　到目前为止看起来还不错，但是考虑考虑脆弱的基础类问题。让我们看下当你想创建一个栈的变体用来跟踪确定时间端内栈的最大值，一个可能的实现如下所示：</p>\n<pre><code>class Monitorable_stack extends Stack\n{\n    private int high_water_mark = 0;\n    private int current_size;\n    public void push( Object article )\n    {   if( ++current_size &gt; high_water_mark )\n        high_water_mark = current_size;\n        super.push(article);\n    }\n    public Object pop()\n    {   --current_size;\n        return super.pop();\n    }\n    public int maximum_size_so_far()\n    {   return high_water_mark;\n    }\n}\n</code></pre><p>　　这个新对象运行正常，至少暂时是这样，不幸的是这段代码利用了一个事实那就是<code>push_many()</code>是通过调用<code>push()</code>来完成它的工作的。其实，这些细节似乎不是一个坏的选择。这简化了代码，你通过重载<code>push()</code>版本来实现，即使当<code>Monitorable_stact</code>通过获得一个<code>stack</code>引用来实现的，所以<code>high_water_mark</code>正确的更新了。<br>　　<br>　　在一个阳光明媚的日子，某人可能跑了一个性能测试并且注意到Stack类在被大量使用时运行效率不太理想。你决定重写Stack并且放弃使用ArrayList，因此你提高了Stack类的性能。下面是新类的部分核心代码：</p>\n<pre><code>class Stack\n{   private int stack_pointer = -1;\n    private Object[] stack = new Object[1000];\n    public void push( Object article )\n    {   assert stack_pointer &lt; stack.length;\n        stack[ ++stack_pointer ] = article;\n    }\n    public Object pop()\n    {   assert stack_pointer &gt;= 0;\n        return stack[ stack_pointer-- ];\n    }\n    public void push_many( Object[] articles )\n    {   assert (stack_pointer + articles.length) &lt; stack.length;\n        System.arraycopy(articles, 0, stack, stack_pointer+1,\n                            articles.length);\n        stack_pointer += articles.length;\n    }\n}\n</code></pre><p>　　注意<code>push_many()</code>不再重复调用<code>push( )</code>而是使用了块转移。新的栈版本工作的很好；事实上，它比前个版本要更好。不幸的是，<code>Monitorable_stack</code>衍生类将不再工作，因为当<code>push_many</code>被调用是它不能正确的跟踪栈的使用情况。（衍生类的push版本不再被<code>push_many</code>调用，所以<code>push_many</code>也不再更新high_water_mark）。Stack就是脆弱的基础类。事实证明，通过谨慎的做法来解决这些问题几乎是不可能的。<br>　　<br>　　记住，如果你使用接口继承就不会有这些问题，因为没有继承的方法会对你产生不利的影响。如果Stack是接口，通过同时实现<code>Simple_stack</code>和<code>Monitorable_stack</code>来使用,代码会变得更健壮。<br>　　<br>　　我在清单0.1中提供一个基于接口的解决方案。这个解决方案和实现继承方案有相同的灵活性：你能在Stack抽象基础上构建你的代码为不用担心你究竟是在操作哪种具体类型的栈。既然两个实现类必须提供公共接口中的所有东西的实现版本，因此很难出现前面所讲的问题。虽然不使用基础类我仍然能获得类似的好处，因为我使用了封装而不是派生。另一方面，在封装类中我不得不使用没有价值的访问方法去访问默认的实现。(比如在第41行<code>Monitorable_Stack.push(…）</code>不得不在<code>Simp_stack</code>中调用<code>equivalent</code>方法。程序员总是抱怨写这些看似多余的代码，但是多些一行代码的代价比起一个消除一个严重的隐藏bug来还是微不足道的。<br>Listing 0.1. Eliminate fragile base classes using interfaces</p>\n<pre><code> 1| import java.util.*;\n 2| \n 3| interface Stack\n 4| {\n 5|　　     void push( Object o );\n 6|　　     Object pop();\n 7|　　     void push_many( Object[] source );\n 8| }\n 9| \n10| class Simple_stack `implements` Stack\n11| {   private int stack_pointer = -1;\n12|　　     private Object[] stack = new Object[1000];\n13| \n14|　　 public void push( Object o )\n15|　　 {       assert stack_pointer &lt; stack.length;\n16| \n17|　　         stack[ ++stack_pointer ] = o;\n18|　　 }\n19| \n20|　　 public Object pop()\n21|　　 {       assert stack_pointer &gt;= 0;\n22| \n23|　　         return stack[ stack_pointer-- ];\n24|　　 }\n25| \n26|　　 public void push_many( Object[] source )\n27|　　 {       assert (stack_pointer + source.length) &lt; stack.length;\n28| \n29|　　         System.arraycopy(source,0,stack,stack_pointer+1,source.length);\n30|　　         stack_pointer += source.length;\n31|　　 }\n32| }\n33| \n34| \n35| class Monitorable_Stack `implements` Stack\n36| {\n37|　　 private int high_water_mark = 0;\n38|　　 private int current_size;\n39|　　 Simple_stack stack = new Simple_stack();\n40| \n41|　　 public void push( Object o )\n42|　　 {   if( ++current_size &gt; high_water_mark )\n43|　　　　         high_water_mark = current_size;\n44|　　         stack.push(o);\n45|　　 }\n46|　　 \n47|　　 public Object pop()\n48|　　 {       --current_size;\n49|　　         return stack.pop();\n50|　　 }\n51| \n52|　　 public void push_many( Object[] source )\n53|　　 {\n54|　　         if( current_size + source.length &gt; high_water_mark )\n55|　　　　        high_water_mark = current_size + source.length;\n56| \n57|　　         stack.push_many( source );\n58|　　 }\n59| \n60|　　 public int maximum_size()\n61|　　 {   return high_water_mark;\n62|　　 }\n63| }\n64| \n</code></pre><h2 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h2><p>　　脱离了具体的程序架构来谈脆弱的基础类问题就是耍流氓。像MFC这样的框架已经成为了类库构建的流行方式。尽管MFC本身正在令人欣喜的逐渐衰弱，但是在微软商店里MFC框架还是拥有统治地位因为那里的程序员相信微软即正义。<br>　　基于框架的系统通常开始于库提供的半成品类，你不需要做任何事，只要通过派生类去提供缺失的方法。典型的例子是Java的<code>Component</code>类里的<code>paint</code>方法，这个方法只不过是一个占位符；派生类必须提供真实的实现版本。<br>　　你能适当的避免这类事情，但是基于类派生订制实现的类框架是极其脆弱的。基础类太脆弱了。当我在MFC中开发程序，我就要有随时改写程序以应对微软发布新版本的觉悟。今天可用的代码到了明天就未必了，因为基础类方法变了。<br>　　所有的java包都是即插即用工作良好。你不需要继承任何东西并实现方法。这种即插即用的工作机构要好于基于派生的框架。它更易维护和使用并且不会把你的代码置于因为Sun公司修改类库实现而崩溃的风险之下。</p>\n<h2 id=\"总结脆弱的基础类\"><a href=\"#总结脆弱的基础类\" class=\"headerlink\" title=\"总结脆弱的基础类\"></a>总结脆弱的基础类</h2><p>　　通常来讲，最好是避免使用具体的基础类和<code>extends</code>继承关系而以接口和<code>implements</code>实现关系取代。我的经验法则是我最少80%的代码需要基于接口重构。比如，我永远不会使用HashMap的引用，而是使用Map接口。（我这里使用宽泛的“接口”定义。当你看到InputStream如何实现你就会知道实际上它也是个接口，尽管在Java中是需要被实现的抽象类。）<br>　　你使用越多的抽象，你就能获得越大的灵活性。在如今的商业环境里，开发过程中需求不断变化，这种灵活性是必须的。进一步，绝大多数的敏捷开发方法论（比如Crystal和极限开发）无法实施除非代码都是基于抽象的。<br>　　如果你仔细阅读四人帮的设计模式，你会发现他们提供的许多方法都是消除了实现继承取而代之的是接口继承，这是大多数模式的普遍特征。这个重要的事实就是我们开头所说的：设计模式是被发现的而不是被发明的。设计模式总结了那些优美的、易于维护的代码。他告诉我们优美的、易于维护的代码都不惜一切代价避免实现继承。</p>"},{"title":"viewport-test-data","date":"2017-07-27T09:40:46.000Z","_content":"\n## 机型\n本次测试使用了iPhone7 plus和华为MT7。两台设备的理想viewport分别是414\\*736(iPhone7 Plus)和360\\*640（华为MT7）。\n\n页面所用元素为一张图片尺寸640x1140，单位px\n\n\t<div style=\"position: absolute;top:0;left:0;width: 640px;height: 1140px\"><img src=\"testbg.png\"></div>\n\n需要注意的是理想viewport和屏幕实际大小没有关系华为的屏幕其实要比7p要大一些。\n\n<!--more-->\n## iphone7 plus上的测试数据\n\n### viewport属性width=device-width\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse:collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td class=\"xl66\">641x1040</td>  <td class=\"xl66\">641x1040</td>  <td class=\"xl66\">641x560</td>  <td class=\"xl66\">736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidth*innerHeight</td>  <td class=\"xl66\">641x972</td>  <td class=\"xl66\">641x972</td>  <td class=\"xl66\">736x337</td>  <td class=\"xl66\">736x337</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td class=\"xl66\">641x1022</td>  <td class=\"xl66\">641x1022</td>  <td class=\"xl66\">641x523</td>  <td class=\"xl66\">736x338</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>736x338</td>  <td>736x338</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>736x338</td>  <td>736x338</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>641x954</td>  <td>641x954</td>  <td>736x362</td>  <td>736x362</td> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>736x362</td>  <td>736x362</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>736x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td> </tr> </tbody></table>\n\n小结：\n \n  * 所有浏览器页面被缩放，宽度刚好填满整个屏幕，同比例缩放高度\n  * innerWidth和innerHeight在吴延迟情况下会出现波动。\n  * screenWidth和screenHeight不会因为屏幕翻转而改变\n  * innerWidth和innerHeight对于页面的当前显示内容尺寸的数值是最准确的，client和offset数据都是当前可视窗口实际尺寸数值（实际尺寸宽为414，自动缩放后页面尺寸是640）\n  \n-\n\n### viewport属性:width=640\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td>641x1040</td>  <td>641x1040</td>  <td class=\"xl66\">641x560</td>  <td>641x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x1039</td>  <td>640x1039</td>  <td>640x315</td>  <td>640x315</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x1039</td>  <td>640x1039</td>  <td>640x315</td>  <td>640x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidth*innerHeight</td>  <td>641x972</td>  <td>641x972</td>  <td>641x294</td>  <td>641x294</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x971</td>  <td>640x971</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x971</td>  <td>640x971</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>640x1020</td>  <td>641x1022</td>  <td>641x294</td>  <td>641x294</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x1020</td>  <td>640x1020</td>  <td>640x294</td>  <td>640x294</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x1020</td>  <td>640x1020</td>  <td>640x294</td>  <td>640x294</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>641x954</td>  <td>641x954</td>  <td>641x315</td>  <td>641x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x952</td>  <td>640x952</td>  <td>640x315</td>  <td>640x315</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x952</td>  <td>640x952</td>  <td>640x315</td>  <td>640x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> </tbody></table>\n\n小结：\n \n  * 所有浏览器页面被缩放，宽度刚好填满整个屏幕，同比例缩放高度\n  * innerWidth和innerHeight在吴延迟情况下会出现波动。\n  * screenWidth和screenHeight不会因为屏幕翻转而改变\n  * innerWidth和innerHeight对于页面的可视范围的数值是最准确的\n  \n-\n\n### viewport属性:width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td>414x672</td>  <td>414x672</td>  <td class=\"xl66\">641x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidth*innerHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x337</td>  <td>736x337</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>641x414</td>  <td>736x414</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> </tbody></table>\n\n小结：\n\n* 页面不做缩放，尺寸为屏幕的理想viewport\n* 横屏后大于640的部分为白条填补\n\n-\n\n### viewport属性width=640,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse:collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr>  <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td>414x672</td>  <td>414x672</td>  <td class=\"xl66\">641x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x1039</td>  <td>640x1039</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x1039</td>  <td>640x1039</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidth*innerHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x337</td>  <td>736x337</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x971</td>  <td>640x971</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x971</td>  <td>640x971</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>641x338</td>  <td>736x338</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x1020</td>  <td>640x1020</td>  <td>736x338</td>  <td>736x338</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x1020</td>  <td>640x1020</td>  <td>736x338</td>  <td>736x338</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>641x414</td>  <td>736x414</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x952</td>  <td>640x952</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x952</td>  <td>640x952</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr></tbody></table>\n\n小结：\n\n* 页面不做缩放，尺寸为屏幕的理想viewport\n* inner系列在无延迟的情况下会出现波动\n\n\n## 华为 MT7(Android 6)上的测试数据\n\n### viewport属性width=device-width\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidth*innerHeight</td>  <td>360x580</td>  <td>360x628</td>  <td>598x408</td>  <td>598x360</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x580</td>  <td>360x628</td>  <td>598x408</td>  <td>598x408</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x580</td>  <td>360x628</td>  <td>598x408</td>  <td>598x408</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>640x1140</td>  <td>640x1140</td>  <td>640x1140</td>  <td>640x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>360x184</td>  <td>360x184</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>   </tr> </tbody></table>\n\n小结：\n\n* 页面不做缩放，尺寸为屏幕的理想viewport\n* inner系列在无延迟的情况下会出现波动\n* innerheight会根据头部是否显示动态改变值\t\n* screen系列随着屏幕的转动呈现不同的宽、高值，由于华为系列有虚拟返回键，所以在不同浏览器中screen值也并不相同（360*640是这台手机的理想viewport，但是有了虚拟键之后其实到不了640这个高度）\n\n-\n\n### width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth* innerHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>       </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>       </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidth*innerHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>360x184</td>  <td>360x184</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>   </tr></table>\n\n小结：\n\n* 页面不做缩放，尺寸为屏幕的理想viewport\n* innerheight会根据头部是否显示动态改变值\t\n* screen系列随着屏幕的转动呈现不同的宽、高值\n\n-\n\n### width=640\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td>640x946</td>  <td>640x946</td>  <td class=\"xl66\">640x309</td>  <td class=\"xl66\">640x309</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidth*innerHeight</td>  <td>640x1031</td>  <td>640x1031</td>  <td>640x385</td>  <td>640x385</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x1031</td>  <td>640x1031</td>  <td>640x385</td>  <td>640x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x1031</td>  <td>640x1031</td>  <td>640x385</td>  <td>640x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>640x932</td>  <td>640x932</td>  <td>641x300</td>  <td>641x300</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>640x847</td>  <td>640x847</td>  <td>641x326</td>  <td>641x326</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x846</td>  <td>640x846</td>  <td>640x325</td>  <td>640x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x846</td>  <td>640x846</td>  <td>640x325</td>  <td>640x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>     </tr></tbody></table> \n\n小结：\n\n* 页面自动缩放\n* screen系列随着屏幕的转动呈现不同的宽、高值\n\n-\n \n \n### width=640,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidth*innerHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>640x385</td>  <td>640x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>586x385</td>  <td>586x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>360x184</td>  <td>360x184</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x846</td>  <td>640x846</td>  <td>640x325</td>  <td>640x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x846</td>  <td>640x846</td>  <td>340x325</td>  <td>340x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>     </tr></tbody></table>\n\n小结：\n\n* 页面无缩放\n* screen系列随着屏幕的转动呈现不同的宽、高值\n\n-\n\n## 总结\n\n* iphone在只设置width时，当页面实际尺寸大于设置的尺寸时页面都会被缩放到也屏幕宽度能够显示完的尺寸，当页面实际尺寸大于设置的尺寸时页面都会被缩放到一个屏幕宽度能够显示完的尺寸，超出页面尺寸的部分会被填补\ninner数值始终显示屏幕当前显示页面的实际尺寸，而client和offset显示屏幕的可视范围的尺寸\n\n* 安卓不会对页面进行缩放，只根据当前的viewport值进行页面显示，需要注意的时候当设置了initial-scale=1.0后width的设定只会影响到client和offset数值，但是innner的数值依然是理想viewport，当然显示出来的也是未被缩放的页面","source":"_posts/viewport-test-data.md","raw":"---\ntitle: viewport-test-data\ndate: 2017-07-27 17:40:46\ntags: \n  - H5\n  - viewport\n  - 测试数据\n\ncategories:\n  - H5\n  \n---\n\n## 机型\n本次测试使用了iPhone7 plus和华为MT7。两台设备的理想viewport分别是414\\*736(iPhone7 Plus)和360\\*640（华为MT7）。\n\n页面所用元素为一张图片尺寸640x1140，单位px\n\n\t<div style=\"position: absolute;top:0;left:0;width: 640px;height: 1140px\"><img src=\"testbg.png\"></div>\n\n需要注意的是理想viewport和屏幕实际大小没有关系华为的屏幕其实要比7p要大一些。\n\n<!--more-->\n## iphone7 plus上的测试数据\n\n### viewport属性width=device-width\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse:collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td class=\"xl66\">641x1040</td>  <td class=\"xl66\">641x1040</td>  <td class=\"xl66\">641x560</td>  <td class=\"xl66\">736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidth*innerHeight</td>  <td class=\"xl66\">641x972</td>  <td class=\"xl66\">641x972</td>  <td class=\"xl66\">736x337</td>  <td class=\"xl66\">736x337</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td class=\"xl66\">641x1022</td>  <td class=\"xl66\">641x1022</td>  <td class=\"xl66\">641x523</td>  <td class=\"xl66\">736x338</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>736x338</td>  <td>736x338</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>736x338</td>  <td>736x338</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>641x954</td>  <td>641x954</td>  <td>736x362</td>  <td>736x362</td> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>736x362</td>  <td>736x362</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>736x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td> </tr> </tbody></table>\n\n小结：\n \n  * 所有浏览器页面被缩放，宽度刚好填满整个屏幕，同比例缩放高度\n  * innerWidth和innerHeight在吴延迟情况下会出现波动。\n  * screenWidth和screenHeight不会因为屏幕翻转而改变\n  * innerWidth和innerHeight对于页面的当前显示内容尺寸的数值是最准确的，client和offset数据都是当前可视窗口实际尺寸数值（实际尺寸宽为414，自动缩放后页面尺寸是640）\n  \n-\n\n### viewport属性:width=640\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td>641x1040</td>  <td>641x1040</td>  <td class=\"xl66\">641x560</td>  <td>641x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x1039</td>  <td>640x1039</td>  <td>640x315</td>  <td>640x315</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x1039</td>  <td>640x1039</td>  <td>640x315</td>  <td>640x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidth*innerHeight</td>  <td>641x972</td>  <td>641x972</td>  <td>641x294</td>  <td>641x294</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x971</td>  <td>640x971</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x971</td>  <td>640x971</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>640x1020</td>  <td>641x1022</td>  <td>641x294</td>  <td>641x294</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x1020</td>  <td>640x1020</td>  <td>640x294</td>  <td>640x294</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x1020</td>  <td>640x1020</td>  <td>640x294</td>  <td>640x294</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>641x954</td>  <td>641x954</td>  <td>641x315</td>  <td>641x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x952</td>  <td>640x952</td>  <td>640x315</td>  <td>640x315</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x952</td>  <td>640x952</td>  <td>640x315</td>  <td>640x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> </tbody></table>\n\n小结：\n \n  * 所有浏览器页面被缩放，宽度刚好填满整个屏幕，同比例缩放高度\n  * innerWidth和innerHeight在吴延迟情况下会出现波动。\n  * screenWidth和screenHeight不会因为屏幕翻转而改变\n  * innerWidth和innerHeight对于页面的可视范围的数值是最准确的\n  \n-\n\n### viewport属性:width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td>414x672</td>  <td>414x672</td>  <td class=\"xl66\">641x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidth*innerHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x337</td>  <td>736x337</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>641x414</td>  <td>736x414</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> </tbody></table>\n\n小结：\n\n* 页面不做缩放，尺寸为屏幕的理想viewport\n* 横屏后大于640的部分为白条填补\n\n-\n\n### viewport属性width=640,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse:collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr>  <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td>414x672</td>  <td>414x672</td>  <td class=\"xl66\">641x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x1039</td>  <td>640x1039</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x1039</td>  <td>640x1039</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidth*innerHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x337</td>  <td>736x337</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x971</td>  <td>640x971</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x971</td>  <td>640x971</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>641x338</td>  <td>736x338</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x1020</td>  <td>640x1020</td>  <td>736x338</td>  <td>736x338</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x1020</td>  <td>640x1020</td>  <td>736x338</td>  <td>736x338</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>641x414</td>  <td>736x414</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x952</td>  <td>640x952</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x952</td>  <td>640x952</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr></tbody></table>\n\n小结：\n\n* 页面不做缩放，尺寸为屏幕的理想viewport\n* inner系列在无延迟的情况下会出现波动\n\n\n## 华为 MT7(Android 6)上的测试数据\n\n### viewport属性width=device-width\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidth*innerHeight</td>  <td>360x580</td>  <td>360x628</td>  <td>598x408</td>  <td>598x360</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x580</td>  <td>360x628</td>  <td>598x408</td>  <td>598x408</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x580</td>  <td>360x628</td>  <td>598x408</td>  <td>598x408</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>640x1140</td>  <td>640x1140</td>  <td>640x1140</td>  <td>640x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>360x184</td>  <td>360x184</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>   </tr> </tbody></table>\n\n小结：\n\n* 页面不做缩放，尺寸为屏幕的理想viewport\n* inner系列在无延迟的情况下会出现波动\n* innerheight会根据头部是否显示动态改变值\t\n* screen系列随着屏幕的转动呈现不同的宽、高值，由于华为系列有虚拟返回键，所以在不同浏览器中screen值也并不相同（360*640是这台手机的理想viewport，但是有了虚拟键之后其实到不了640这个高度）\n\n-\n\n### width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth* innerHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>       </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>       </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidth*innerHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>360x184</td>  <td>360x184</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>   </tr></table>\n\n小结：\n\n* 页面不做缩放，尺寸为屏幕的理想viewport\n* innerheight会根据头部是否显示动态改变值\t\n* screen系列随着屏幕的转动呈现不同的宽、高值\n\n-\n\n### width=640\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td>640x946</td>  <td>640x946</td>  <td class=\"xl66\">640x309</td>  <td class=\"xl66\">640x309</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidth*innerHeight</td>  <td>640x1031</td>  <td>640x1031</td>  <td>640x385</td>  <td>640x385</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x1031</td>  <td>640x1031</td>  <td>640x385</td>  <td>640x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x1031</td>  <td>640x1031</td>  <td>640x385</td>  <td>640x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>640x932</td>  <td>640x932</td>  <td>641x300</td>  <td>641x300</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>640x847</td>  <td>640x847</td>  <td>641x326</td>  <td>641x326</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x846</td>  <td>640x846</td>  <td>640x325</td>  <td>640x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x846</td>  <td>640x846</td>  <td>640x325</td>  <td>640x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>     </tr></tbody></table> \n\n小结：\n\n* 页面自动缩放\n* screen系列随着屏幕的转动呈现不同的宽、高值\n\n-\n \n \n### width=640,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0\n\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth*innerHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidth*innerHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>640x385</td>  <td>640x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>586x385</td>  <td>586x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth*innerHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidth*innerHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>360x184</td>  <td>360x184</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth*clientHeight</td>  <td>640x846</td>  <td>640x846</td>  <td>640x325</td>  <td>640x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth*offsetHeight</td>  <td>640x846</td>  <td>640x846</td>  <td>340x325</td>  <td>340x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth*scrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth*screenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>     </tr></tbody></table>\n\n小结：\n\n* 页面无缩放\n* screen系列随着屏幕的转动呈现不同的宽、高值\n\n-\n\n## 总结\n\n* iphone在只设置width时，当页面实际尺寸大于设置的尺寸时页面都会被缩放到也屏幕宽度能够显示完的尺寸，当页面实际尺寸大于设置的尺寸时页面都会被缩放到一个屏幕宽度能够显示完的尺寸，超出页面尺寸的部分会被填补\ninner数值始终显示屏幕当前显示页面的实际尺寸，而client和offset显示屏幕的可视范围的尺寸\n\n* 安卓不会对页面进行缩放，只根据当前的viewport值进行页面显示，需要注意的时候当设置了initial-scale=1.0后width的设定只会影响到client和offset数值，但是innner的数值依然是理想viewport，当然显示出来的也是未被缩放的页面","slug":"viewport-test-data","published":1,"updated":"2017-08-03T02:48:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5w0cugf000hij66rohcy8qt","content":"<h2 id=\"机型\"><a href=\"#机型\" class=\"headerlink\" title=\"机型\"></a>机型</h2><p>本次测试使用了iPhone7 plus和华为MT7。两台设备的理想viewport分别是414*736(iPhone7 Plus)和360*640（华为MT7）。</p>\n<p>页面所用元素为一张图片尺寸640x1140，单位px</p>\n<pre><code>&lt;div style=&quot;position: absolute;top:0;left:0;width: 640px;height: 1140px&quot;&gt;&lt;img src=&quot;testbg.png&quot;&gt;&lt;/div&gt;\n</code></pre><p>需要注意的是理想viewport和屏幕实际大小没有关系华为的屏幕其实要比7p要大一些。</p>\n<a id=\"more\"></a>\n<h2 id=\"iphone7-plus上的测试数据\"><a href=\"#iphone7-plus上的测试数据\" class=\"headerlink\" title=\"iphone7 plus上的测试数据\"></a>iphone7 plus上的测试数据</h2><h3 id=\"viewport属性width-device-width\"><a href=\"#viewport属性width-device-width\" class=\"headerlink\" title=\"viewport属性width=device-width\"></a>viewport属性width=device-width</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse:collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td class=\"xl66\">641x1040</td>  <td class=\"xl66\">641x1040</td>  <td class=\"xl66\">641x560</td>  <td class=\"xl66\">736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidthinnerHeight</td>  <td class=\"xl66\">641x972</td>  <td class=\"xl66\">641x972</td>  <td class=\"xl66\">736x337</td>  <td class=\"xl66\">736x337</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td class=\"xl66\">641x1022</td>  <td class=\"xl66\">641x1022</td>  <td class=\"xl66\">641x523</td>  <td class=\"xl66\">736x338</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>736x338</td>  <td>736x338</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>414x660</td>  <td>414x660</td>  <td>736x338</td>  <td>736x338</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>641x954</td>  <td>641x954</td>  <td>736x362</td>  <td>736x362</td> </tr><tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>414x616</td>  <td>414x616</td>  <td>736x362</td>  <td>736x362</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>736x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td> </tr> </tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>所有浏览器页面被缩放，宽度刚好填满整个屏幕，同比例缩放高度</li>\n<li>innerWidth和innerHeight在吴延迟情况下会出现波动。</li>\n<li>screenWidth和screenHeight不会因为屏幕翻转而改变</li>\n<li>innerWidth和innerHeight对于页面的当前显示内容尺寸的数值是最准确的，client和offset数据都是当前可视窗口实际尺寸数值（实际尺寸宽为414，自动缩放后页面尺寸是640）</li>\n</ul>\n<p>-</p>\n<h3 id=\"viewport属性-width-640\"><a href=\"#viewport属性-width-640\" class=\"headerlink\" title=\"viewport属性:width=640\"></a>viewport属性:width=640</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td>641x1040</td>  <td>641x1040</td>  <td class=\"xl66\">641x560</td>  <td>641x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x1039</td>  <td>640x1039</td>  <td>640x315</td>  <td>640x315</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x1039</td>  <td>640x1039</td>  <td>640x315</td>  <td>640x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidthinnerHeight</td>  <td>641x972</td>  <td>641x972</td>  <td>641x294</td>  <td>641x294</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x971</td>  <td>640x971</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x971</td>  <td>640x971</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>640x1020</td>  <td>641x1022</td>  <td>641x294</td>  <td>641x294</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x1020</td>  <td>640x1020</td>  <td>640x294</td>  <td>640x294</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x1020</td>  <td>640x1020</td>  <td>640x294</td>  <td>640x294</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>641x954</td>  <td>641x954</td>  <td>641x315</td>  <td>641x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x952</td>  <td>640x952</td>  <td>640x315</td>  <td>640x315</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x952</td>  <td>640x952</td>  <td>640x315</td>  <td>640x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> </tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>所有浏览器页面被缩放，宽度刚好填满整个屏幕，同比例缩放高度</li>\n<li>innerWidth和innerHeight在吴延迟情况下会出现波动。</li>\n<li>screenWidth和screenHeight不会因为屏幕翻转而改变</li>\n<li>innerWidth和innerHeight对于页面的可视范围的数值是最准确的</li>\n</ul>\n<p>-</p>\n<h3 id=\"viewport属性-width-device-width-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0-user-scalable-no\"><a href=\"#viewport属性-width-device-width-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0-user-scalable-no\" class=\"headerlink\" title=\"viewport属性:width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no\"></a>viewport属性:width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td>414x672</td>  <td>414x672</td>  <td class=\"xl66\">641x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidthinnerHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x337</td>  <td>736x337</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>641x414</td>  <td>736x414</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>414x616</td>  <td>414x616</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> </tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>页面不做缩放，尺寸为屏幕的理想viewport</li>\n<li>横屏后大于640的部分为白条填补</li>\n</ul>\n<p>-</p>\n<h3 id=\"viewport属性width-640-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0\"><a href=\"#viewport属性width-640-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0\" class=\"headerlink\" title=\"viewport属性width=640,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0\"></a>viewport属性width=640,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse:collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr>  <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td>414x672</td>  <td>414x672</td>  <td class=\"xl66\">641x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x1039</td>  <td>640x1039</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x1039</td>  <td>640x1039</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidthinnerHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x337</td>  <td>736x337</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x971</td>  <td>640x971</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x971</td>  <td>640x971</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>414x660</td>  <td>414x660</td>  <td>641x338</td>  <td>736x338</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x1020</td>  <td>640x1020</td>  <td>736x338</td>  <td>736x338</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x1020</td>  <td>640x1020</td>  <td>736x338</td>  <td>736x338</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>641x414</td>  <td>736x414</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x952</td>  <td>640x952</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x952</td>  <td>640x952</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr></tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>页面不做缩放，尺寸为屏幕的理想viewport</li>\n<li>inner系列在无延迟的情况下会出现波动</li>\n</ul>\n<h2 id=\"华为-MT7-Android-6-上的测试数据\"><a href=\"#华为-MT7-Android-6-上的测试数据\" class=\"headerlink\" title=\"华为 MT7(Android 6)上的测试数据\"></a>华为 MT7(Android 6)上的测试数据</h2><h3 id=\"viewport属性width-device-width-1\"><a href=\"#viewport属性width-device-width-1\" class=\"headerlink\" title=\"viewport属性width=device-width\"></a>viewport属性width=device-width</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidthinnerHeight</td>  <td>360x580</td>  <td>360x628</td>  <td>598x408</td>  <td>598x360</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>360x580</td>  <td>360x628</td>  <td>598x408</td>  <td>598x408</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>360x580</td>  <td>360x628</td>  <td>598x408</td>  <td>598x408</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>640x1140</td>  <td>640x1140</td>  <td>640x1140</td>  <td>640x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>360x184</td>  <td>360x184</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>   </tr> </tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>页面不做缩放，尺寸为屏幕的理想viewport</li>\n<li>inner系列在无延迟的情况下会出现波动</li>\n<li>innerheight会根据头部是否显示动态改变值    </li>\n<li>screen系列随着屏幕的转动呈现不同的宽、高值，由于华为系列有虚拟返回键，所以在不同浏览器中screen值也并不相同（360*640是这台手机的理想viewport，但是有了虚拟键之后其实到不了640这个高度）</li>\n</ul>\n<p>-</p>\n<h3 id=\"width-device-width-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0-user-scalable-no\"><a href=\"#width-device-width-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0-user-scalable-no\" class=\"headerlink\" title=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no\"></a>width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em> innerHeight</em></td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>       </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>       </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidthinnerHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>360x184</td>  <td>360x184</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>   </tr></tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>页面不做缩放，尺寸为屏幕的理想viewport</li>\n<li>innerheight会根据头部是否显示动态改变值    </li>\n<li>screen系列随着屏幕的转动呈现不同的宽、高值</li>\n</ul>\n<p>-</p>\n<h3 id=\"width-640\"><a href=\"#width-640\" class=\"headerlink\" title=\"width=640\"></a>width=640</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td>640x946</td>  <td>640x946</td>  <td class=\"xl66\">640x309</td>  <td class=\"xl66\">640x309</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidthinnerHeight</td>  <td>640x1031</td>  <td>640x1031</td>  <td>640x385</td>  <td>640x385</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x1031</td>  <td>640x1031</td>  <td>640x385</td>  <td>640x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x1031</td>  <td>640x1031</td>  <td>640x385</td>  <td>640x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>640x932</td>  <td>640x932</td>  <td>641x300</td>  <td>641x300</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>640x847</td>  <td>640x847</td>  <td>641x326</td>  <td>641x326</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x846</td>  <td>640x846</td>  <td>640x325</td>  <td>640x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x846</td>  <td>640x846</td>  <td>640x325</td>  <td>640x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>     </tr></tbody></table> \n\n<p>小结：</p>\n<ul>\n<li>页面自动缩放</li>\n<li>screen系列随着屏幕的转动呈现不同的宽、高值</li>\n</ul>\n<p>-</p>\n<h3 id=\"width-640-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0\"><a href=\"#width-640-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0\" class=\"headerlink\" title=\"width=640,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0\"></a>width=640,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x604</td>  <td>360x604</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidthinnerHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>360x580</td>  <td>360x580</td>  <td>640x385</td>  <td>640x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>586x385</td>  <td>586x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>360x184</td>  <td>360x184</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x846</td>  <td>640x846</td>  <td>640x325</td>  <td>640x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x846</td>  <td>640x846</td>  <td>340x325</td>  <td>340x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>     </tr></tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>页面无缩放</li>\n<li>screen系列随着屏幕的转动呈现不同的宽、高值</li>\n</ul>\n<p>-</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li><p>iphone在只设置width时，当页面实际尺寸大于设置的尺寸时页面都会被缩放到也屏幕宽度能够显示完的尺寸，当页面实际尺寸大于设置的尺寸时页面都会被缩放到一个屏幕宽度能够显示完的尺寸，超出页面尺寸的部分会被填补<br>inner数值始终显示屏幕当前显示页面的实际尺寸，而client和offset显示屏幕的可视范围的尺寸</p>\n</li>\n<li><p>安卓不会对页面进行缩放，只根据当前的viewport值进行页面显示，需要注意的时候当设置了initial-scale=1.0后width的设定只会影响到client和offset数值，但是innner的数值依然是理想viewport，当然显示出来的也是未被缩放的页面</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"机型\"><a href=\"#机型\" class=\"headerlink\" title=\"机型\"></a>机型</h2><p>本次测试使用了iPhone7 plus和华为MT7。两台设备的理想viewport分别是414*736(iPhone7 Plus)和360*640（华为MT7）。</p>\n<p>页面所用元素为一张图片尺寸640x1140，单位px</p>\n<pre><code>&lt;div style=&quot;position: absolute;top:0;left:0;width: 640px;height: 1140px&quot;&gt;&lt;img src=&quot;testbg.png&quot;&gt;&lt;/div&gt;\n</code></pre><p>需要注意的是理想viewport和屏幕实际大小没有关系华为的屏幕其实要比7p要大一些。</p>","more":"<h2 id=\"iphone7-plus上的测试数据\"><a href=\"#iphone7-plus上的测试数据\" class=\"headerlink\" title=\"iphone7 plus上的测试数据\"></a>iphone7 plus上的测试数据</h2><h3 id=\"viewport属性width-device-width\"><a href=\"#viewport属性width-device-width\" class=\"headerlink\" title=\"viewport属性width=device-width\"></a>viewport属性width=device-width</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse:collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td class=\"xl66\">641x1040</td>  <td class=\"xl66\">641x1040</td>  <td class=\"xl66\">641x560</td>  <td class=\"xl66\">736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidthinnerHeight</td>  <td class=\"xl66\">641x972</td>  <td class=\"xl66\">641x972</td>  <td class=\"xl66\">736x337</td>  <td class=\"xl66\">736x337</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td class=\"xl66\">641x1022</td>  <td class=\"xl66\">641x1022</td>  <td class=\"xl66\">641x523</td>  <td class=\"xl66\">736x338</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>736x338</td>  <td>736x338</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>414x660</td>  <td>414x660</td>  <td>736x338</td>  <td>736x338</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>641x954</td>  <td>641x954</td>  <td>736x362</td>  <td>736x362</td> </tr><tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>414x616</td>  <td>414x616</td>  <td>736x362</td>  <td>736x362</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>736x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td></tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td> </tr> </tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>所有浏览器页面被缩放，宽度刚好填满整个屏幕，同比例缩放高度</li>\n<li>innerWidth和innerHeight在吴延迟情况下会出现波动。</li>\n<li>screenWidth和screenHeight不会因为屏幕翻转而改变</li>\n<li>innerWidth和innerHeight对于页面的当前显示内容尺寸的数值是最准确的，client和offset数据都是当前可视窗口实际尺寸数值（实际尺寸宽为414，自动缩放后页面尺寸是640）</li>\n</ul>\n<p>-</p>\n<h3 id=\"viewport属性-width-640\"><a href=\"#viewport属性-width-640\" class=\"headerlink\" title=\"viewport属性:width=640\"></a>viewport属性:width=640</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td>641x1040</td>  <td>641x1040</td>  <td class=\"xl66\">641x560</td>  <td>641x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x1039</td>  <td>640x1039</td>  <td>640x315</td>  <td>640x315</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x1039</td>  <td>640x1039</td>  <td>640x315</td>  <td>640x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidthinnerHeight</td>  <td>641x972</td>  <td>641x972</td>  <td>641x294</td>  <td>641x294</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x971</td>  <td>640x971</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x971</td>  <td>640x971</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>640x1020</td>  <td>641x1022</td>  <td>641x294</td>  <td>641x294</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x1020</td>  <td>640x1020</td>  <td>640x294</td>  <td>640x294</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x1020</td>  <td>640x1020</td>  <td>640x294</td>  <td>640x294</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>641x954</td>  <td>641x954</td>  <td>641x315</td>  <td>641x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x952</td>  <td>640x952</td>  <td>640x315</td>  <td>640x315</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x952</td>  <td>640x952</td>  <td>640x315</td>  <td>640x315</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> </tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>所有浏览器页面被缩放，宽度刚好填满整个屏幕，同比例缩放高度</li>\n<li>innerWidth和innerHeight在吴延迟情况下会出现波动。</li>\n<li>screenWidth和screenHeight不会因为屏幕翻转而改变</li>\n<li>innerWidth和innerHeight对于页面的可视范围的数值是最准确的</li>\n</ul>\n<p>-</p>\n<h3 id=\"viewport属性-width-device-width-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0-user-scalable-no\"><a href=\"#viewport属性-width-device-width-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0-user-scalable-no\" class=\"headerlink\" title=\"viewport属性:width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no\"></a>viewport属性:width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td>414x672</td>  <td>414x672</td>  <td class=\"xl66\">641x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>414x672</td>  <td>414x672</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidthinnerHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x337</td>  <td>736x337</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>  <td>414x660</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>641x414</td>  <td>736x414</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>414x616</td>  <td>414x616</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>736x1140</td>  <td>736x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> </tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>页面不做缩放，尺寸为屏幕的理想viewport</li>\n<li>横屏后大于640的部分为白条填补</li>\n</ul>\n<p>-</p>\n<h3 id=\"viewport属性width-640-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0\"><a href=\"#viewport属性width-640-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0\" class=\"headerlink\" title=\"viewport属性width=640,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0\"></a>viewport属性width=640,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse:collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr>  <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td>414x672</td>  <td>414x672</td>  <td class=\"xl66\">641x362</td>  <td>736x362</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x1039</td>  <td>640x1039</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x1039</td>  <td>640x1039</td>  <td>736x362</td>  <td>736x362</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">safari</td>  <td>innerWidthinnerHeight</td>  <td>414x628</td>  <td>414x628</td>  <td>736x337</td>  <td>736x337</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x971</td>  <td>640x971</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x971</td>  <td>640x971</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>414x660</td>  <td>414x660</td>  <td>641x338</td>  <td>736x338</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x1020</td>  <td>640x1020</td>  <td>736x338</td>  <td>736x338</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x1020</td>  <td>640x1020</td>  <td>736x338</td>  <td>736x338</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>414x616</td>  <td>414x616</td>  <td>641x414</td>  <td>736x414</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x952</td>  <td>640x952</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x952</td>  <td>640x952</td>  <td>736x414</td>  <td>736x414</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>  <td>414x736</td>     </tr></tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>页面不做缩放，尺寸为屏幕的理想viewport</li>\n<li>inner系列在无延迟的情况下会出现波动</li>\n</ul>\n<h2 id=\"华为-MT7-Android-6-上的测试数据\"><a href=\"#华为-MT7-Android-6-上的测试数据\" class=\"headerlink\" title=\"华为 MT7(Android 6)上的测试数据\"></a>华为 MT7(Android 6)上的测试数据</h2><h3 id=\"viewport属性width-device-width-1\"><a href=\"#viewport属性width-device-width-1\" class=\"headerlink\" title=\"viewport属性width=device-width\"></a>viewport属性width=device-width</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidthinnerHeight</td>  <td>360x580</td>  <td>360x628</td>  <td>598x408</td>  <td>598x360</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>360x580</td>  <td>360x628</td>  <td>598x408</td>  <td>598x408</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>360x580</td>  <td>360x628</td>  <td>598x408</td>  <td>598x408</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>640x1140</td>  <td>640x1140</td>  <td>640x1140</td>  <td>640x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>360x184</td>  <td>360x184</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>   </tr> </tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>页面不做缩放，尺寸为屏幕的理想viewport</li>\n<li>inner系列在无延迟的情况下会出现波动</li>\n<li>innerheight会根据头部是否显示动态改变值    </li>\n<li>screen系列随着屏幕的转动呈现不同的宽、高值，由于华为系列有虚拟返回键，所以在不同浏览器中screen值也并不相同（360*640是这台手机的理想viewport，但是有了虚拟键之后其实到不了640这个高度）</li>\n</ul>\n<p>-</p>\n<h3 id=\"width-device-width-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0-user-scalable-no\"><a href=\"#width-device-width-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0-user-scalable-no\" class=\"headerlink\" title=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no\"></a>width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em> innerHeight</em></td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>       </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>       </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidthinnerHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>360x184</td>  <td>360x184</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>598x304</td>  <td>598x304</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>           </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>   </tr></tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>页面不做缩放，尺寸为屏幕的理想viewport</li>\n<li>innerheight会根据头部是否显示动态改变值    </li>\n<li>screen系列随着屏幕的转动呈现不同的宽、高值</li>\n</ul>\n<p>-</p>\n<h3 id=\"width-640\"><a href=\"#width-640\" class=\"headerlink\" title=\"width=640\"></a>width=640</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td>640x946</td>  <td>640x946</td>  <td class=\"xl66\">640x309</td>  <td class=\"xl66\">640x309</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidthinnerHeight</td>  <td>640x1031</td>  <td>640x1031</td>  <td>640x385</td>  <td>640x385</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x1031</td>  <td>640x1031</td>  <td>640x385</td>  <td>640x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x1031</td>  <td>640x1031</td>  <td>640x385</td>  <td>640x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>640x932</td>  <td>640x932</td>  <td>641x300</td>  <td>641x300</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>640x847</td>  <td>640x847</td>  <td>641x326</td>  <td>641x326</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x846</td>  <td>640x846</td>  <td>640x325</td>  <td>640x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x846</td>  <td>640x846</td>  <td>640x325</td>  <td>640x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>     </tr></tbody></table> \n\n<p>小结：</p>\n<ul>\n<li>页面自动缩放</li>\n<li>screen系列随着屏幕的转动呈现不同的宽、高值</li>\n</ul>\n<p>-</p>\n<h3 id=\"width-640-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0\"><a href=\"#width-640-initial-scale-1-0-maximum-scale-1-0-minimum-scale-1-0\" class=\"headerlink\" title=\"width=640,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0\"></a>width=640,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0</h3><table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"1678\" style=\"border-collapse: collapse;table-layout:fixed;width:1255pt\"> <colgroup><col width=\"87\" style=\"width:65pt\"> <col width=\"227\" style=\"mso-width-source:userset;mso-width-alt:7253;width:170pt\"> <col width=\"108\" style=\"mso-width-source:userset;mso-width-alt:3456;width:81pt\"> <col width=\"103\" style=\"mso-width-source:userset;mso-width-alt:3285;width:77pt\"> <col width=\"85\" style=\"mso-width-source:userset;mso-width-alt:2730;width:64pt\"> <col width=\"111\" style=\"mso-width-source:userset;mso-width-alt:3541;width:83pt\"> <col width=\"87\" span=\"11\" style=\"width:65pt\"> </colgroup><tbody> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"2\" height=\"21\" style=\"height:16.0pt\">浏览器</td>  <td rowspan=\"2\">属性</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">竖屏</td>  <td colspan=\"2\" class=\"xl67\" style=\"text-align:center\">横屏</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td>无延迟</td>  <td>延迟500ms</td>  <td>无延迟</td>  <td>延迟500ms</td> </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">微信</td>  <td>innerWidth<em>innerHeight</em></td>  <td>360x532</td>  <td>360x532</td>  <td>598x288</td>  <td>598x288</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x945</td>  <td>640x945</td>  <td>640x308</td>  <td>640x308</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x604</td>  <td>360x604</td>  <td>640x360</td>  <td>640x360</td>   </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">默认浏览器</td>  <td>innerWidthinnerHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>598x360</td>  <td>598x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>360x580</td>  <td>360x580</td>  <td>640x385</td>  <td>640x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>360x580</td>  <td>360x580</td>  <td>586x385</td>  <td>586x385</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>1080x1812</td>  <td>1080x1812</td>  <td>1794x1080</td>  <td>1794x1080</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">chrome</td>  <td>innerWidth<em>innerHeight</em></td>  <td>360x524</td>  <td>360x524</td>  <td>598x280</td>  <td>598x280</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidthclientHeight</td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidth<em>offsetHeight</em></td>  <td>640x931</td>  <td>640x931</td>  <td>640x299</td>  <td>640x299</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidthscrollHeight</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidth<em>screenHeight</em></td>  <td>360x640</td>  <td>360x640</td>  <td>640x360</td>  <td>640x360</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td rowspan=\"5\" height=\"105\" class=\"xl68\" style=\"height:80.0pt\">qq浏览器</td>  <td>innerWidthinnerHeight</td>  <td>360x476</td>  <td>360x476</td>  <td>360x184</td>  <td>360x184</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">clientWidth<em>clientHeight</em></td>  <td>640x846</td>  <td>640x846</td>  <td>640x325</td>  <td>640x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">offsetWidthoffsetHeight</td>  <td>640x846</td>  <td>640x846</td>  <td>340x325</td>  <td>340x325</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">scrollWidth<em>scrollHeight</em></td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>  <td>641x1140</td>     </tr> <tr height=\"21\" style=\"height:16.0pt\">  <td height=\"21\" style=\"height:16.0pt\">screenWidthscreenHeight</td>  <td>360x604</td>  <td>360x604</td>  <td>598x360</td>  <td>598x360</td>     </tr></tbody></table>\n\n<p>小结：</p>\n<ul>\n<li>页面无缩放</li>\n<li>screen系列随着屏幕的转动呈现不同的宽、高值</li>\n</ul>\n<p>-</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><ul>\n<li><p>iphone在只设置width时，当页面实际尺寸大于设置的尺寸时页面都会被缩放到也屏幕宽度能够显示完的尺寸，当页面实际尺寸大于设置的尺寸时页面都会被缩放到一个屏幕宽度能够显示完的尺寸，超出页面尺寸的部分会被填补<br>inner数值始终显示屏幕当前显示页面的实际尺寸，而client和offset显示屏幕的可视范围的尺寸</p>\n</li>\n<li><p>安卓不会对页面进行缩放，只根据当前的viewport值进行页面显示，需要注意的时候当设置了initial-scale=1.0后width的设定只会影响到client和offset数值，但是innner的数值依然是理想viewport，当然显示出来的也是未被缩放的页面</p>\n</li>\n</ul>"},{"title":"为什么getter和setter方法是魔鬼","date":"2017-01-10T07:19:24.000Z","_content":"# 为什么getter和setter方法是魔鬼\n**_通过避免使用存储器来使你的代码变得更易维护_**\n\n**[原文地址](http://www.javaworld.com/article/2073723/core-java/why-getter-and-setter-methods-are-evil.html)**\n\n## 前言\n\n　　我没有打算开始一个“魔鬼的步伐”系列。但一些读者请我解释为什么我在上个月的专栏文章\"[Why extends Is Evil](http://www.javaworld.com/article/2073649/core-java/why-extends-is-evil.html)”中提到你应该避免使用get/set方法。\n\n　　尽管getter/setter方法在Java中是很常见的，但是他们不是特别符合面向对象的思想。事实上，他们会使你的代码变得难易维护。此外，大量getter和setter方法的出现是一个危险信号，它意味着你的程序不能被很好的符合OO思想。\n\n　　这篇文章解释了为什么你不应该使用getters和setters方法（在你能用他们的时候），并且提出一个可以帮助你跳出getter/setter误区的设计思想。\n\n## 设计的本质\n\n　　在我开始一个具有有争议标题的技术专栏前，我想澄清一些事情。\n\n　　我被一些读者在\"[Why extends Is Evil](http://www.javaworld.com/article/2073649/core-java/why-extends-is-evil.html)”一文下的评论给震惊了。一些人相信我宣称面向对象不是朴素的因为extents有问题，好像这两个论点是等价的。那绝对不是我想说的，所以我要澄清一些元问题（meta-issues）。\n<!--more-->\n　　这个专栏和过去几个月的文章都在讨论设计。设计从本质上来说以一种权衡。每一个选择都有其两面性，你需要在既定标准中做出决定。好和坏不是绝对的，一个好的决定一旦换了个环境就未必如此了。\n   \n　　如果你不能理解问题的两面性，你就不能做出一个明智的选择。事实上，如果你不理解每个行动会带来的所有后果，你就完全不能进行设计。你在黑暗中蹒跚前行。在“四人帮”的《设计模式》一书中每一章节都包含“Consequences”一小结用来说明哪些情况不适用当前模式，这绝不仅仅是一种偶然。\n\n　　阐述某些语言的特性或普遍的程序设计风格（比如存取方法）有问题不等于说你决不能在任何情况下使用他们。同样的，一个特性或风格被普遍使用不意味着你也可以使用它。那些不明就里的写了许多程序并且受雇于Sun或者微软的不明就里的程序员不能魔法般的提高程序开发和设计的能力。JAVA开发包中包含了很多伟大的代码。但是同样有一部分代码我确定是他们的作者羞于承认的。\n   \n　　出于同样的原因，营销或者政治动机经常推动着设计风格。有时候程序要做了错误的决定但是企业为了宣传他们的技术多牛B，所以他们前调你现在用的方法是不太理想的。当你仅仅是因为“这事你们应该这么干”而草率的接受了某些程序实践，那么你的行为是不负责任的。许多失败的EJB工程证明了这个原则。基于EJB的技术当你正确使用时是伟大的技术，但是当你滥用它的时候也能彻底的击倒一个企业。\n\n　　我的观点是你不能盲目的写程序。你必须理解一个特性或习惯所能造成的破坏。在这情况下，你会处于一个更有利的位置去决定是否需要使用这些特性或风格。你的选择会更合理更实用。这些文章的目的是帮助你用更开阔的视野去思考你的程序。\n\n## 数据抽象\n\n　　面向对象系统一个基本的原则是不要暴露任何实现细节。这样你可以修改你的实现而不改动用户代码。所以在面向对象系统中你应该避免getter和setter方法因为他们通常会保留实现细节。\n　　\n　　让我们来看为什么，假设在你的程序中有1000次的getX()方法的调用，每一个调用都假设了一个特定类型值的返回。你必须在本地变量中储层这个返回值，并且变量的类型必须和返回类型是相匹配的。如果你需要改变对象的实现从而导致X类型的改变，那么你就摊上大麻烦了。\n　　\n　　如果X曾是int型，但现在必须是long型，你会得到1000个编译错误。如果你只是简单的将返回值强制转换成int型，代码讲被编译通过，但未必能正常工作（返回值可能被截断）。为了这一个改动你必须逐一修改1000个调用。我肯定我不愿意去做这么多工作。\n　　\n　　面向对象系统的一个基本原则是数据抽象，你应该完全隐藏一个对象是如何处理从其他模块中获得的消息。这就是为什么你应该将所有实例对象(非常量)申明为private。\n   \n　　 如果你将一个成员申明为public,那么无论类发生了什么变化这个变量都不能被改变，因为你会破坏外部代码对这个成员的使用。你不会愿意搜索1000处调用仅仅是因为你改动了那个类。\n   \n　　隐藏实现原则提供了一个快速的检验OO系统质量的测试方法：你能否把类改得面目全非，却不影响任何用户的使用？模块化的匪类是面向对象的前提，它使得程序更易维护。没有实现的隐藏其他OO特性也就无从谈起。\n　　\n　　Getter和Setter方法（也被称为存储器）和公有成员变量都是危险的。他们暴露了实现细节。如果你要改变被访问字段的类型该怎么办？你也必须改变存储器的返回类型。你在无数地方使用了这个返回值，因此你必须全部更改这些代码。我希望限制修改单个类的所带来的影响，而不是波及到整个程序。\n\n　　既然存储器违反了封装原则，你就有理由主张一个过度滥用存储器的系统不符合面向对象思想。如果你不只是为了写代码而是认真检查设计流程，你能完全摒弃存储器，这个流程至关重要。我会在后文更详尽的阐述这个问题。\n\n　　减少getter/setter方法不意味着某些数据讲不能在系统中流动。尽管如此，数据流动还是越少越好。据我的经验系统可维护性是与数据在两个对象间交互的数量成反比的。经管你可能不知道，但是你可以消除绝大多数的数据移动。\n　　\n　　通过细致的设计并且着眼于你应该干什么而不是你怎么干，你可以消除绝大的多数的getter/setter方法。不要去请求完成工作需要的信息，而是让持有相关信息的对象去完成工作。大多数存储器提供了访问代码的手段因为设计者没有认真思考动态模型：为了完成工作所需要互相发送的动态对象和消息。他们的设计工作错误的由设计类的层级（类图）开始，然后试图把那些类强塞进动态模型。这种方式从来不能奏效。要设计一个静态模型，你需要发现类与类直接按的关联，这些关联完全与信息流相符合。一个联系存在与两个类之间，当且仅当有一个类的对象向其他类的对象发送了消息。静态模型的主要目的就是为你的动态模型捕捉这些关联。\n\n　　没有一个清晰的动态模型的定义，你只能猜想你会怎么使用一个类的对象。因此，存储方法会被大量绑定到模型上，你必须提供经可能多的存储方法因为你根本不能预测是否会用到他们。这类设计完全靠猜的策略是效率低下的。你把时间浪费在了写无用的方法上（或者给类加了不必要的能力）。\n\n　　存储器也是习惯思维的产物。当面向过程的程序员门接触到了Java，他们试图开始构建相似的代码。面向过程语言没有类，但他们有C结构体（struct,你可以把他看做没有方法的类）。然后理所当然地开始模仿设计结构体的方式去设计一个类，这个类除了公有成员没有其他的东西。这些面向过程的程序员们在其他一些地方知道了成员应该是私有的，然后他们把成员改成了私有并且提供了共有的存储方法。其实他们只是让共有调用变得复杂，而并没有让系统变得面向对象。\n\n## 绘制自己\n\n　　全字段封装的一个分支存在于UI构造器中。如果你不能使用存储器，你就不能在一个UI构造类中调用`getAttribute()`方法。取而代之的是类会提供一个drawYourself(…)方法。\n　　\n　　`getIdentity()`方法当然也能工作，假如他实现了Identity接口返回一个对象。这个接口必须包含`drawYourself()`方法（或者**give-me-a-Component-that-represents-your-identity**）。虽然`getIdentity`用“get”开头，但是他不是一个存储器因为他没有返回一个字段。他返回一个包含适当行为的复杂对象。甚至当我获得了一个Identity对象，我仍然不知道identity内部的细节。\n\n　　当然，`drawYourself()`策略意味着我把UI代码放入了业务逻辑。考虑下当UI表现发生变化时会发生什么事情。假设我想让一个属性以完全不同的方式来呈现，今天identity是一个名字，明天是一个名字和id，后天是一个名字、id和一张图。我把这些代码改动带来的影响限制在了一个地方。如果我有一个**give-me-a-Component-that-represents-your-identity**类，我已经将identity的表现与系统的其余部分隔离了开来。\n\n　　牢记一点，我没有把任何代码放入业务逻辑。我依据AWT或Swing框架编写UI层。这些UI代码是AWT/Swing的实现。使用抽象层来将其与子系统的业务逻辑隔离开是核心所在。我可以在不改任何代码的情况下轻松的接驳到其他绘图环境，唯一的问题是代码稍显杂乱。你可以将代码移到内部类中来相处这个问题（或者使用Facade设计模式）\n\n## JavaBeans\n\n　　你可能会反对说：“那么JavaBeans怎么办？” 怎么办？你完全可以不使用getters和setter来构造JavaBeans。BeanCustomizer,BeanInfo, 和 BeanDescriptor类都是为了这个目的而存在的。JavaBeans规范设计师们将getter/setter风格放入了规范因为他们认为当你已经学会了什么才是正确的时候，getter/setter可以让人们更容易的构造一个bean。很遗憾，没人去这样做。\n\n　　存储器仅仅是被创建来作为标记特定属性的标签之用，因为类似UI生成器之类的需要标识他们。你不被建议去自己调用这些方法。他们是为自动工具的调用准备的。这工具使用在Class类中的内省API来找到方法并且更具方法名来推断指定属性是否存在。在实践中基于内省的风格没有奏效。它反而是的代码更复杂更面向过程化。不理解数据抽象的程序员调用存储器必然导致，代码很难维护。基于这个原因，元数据特性会被包含进Java1.5。你将不必再这样变现:\n\n\tprivate int property;\n\tpublic int getProperty  (　　 ){ return property; }\n\tpublic void setProperty (int value}{ property = value; }\n\t\n将来可以这样\n\n\tprivate @property int property;\n\t\n类似于UI构造工具将使用内审API直接找到元素而不先通过测试方法名再去判断元素是否存在。因此，在有没有运行时存储器来破坏你的代码了。\n\n## 何时存储器是有用的？\n　　首先，在讨论之初我说就过如果某个存储器方法返回的是以接口为单位的实例（这个接口是被当前对象实现的）那么这个存储器就是有效的，因为接口隔离了实现类内部的倪安东。这类的方法（返回一个接口引用）不是一个普通意义上提供直接操作字段功能的“getter”方法。如果你改变了提供者的内部实现，你只要改变返回对象的定义就能适应这些变化。你依然保护了那些通过对象接口来访问的外部代码。\n\n　　其次，我认为所有的OO系统都有一个面向过程分界层。绝大多数OO程序运行在面向过程的操作系统只上并且与面向过程的数据库通讯。这些外部过程化子系统的接口是通用性质的。Java Database Connectivity(JDBC)设计者并不知道你为何目的使用数据库，所以数据库类必须设计的通用和高度灵活。一般来说，不必要的灵活性是有害的，但是对于这些API来说过度的灵活性是不可避免的。这些边界类被简单的使用存储方法加载因为设计者别无选择。\n\n　　事实上，设计者不知道用户如何调用的问题充斥着整个Java包。如果你不能预测你将如何使用类对象那么淘汰所有存储器就是困难的。受制于此，Java设计者已经做了一切他们能做的去隐藏实现。这并不是说你的代码也应该采用jdbc的设计风格。绝不应该！我们一定知道我们的类是如何被使用的，所以我们不用浪费时间去创建不必要的灵活性。\n\n## 一个设计策略\n\n　　 所以我们怎么抛弃getter和setter呢？\n\n　　 以用例为中心的OO设计过程:用户执行的有输出结果的特定任务。（登录不是一个用例因为它在问题域中缺少有用的结果输出。所以绘制一个账单是一个用例。）一个面向对象的系统实现了创建包含用例的各种场景所需的活动。实现用例的运行时对象通过向另一个对象发送消息来完成工作。当然，不是所有的消息都是等价的。如果你只是简单的构建了一个使用对象和类的面向过程的程序，那么你就不很难完成所有工作。\n\n　　1989年，Kent Beck 和 Ward Cunningharn在教授面向对象的设计课程时，曾对改变过度依赖get/set的心理做了如下的阐述：\n\n\t在教授面向对象的程序设计时最困难的是让学习者放弃那些在面向过程程序中司空见惯的全局信息获取，转而依赖类本身的信息去完成他们的任务。新手的设计充斥着全局思维：非理由的全局变量、不必要的指针以及在实现过程中对其他类不恰当的依赖。\n\n　　Cunningham发展了一套能够很好展示设计过程的教学方法:CRC卡片（类，职责，协作）。最基本的做法是做一套4x6规格的索引卡片，用来展示三个方面：\n\n* 类：类对象的名字\n* 职责：那些类可以做什么。这些职责应该专注于一个特定技术范围内\n* 协作：可与当前类对象通讯的其他类对象。这里的东西越少越好\n   \n　　CRC卡片最初的构想是基于一个假设——事情总会发生变化。\n\n　　Beck和Cunningham然后挑选一个用例，然后决定哪些对象会被要求执行这个用例做出最全面的假设。他们通常从两个类开始着手，不断的添加其他类用以实现用例。他们从班上挑选一些人来代表那些对象并发给他们一张相关的CRC卡片。如果他们需要一些给定的类对象，那么一些学生会被挑选来代表那些对象。\n\n　　然后这个班级开始根据以下规则实现用例：\n\n* 通过与其他人的沟通来完成用例包含的动作。\n* 你只能与你的协作对象进行交流。如果你必须和其他人交流，你应该交由一个能与那人交流的协作对象去完成，如果依然不行，你必须在你的CRC卡片上添加一个协作这。\n* 你不能去直接获取用来完成工作的信息。取而代之的，你必须请求拥有这些信息的对象去完成这个工作。把完成任务必须的信息传递给协作者是可以的，但是请把这些互动保持在最低限度。\n* 如果一些事情必须完成但是又没人能完成，那么创建一个新类和CRC卡片或者在已有的类和CRC卡片中添加一个职责。\n* 如果卡片写的太满，你必须创建其他的类和CRC卡片去分担一些指着。类的复杂度被4x6卡片的容量所限制。\n　　\n　　整个交流的记录就是程序的动态模型。最终完成的CRC卡片就是静态模型。通过不断的尝试和实践你可以使用这个方法解决任何问题。\n\n　　我刚刚描述的这个过程就是面向对象设计过程，尽管为适应课堂教学做了简化。一些人使用CRC卡片设计真实的程序。然而，更多的时候，设计者使用统一建模语言（UML）设计动态和静态模型。OO系统的要点是对象的通讯。如果你仔细思考，get/set方法在通讯过程是不需要的。同样的，在你开始编码之前，如果你以这种方式设计，get / set方法将不会出现在你的代码中。\n\n## 总结\n　　让我们总结一下：除非逼不得已你应该避免使用存储器因为这些方法暴露了类是如何实现的信息，从而导致你的代码变得难以维护。有时get/set方法不可避免，但是根据面向对象设计经验去掉你现在代码中99%的get/set方法是没有困难的。\n\n　　getter/setter方法往往会在代码中起到作用因为编写者使用过程思维来思考问题的，摆脱这种过程思维的最好方法是设想定义明确职责的对象之间的对话。Cunningham的CRC卡片方法是一个伟大的入门手段。","source":"_posts/why-getter-and-setter-methods-are-evil.md","raw":"---\ntitle: 为什么getter和setter方法是魔鬼 \ndate: 2017-01-10 15:19:24\ntags:\n  - Java\n  - 翻译\n  - 存储器\n  - getter\n  - setter\ncategories: Java\n\n---\n# 为什么getter和setter方法是魔鬼\n**_通过避免使用存储器来使你的代码变得更易维护_**\n\n**[原文地址](http://www.javaworld.com/article/2073723/core-java/why-getter-and-setter-methods-are-evil.html)**\n\n## 前言\n\n　　我没有打算开始一个“魔鬼的步伐”系列。但一些读者请我解释为什么我在上个月的专栏文章\"[Why extends Is Evil](http://www.javaworld.com/article/2073649/core-java/why-extends-is-evil.html)”中提到你应该避免使用get/set方法。\n\n　　尽管getter/setter方法在Java中是很常见的，但是他们不是特别符合面向对象的思想。事实上，他们会使你的代码变得难易维护。此外，大量getter和setter方法的出现是一个危险信号，它意味着你的程序不能被很好的符合OO思想。\n\n　　这篇文章解释了为什么你不应该使用getters和setters方法（在你能用他们的时候），并且提出一个可以帮助你跳出getter/setter误区的设计思想。\n\n## 设计的本质\n\n　　在我开始一个具有有争议标题的技术专栏前，我想澄清一些事情。\n\n　　我被一些读者在\"[Why extends Is Evil](http://www.javaworld.com/article/2073649/core-java/why-extends-is-evil.html)”一文下的评论给震惊了。一些人相信我宣称面向对象不是朴素的因为extents有问题，好像这两个论点是等价的。那绝对不是我想说的，所以我要澄清一些元问题（meta-issues）。\n<!--more-->\n　　这个专栏和过去几个月的文章都在讨论设计。设计从本质上来说以一种权衡。每一个选择都有其两面性，你需要在既定标准中做出决定。好和坏不是绝对的，一个好的决定一旦换了个环境就未必如此了。\n   \n　　如果你不能理解问题的两面性，你就不能做出一个明智的选择。事实上，如果你不理解每个行动会带来的所有后果，你就完全不能进行设计。你在黑暗中蹒跚前行。在“四人帮”的《设计模式》一书中每一章节都包含“Consequences”一小结用来说明哪些情况不适用当前模式，这绝不仅仅是一种偶然。\n\n　　阐述某些语言的特性或普遍的程序设计风格（比如存取方法）有问题不等于说你决不能在任何情况下使用他们。同样的，一个特性或风格被普遍使用不意味着你也可以使用它。那些不明就里的写了许多程序并且受雇于Sun或者微软的不明就里的程序员不能魔法般的提高程序开发和设计的能力。JAVA开发包中包含了很多伟大的代码。但是同样有一部分代码我确定是他们的作者羞于承认的。\n   \n　　出于同样的原因，营销或者政治动机经常推动着设计风格。有时候程序要做了错误的决定但是企业为了宣传他们的技术多牛B，所以他们前调你现在用的方法是不太理想的。当你仅仅是因为“这事你们应该这么干”而草率的接受了某些程序实践，那么你的行为是不负责任的。许多失败的EJB工程证明了这个原则。基于EJB的技术当你正确使用时是伟大的技术，但是当你滥用它的时候也能彻底的击倒一个企业。\n\n　　我的观点是你不能盲目的写程序。你必须理解一个特性或习惯所能造成的破坏。在这情况下，你会处于一个更有利的位置去决定是否需要使用这些特性或风格。你的选择会更合理更实用。这些文章的目的是帮助你用更开阔的视野去思考你的程序。\n\n## 数据抽象\n\n　　面向对象系统一个基本的原则是不要暴露任何实现细节。这样你可以修改你的实现而不改动用户代码。所以在面向对象系统中你应该避免getter和setter方法因为他们通常会保留实现细节。\n　　\n　　让我们来看为什么，假设在你的程序中有1000次的getX()方法的调用，每一个调用都假设了一个特定类型值的返回。你必须在本地变量中储层这个返回值，并且变量的类型必须和返回类型是相匹配的。如果你需要改变对象的实现从而导致X类型的改变，那么你就摊上大麻烦了。\n　　\n　　如果X曾是int型，但现在必须是long型，你会得到1000个编译错误。如果你只是简单的将返回值强制转换成int型，代码讲被编译通过，但未必能正常工作（返回值可能被截断）。为了这一个改动你必须逐一修改1000个调用。我肯定我不愿意去做这么多工作。\n　　\n　　面向对象系统的一个基本原则是数据抽象，你应该完全隐藏一个对象是如何处理从其他模块中获得的消息。这就是为什么你应该将所有实例对象(非常量)申明为private。\n   \n　　 如果你将一个成员申明为public,那么无论类发生了什么变化这个变量都不能被改变，因为你会破坏外部代码对这个成员的使用。你不会愿意搜索1000处调用仅仅是因为你改动了那个类。\n   \n　　隐藏实现原则提供了一个快速的检验OO系统质量的测试方法：你能否把类改得面目全非，却不影响任何用户的使用？模块化的匪类是面向对象的前提，它使得程序更易维护。没有实现的隐藏其他OO特性也就无从谈起。\n　　\n　　Getter和Setter方法（也被称为存储器）和公有成员变量都是危险的。他们暴露了实现细节。如果你要改变被访问字段的类型该怎么办？你也必须改变存储器的返回类型。你在无数地方使用了这个返回值，因此你必须全部更改这些代码。我希望限制修改单个类的所带来的影响，而不是波及到整个程序。\n\n　　既然存储器违反了封装原则，你就有理由主张一个过度滥用存储器的系统不符合面向对象思想。如果你不只是为了写代码而是认真检查设计流程，你能完全摒弃存储器，这个流程至关重要。我会在后文更详尽的阐述这个问题。\n\n　　减少getter/setter方法不意味着某些数据讲不能在系统中流动。尽管如此，数据流动还是越少越好。据我的经验系统可维护性是与数据在两个对象间交互的数量成反比的。经管你可能不知道，但是你可以消除绝大多数的数据移动。\n　　\n　　通过细致的设计并且着眼于你应该干什么而不是你怎么干，你可以消除绝大的多数的getter/setter方法。不要去请求完成工作需要的信息，而是让持有相关信息的对象去完成工作。大多数存储器提供了访问代码的手段因为设计者没有认真思考动态模型：为了完成工作所需要互相发送的动态对象和消息。他们的设计工作错误的由设计类的层级（类图）开始，然后试图把那些类强塞进动态模型。这种方式从来不能奏效。要设计一个静态模型，你需要发现类与类直接按的关联，这些关联完全与信息流相符合。一个联系存在与两个类之间，当且仅当有一个类的对象向其他类的对象发送了消息。静态模型的主要目的就是为你的动态模型捕捉这些关联。\n\n　　没有一个清晰的动态模型的定义，你只能猜想你会怎么使用一个类的对象。因此，存储方法会被大量绑定到模型上，你必须提供经可能多的存储方法因为你根本不能预测是否会用到他们。这类设计完全靠猜的策略是效率低下的。你把时间浪费在了写无用的方法上（或者给类加了不必要的能力）。\n\n　　存储器也是习惯思维的产物。当面向过程的程序员门接触到了Java，他们试图开始构建相似的代码。面向过程语言没有类，但他们有C结构体（struct,你可以把他看做没有方法的类）。然后理所当然地开始模仿设计结构体的方式去设计一个类，这个类除了公有成员没有其他的东西。这些面向过程的程序员们在其他一些地方知道了成员应该是私有的，然后他们把成员改成了私有并且提供了共有的存储方法。其实他们只是让共有调用变得复杂，而并没有让系统变得面向对象。\n\n## 绘制自己\n\n　　全字段封装的一个分支存在于UI构造器中。如果你不能使用存储器，你就不能在一个UI构造类中调用`getAttribute()`方法。取而代之的是类会提供一个drawYourself(…)方法。\n　　\n　　`getIdentity()`方法当然也能工作，假如他实现了Identity接口返回一个对象。这个接口必须包含`drawYourself()`方法（或者**give-me-a-Component-that-represents-your-identity**）。虽然`getIdentity`用“get”开头，但是他不是一个存储器因为他没有返回一个字段。他返回一个包含适当行为的复杂对象。甚至当我获得了一个Identity对象，我仍然不知道identity内部的细节。\n\n　　当然，`drawYourself()`策略意味着我把UI代码放入了业务逻辑。考虑下当UI表现发生变化时会发生什么事情。假设我想让一个属性以完全不同的方式来呈现，今天identity是一个名字，明天是一个名字和id，后天是一个名字、id和一张图。我把这些代码改动带来的影响限制在了一个地方。如果我有一个**give-me-a-Component-that-represents-your-identity**类，我已经将identity的表现与系统的其余部分隔离了开来。\n\n　　牢记一点，我没有把任何代码放入业务逻辑。我依据AWT或Swing框架编写UI层。这些UI代码是AWT/Swing的实现。使用抽象层来将其与子系统的业务逻辑隔离开是核心所在。我可以在不改任何代码的情况下轻松的接驳到其他绘图环境，唯一的问题是代码稍显杂乱。你可以将代码移到内部类中来相处这个问题（或者使用Facade设计模式）\n\n## JavaBeans\n\n　　你可能会反对说：“那么JavaBeans怎么办？” 怎么办？你完全可以不使用getters和setter来构造JavaBeans。BeanCustomizer,BeanInfo, 和 BeanDescriptor类都是为了这个目的而存在的。JavaBeans规范设计师们将getter/setter风格放入了规范因为他们认为当你已经学会了什么才是正确的时候，getter/setter可以让人们更容易的构造一个bean。很遗憾，没人去这样做。\n\n　　存储器仅仅是被创建来作为标记特定属性的标签之用，因为类似UI生成器之类的需要标识他们。你不被建议去自己调用这些方法。他们是为自动工具的调用准备的。这工具使用在Class类中的内省API来找到方法并且更具方法名来推断指定属性是否存在。在实践中基于内省的风格没有奏效。它反而是的代码更复杂更面向过程化。不理解数据抽象的程序员调用存储器必然导致，代码很难维护。基于这个原因，元数据特性会被包含进Java1.5。你将不必再这样变现:\n\n\tprivate int property;\n\tpublic int getProperty  (　　 ){ return property; }\n\tpublic void setProperty (int value}{ property = value; }\n\t\n将来可以这样\n\n\tprivate @property int property;\n\t\n类似于UI构造工具将使用内审API直接找到元素而不先通过测试方法名再去判断元素是否存在。因此，在有没有运行时存储器来破坏你的代码了。\n\n## 何时存储器是有用的？\n　　首先，在讨论之初我说就过如果某个存储器方法返回的是以接口为单位的实例（这个接口是被当前对象实现的）那么这个存储器就是有效的，因为接口隔离了实现类内部的倪安东。这类的方法（返回一个接口引用）不是一个普通意义上提供直接操作字段功能的“getter”方法。如果你改变了提供者的内部实现，你只要改变返回对象的定义就能适应这些变化。你依然保护了那些通过对象接口来访问的外部代码。\n\n　　其次，我认为所有的OO系统都有一个面向过程分界层。绝大多数OO程序运行在面向过程的操作系统只上并且与面向过程的数据库通讯。这些外部过程化子系统的接口是通用性质的。Java Database Connectivity(JDBC)设计者并不知道你为何目的使用数据库，所以数据库类必须设计的通用和高度灵活。一般来说，不必要的灵活性是有害的，但是对于这些API来说过度的灵活性是不可避免的。这些边界类被简单的使用存储方法加载因为设计者别无选择。\n\n　　事实上，设计者不知道用户如何调用的问题充斥着整个Java包。如果你不能预测你将如何使用类对象那么淘汰所有存储器就是困难的。受制于此，Java设计者已经做了一切他们能做的去隐藏实现。这并不是说你的代码也应该采用jdbc的设计风格。绝不应该！我们一定知道我们的类是如何被使用的，所以我们不用浪费时间去创建不必要的灵活性。\n\n## 一个设计策略\n\n　　 所以我们怎么抛弃getter和setter呢？\n\n　　 以用例为中心的OO设计过程:用户执行的有输出结果的特定任务。（登录不是一个用例因为它在问题域中缺少有用的结果输出。所以绘制一个账单是一个用例。）一个面向对象的系统实现了创建包含用例的各种场景所需的活动。实现用例的运行时对象通过向另一个对象发送消息来完成工作。当然，不是所有的消息都是等价的。如果你只是简单的构建了一个使用对象和类的面向过程的程序，那么你就不很难完成所有工作。\n\n　　1989年，Kent Beck 和 Ward Cunningharn在教授面向对象的设计课程时，曾对改变过度依赖get/set的心理做了如下的阐述：\n\n\t在教授面向对象的程序设计时最困难的是让学习者放弃那些在面向过程程序中司空见惯的全局信息获取，转而依赖类本身的信息去完成他们的任务。新手的设计充斥着全局思维：非理由的全局变量、不必要的指针以及在实现过程中对其他类不恰当的依赖。\n\n　　Cunningham发展了一套能够很好展示设计过程的教学方法:CRC卡片（类，职责，协作）。最基本的做法是做一套4x6规格的索引卡片，用来展示三个方面：\n\n* 类：类对象的名字\n* 职责：那些类可以做什么。这些职责应该专注于一个特定技术范围内\n* 协作：可与当前类对象通讯的其他类对象。这里的东西越少越好\n   \n　　CRC卡片最初的构想是基于一个假设——事情总会发生变化。\n\n　　Beck和Cunningham然后挑选一个用例，然后决定哪些对象会被要求执行这个用例做出最全面的假设。他们通常从两个类开始着手，不断的添加其他类用以实现用例。他们从班上挑选一些人来代表那些对象并发给他们一张相关的CRC卡片。如果他们需要一些给定的类对象，那么一些学生会被挑选来代表那些对象。\n\n　　然后这个班级开始根据以下规则实现用例：\n\n* 通过与其他人的沟通来完成用例包含的动作。\n* 你只能与你的协作对象进行交流。如果你必须和其他人交流，你应该交由一个能与那人交流的协作对象去完成，如果依然不行，你必须在你的CRC卡片上添加一个协作这。\n* 你不能去直接获取用来完成工作的信息。取而代之的，你必须请求拥有这些信息的对象去完成这个工作。把完成任务必须的信息传递给协作者是可以的，但是请把这些互动保持在最低限度。\n* 如果一些事情必须完成但是又没人能完成，那么创建一个新类和CRC卡片或者在已有的类和CRC卡片中添加一个职责。\n* 如果卡片写的太满，你必须创建其他的类和CRC卡片去分担一些指着。类的复杂度被4x6卡片的容量所限制。\n　　\n　　整个交流的记录就是程序的动态模型。最终完成的CRC卡片就是静态模型。通过不断的尝试和实践你可以使用这个方法解决任何问题。\n\n　　我刚刚描述的这个过程就是面向对象设计过程，尽管为适应课堂教学做了简化。一些人使用CRC卡片设计真实的程序。然而，更多的时候，设计者使用统一建模语言（UML）设计动态和静态模型。OO系统的要点是对象的通讯。如果你仔细思考，get/set方法在通讯过程是不需要的。同样的，在你开始编码之前，如果你以这种方式设计，get / set方法将不会出现在你的代码中。\n\n## 总结\n　　让我们总结一下：除非逼不得已你应该避免使用存储器因为这些方法暴露了类是如何实现的信息，从而导致你的代码变得难以维护。有时get/set方法不可避免，但是根据面向对象设计经验去掉你现在代码中99%的get/set方法是没有困难的。\n\n　　getter/setter方法往往会在代码中起到作用因为编写者使用过程思维来思考问题的，摆脱这种过程思维的最好方法是设想定义明确职责的对象之间的对话。Cunningham的CRC卡片方法是一个伟大的入门手段。","slug":"why-getter-and-setter-methods-are-evil","published":1,"updated":"2017-08-03T02:48:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5w0cugh000jij661mqy95by","content":"<h1 id=\"为什么getter和setter方法是魔鬼\"><a href=\"#为什么getter和setter方法是魔鬼\" class=\"headerlink\" title=\"为什么getter和setter方法是魔鬼\"></a>为什么getter和setter方法是魔鬼</h1><p><strong><em>通过避免使用存储器来使你的代码变得更易维护</em></strong></p>\n<p><strong><a href=\"http://www.javaworld.com/article/2073723/core-java/why-getter-and-setter-methods-are-evil.html\" target=\"_blank\" rel=\"external\">原文地址</a></strong></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>　　我没有打算开始一个“魔鬼的步伐”系列。但一些读者请我解释为什么我在上个月的专栏文章”<a href=\"http://www.javaworld.com/article/2073649/core-java/why-extends-is-evil.html\" target=\"_blank\" rel=\"external\">Why extends Is Evil</a>”中提到你应该避免使用get/set方法。</p>\n<p>　　尽管getter/setter方法在Java中是很常见的，但是他们不是特别符合面向对象的思想。事实上，他们会使你的代码变得难易维护。此外，大量getter和setter方法的出现是一个危险信号，它意味着你的程序不能被很好的符合OO思想。</p>\n<p>　　这篇文章解释了为什么你不应该使用getters和setters方法（在你能用他们的时候），并且提出一个可以帮助你跳出getter/setter误区的设计思想。</p>\n<h2 id=\"设计的本质\"><a href=\"#设计的本质\" class=\"headerlink\" title=\"设计的本质\"></a>设计的本质</h2><p>　　在我开始一个具有有争议标题的技术专栏前，我想澄清一些事情。</p>\n<p>　　我被一些读者在”<a href=\"http://www.javaworld.com/article/2073649/core-java/why-extends-is-evil.html\" target=\"_blank\" rel=\"external\">Why extends Is Evil</a>”一文下的评论给震惊了。一些人相信我宣称面向对象不是朴素的因为extents有问题，好像这两个论点是等价的。那绝对不是我想说的，所以我要澄清一些元问题（meta-issues）。<br><a id=\"more\"></a><br>　　这个专栏和过去几个月的文章都在讨论设计。设计从本质上来说以一种权衡。每一个选择都有其两面性，你需要在既定标准中做出决定。好和坏不是绝对的，一个好的决定一旦换了个环境就未必如此了。</p>\n<p>　　如果你不能理解问题的两面性，你就不能做出一个明智的选择。事实上，如果你不理解每个行动会带来的所有后果，你就完全不能进行设计。你在黑暗中蹒跚前行。在“四人帮”的《设计模式》一书中每一章节都包含“Consequences”一小结用来说明哪些情况不适用当前模式，这绝不仅仅是一种偶然。</p>\n<p>　　阐述某些语言的特性或普遍的程序设计风格（比如存取方法）有问题不等于说你决不能在任何情况下使用他们。同样的，一个特性或风格被普遍使用不意味着你也可以使用它。那些不明就里的写了许多程序并且受雇于Sun或者微软的不明就里的程序员不能魔法般的提高程序开发和设计的能力。JAVA开发包中包含了很多伟大的代码。但是同样有一部分代码我确定是他们的作者羞于承认的。</p>\n<p>　　出于同样的原因，营销或者政治动机经常推动着设计风格。有时候程序要做了错误的决定但是企业为了宣传他们的技术多牛B，所以他们前调你现在用的方法是不太理想的。当你仅仅是因为“这事你们应该这么干”而草率的接受了某些程序实践，那么你的行为是不负责任的。许多失败的EJB工程证明了这个原则。基于EJB的技术当你正确使用时是伟大的技术，但是当你滥用它的时候也能彻底的击倒一个企业。</p>\n<p>　　我的观点是你不能盲目的写程序。你必须理解一个特性或习惯所能造成的破坏。在这情况下，你会处于一个更有利的位置去决定是否需要使用这些特性或风格。你的选择会更合理更实用。这些文章的目的是帮助你用更开阔的视野去思考你的程序。</p>\n<h2 id=\"数据抽象\"><a href=\"#数据抽象\" class=\"headerlink\" title=\"数据抽象\"></a>数据抽象</h2><p>　　面向对象系统一个基本的原则是不要暴露任何实现细节。这样你可以修改你的实现而不改动用户代码。所以在面向对象系统中你应该避免getter和setter方法因为他们通常会保留实现细节。<br>　　<br>　　让我们来看为什么，假设在你的程序中有1000次的getX()方法的调用，每一个调用都假设了一个特定类型值的返回。你必须在本地变量中储层这个返回值，并且变量的类型必须和返回类型是相匹配的。如果你需要改变对象的实现从而导致X类型的改变，那么你就摊上大麻烦了。<br>　　<br>　　如果X曾是int型，但现在必须是long型，你会得到1000个编译错误。如果你只是简单的将返回值强制转换成int型，代码讲被编译通过，但未必能正常工作（返回值可能被截断）。为了这一个改动你必须逐一修改1000个调用。我肯定我不愿意去做这么多工作。<br>　　<br>　　面向对象系统的一个基本原则是数据抽象，你应该完全隐藏一个对象是如何处理从其他模块中获得的消息。这就是为什么你应该将所有实例对象(非常量)申明为private。</p>\n<p>　　 如果你将一个成员申明为public,那么无论类发生了什么变化这个变量都不能被改变，因为你会破坏外部代码对这个成员的使用。你不会愿意搜索1000处调用仅仅是因为你改动了那个类。</p>\n<p>　　隐藏实现原则提供了一个快速的检验OO系统质量的测试方法：你能否把类改得面目全非，却不影响任何用户的使用？模块化的匪类是面向对象的前提，它使得程序更易维护。没有实现的隐藏其他OO特性也就无从谈起。<br>　　<br>　　Getter和Setter方法（也被称为存储器）和公有成员变量都是危险的。他们暴露了实现细节。如果你要改变被访问字段的类型该怎么办？你也必须改变存储器的返回类型。你在无数地方使用了这个返回值，因此你必须全部更改这些代码。我希望限制修改单个类的所带来的影响，而不是波及到整个程序。</p>\n<p>　　既然存储器违反了封装原则，你就有理由主张一个过度滥用存储器的系统不符合面向对象思想。如果你不只是为了写代码而是认真检查设计流程，你能完全摒弃存储器，这个流程至关重要。我会在后文更详尽的阐述这个问题。</p>\n<p>　　减少getter/setter方法不意味着某些数据讲不能在系统中流动。尽管如此，数据流动还是越少越好。据我的经验系统可维护性是与数据在两个对象间交互的数量成反比的。经管你可能不知道，但是你可以消除绝大多数的数据移动。<br>　　<br>　　通过细致的设计并且着眼于你应该干什么而不是你怎么干，你可以消除绝大的多数的getter/setter方法。不要去请求完成工作需要的信息，而是让持有相关信息的对象去完成工作。大多数存储器提供了访问代码的手段因为设计者没有认真思考动态模型：为了完成工作所需要互相发送的动态对象和消息。他们的设计工作错误的由设计类的层级（类图）开始，然后试图把那些类强塞进动态模型。这种方式从来不能奏效。要设计一个静态模型，你需要发现类与类直接按的关联，这些关联完全与信息流相符合。一个联系存在与两个类之间，当且仅当有一个类的对象向其他类的对象发送了消息。静态模型的主要目的就是为你的动态模型捕捉这些关联。</p>\n<p>　　没有一个清晰的动态模型的定义，你只能猜想你会怎么使用一个类的对象。因此，存储方法会被大量绑定到模型上，你必须提供经可能多的存储方法因为你根本不能预测是否会用到他们。这类设计完全靠猜的策略是效率低下的。你把时间浪费在了写无用的方法上（或者给类加了不必要的能力）。</p>\n<p>　　存储器也是习惯思维的产物。当面向过程的程序员门接触到了Java，他们试图开始构建相似的代码。面向过程语言没有类，但他们有C结构体（struct,你可以把他看做没有方法的类）。然后理所当然地开始模仿设计结构体的方式去设计一个类，这个类除了公有成员没有其他的东西。这些面向过程的程序员们在其他一些地方知道了成员应该是私有的，然后他们把成员改成了私有并且提供了共有的存储方法。其实他们只是让共有调用变得复杂，而并没有让系统变得面向对象。</p>\n<h2 id=\"绘制自己\"><a href=\"#绘制自己\" class=\"headerlink\" title=\"绘制自己\"></a>绘制自己</h2><p>　　全字段封装的一个分支存在于UI构造器中。如果你不能使用存储器，你就不能在一个UI构造类中调用<code>getAttribute()</code>方法。取而代之的是类会提供一个drawYourself(…)方法。<br>　　<br>　　<code>getIdentity()</code>方法当然也能工作，假如他实现了Identity接口返回一个对象。这个接口必须包含<code>drawYourself()</code>方法（或者<strong>give-me-a-Component-that-represents-your-identity</strong>）。虽然<code>getIdentity</code>用“get”开头，但是他不是一个存储器因为他没有返回一个字段。他返回一个包含适当行为的复杂对象。甚至当我获得了一个Identity对象，我仍然不知道identity内部的细节。</p>\n<p>　　当然，<code>drawYourself()</code>策略意味着我把UI代码放入了业务逻辑。考虑下当UI表现发生变化时会发生什么事情。假设我想让一个属性以完全不同的方式来呈现，今天identity是一个名字，明天是一个名字和id，后天是一个名字、id和一张图。我把这些代码改动带来的影响限制在了一个地方。如果我有一个<strong>give-me-a-Component-that-represents-your-identity</strong>类，我已经将identity的表现与系统的其余部分隔离了开来。</p>\n<p>　　牢记一点，我没有把任何代码放入业务逻辑。我依据AWT或Swing框架编写UI层。这些UI代码是AWT/Swing的实现。使用抽象层来将其与子系统的业务逻辑隔离开是核心所在。我可以在不改任何代码的情况下轻松的接驳到其他绘图环境，唯一的问题是代码稍显杂乱。你可以将代码移到内部类中来相处这个问题（或者使用Facade设计模式）</p>\n<h2 id=\"JavaBeans\"><a href=\"#JavaBeans\" class=\"headerlink\" title=\"JavaBeans\"></a>JavaBeans</h2><p>　　你可能会反对说：“那么JavaBeans怎么办？” 怎么办？你完全可以不使用getters和setter来构造JavaBeans。BeanCustomizer,BeanInfo, 和 BeanDescriptor类都是为了这个目的而存在的。JavaBeans规范设计师们将getter/setter风格放入了规范因为他们认为当你已经学会了什么才是正确的时候，getter/setter可以让人们更容易的构造一个bean。很遗憾，没人去这样做。</p>\n<p>　　存储器仅仅是被创建来作为标记特定属性的标签之用，因为类似UI生成器之类的需要标识他们。你不被建议去自己调用这些方法。他们是为自动工具的调用准备的。这工具使用在Class类中的内省API来找到方法并且更具方法名来推断指定属性是否存在。在实践中基于内省的风格没有奏效。它反而是的代码更复杂更面向过程化。不理解数据抽象的程序员调用存储器必然导致，代码很难维护。基于这个原因，元数据特性会被包含进Java1.5。你将不必再这样变现:</p>\n<pre><code>private int property;\npublic int getProperty  (　　 ){ return property; }\npublic void setProperty (int value}{ property = value; }\n</code></pre><p>将来可以这样</p>\n<pre><code>private @property int property;\n</code></pre><p>类似于UI构造工具将使用内审API直接找到元素而不先通过测试方法名再去判断元素是否存在。因此，在有没有运行时存储器来破坏你的代码了。</p>\n<h2 id=\"何时存储器是有用的？\"><a href=\"#何时存储器是有用的？\" class=\"headerlink\" title=\"何时存储器是有用的？\"></a>何时存储器是有用的？</h2><p>　　首先，在讨论之初我说就过如果某个存储器方法返回的是以接口为单位的实例（这个接口是被当前对象实现的）那么这个存储器就是有效的，因为接口隔离了实现类内部的倪安东。这类的方法（返回一个接口引用）不是一个普通意义上提供直接操作字段功能的“getter”方法。如果你改变了提供者的内部实现，你只要改变返回对象的定义就能适应这些变化。你依然保护了那些通过对象接口来访问的外部代码。</p>\n<p>　　其次，我认为所有的OO系统都有一个面向过程分界层。绝大多数OO程序运行在面向过程的操作系统只上并且与面向过程的数据库通讯。这些外部过程化子系统的接口是通用性质的。Java Database Connectivity(JDBC)设计者并不知道你为何目的使用数据库，所以数据库类必须设计的通用和高度灵活。一般来说，不必要的灵活性是有害的，但是对于这些API来说过度的灵活性是不可避免的。这些边界类被简单的使用存储方法加载因为设计者别无选择。</p>\n<p>　　事实上，设计者不知道用户如何调用的问题充斥着整个Java包。如果你不能预测你将如何使用类对象那么淘汰所有存储器就是困难的。受制于此，Java设计者已经做了一切他们能做的去隐藏实现。这并不是说你的代码也应该采用jdbc的设计风格。绝不应该！我们一定知道我们的类是如何被使用的，所以我们不用浪费时间去创建不必要的灵活性。</p>\n<h2 id=\"一个设计策略\"><a href=\"#一个设计策略\" class=\"headerlink\" title=\"一个设计策略\"></a>一个设计策略</h2><p>　　 所以我们怎么抛弃getter和setter呢？</p>\n<p>　　 以用例为中心的OO设计过程:用户执行的有输出结果的特定任务。（登录不是一个用例因为它在问题域中缺少有用的结果输出。所以绘制一个账单是一个用例。）一个面向对象的系统实现了创建包含用例的各种场景所需的活动。实现用例的运行时对象通过向另一个对象发送消息来完成工作。当然，不是所有的消息都是等价的。如果你只是简单的构建了一个使用对象和类的面向过程的程序，那么你就不很难完成所有工作。</p>\n<p>　　1989年，Kent Beck 和 Ward Cunningharn在教授面向对象的设计课程时，曾对改变过度依赖get/set的心理做了如下的阐述：</p>\n<pre><code>在教授面向对象的程序设计时最困难的是让学习者放弃那些在面向过程程序中司空见惯的全局信息获取，转而依赖类本身的信息去完成他们的任务。新手的设计充斥着全局思维：非理由的全局变量、不必要的指针以及在实现过程中对其他类不恰当的依赖。\n</code></pre><p>　　Cunningham发展了一套能够很好展示设计过程的教学方法:CRC卡片（类，职责，协作）。最基本的做法是做一套4x6规格的索引卡片，用来展示三个方面：</p>\n<ul>\n<li>类：类对象的名字</li>\n<li>职责：那些类可以做什么。这些职责应该专注于一个特定技术范围内</li>\n<li>协作：可与当前类对象通讯的其他类对象。这里的东西越少越好</li>\n</ul>\n<p>　　CRC卡片最初的构想是基于一个假设——事情总会发生变化。</p>\n<p>　　Beck和Cunningham然后挑选一个用例，然后决定哪些对象会被要求执行这个用例做出最全面的假设。他们通常从两个类开始着手，不断的添加其他类用以实现用例。他们从班上挑选一些人来代表那些对象并发给他们一张相关的CRC卡片。如果他们需要一些给定的类对象，那么一些学生会被挑选来代表那些对象。</p>\n<p>　　然后这个班级开始根据以下规则实现用例：</p>\n<ul>\n<li>通过与其他人的沟通来完成用例包含的动作。</li>\n<li>你只能与你的协作对象进行交流。如果你必须和其他人交流，你应该交由一个能与那人交流的协作对象去完成，如果依然不行，你必须在你的CRC卡片上添加一个协作这。</li>\n<li>你不能去直接获取用来完成工作的信息。取而代之的，你必须请求拥有这些信息的对象去完成这个工作。把完成任务必须的信息传递给协作者是可以的，但是请把这些互动保持在最低限度。</li>\n<li>如果一些事情必须完成但是又没人能完成，那么创建一个新类和CRC卡片或者在已有的类和CRC卡片中添加一个职责。</li>\n<li>如果卡片写的太满，你必须创建其他的类和CRC卡片去分担一些指着。类的复杂度被4x6卡片的容量所限制。<br>　　<br>　　整个交流的记录就是程序的动态模型。最终完成的CRC卡片就是静态模型。通过不断的尝试和实践你可以使用这个方法解决任何问题。</li>\n</ul>\n<p>　　我刚刚描述的这个过程就是面向对象设计过程，尽管为适应课堂教学做了简化。一些人使用CRC卡片设计真实的程序。然而，更多的时候，设计者使用统一建模语言（UML）设计动态和静态模型。OO系统的要点是对象的通讯。如果你仔细思考，get/set方法在通讯过程是不需要的。同样的，在你开始编码之前，如果你以这种方式设计，get / set方法将不会出现在你的代码中。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>　　让我们总结一下：除非逼不得已你应该避免使用存储器因为这些方法暴露了类是如何实现的信息，从而导致你的代码变得难以维护。有时get/set方法不可避免，但是根据面向对象设计经验去掉你现在代码中99%的get/set方法是没有困难的。</p>\n<p>　　getter/setter方法往往会在代码中起到作用因为编写者使用过程思维来思考问题的，摆脱这种过程思维的最好方法是设想定义明确职责的对象之间的对话。Cunningham的CRC卡片方法是一个伟大的入门手段。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"为什么getter和setter方法是魔鬼\"><a href=\"#为什么getter和setter方法是魔鬼\" class=\"headerlink\" title=\"为什么getter和setter方法是魔鬼\"></a>为什么getter和setter方法是魔鬼</h1><p><strong><em>通过避免使用存储器来使你的代码变得更易维护</em></strong></p>\n<p><strong><a href=\"http://www.javaworld.com/article/2073723/core-java/why-getter-and-setter-methods-are-evil.html\" target=\"_blank\" rel=\"external\">原文地址</a></strong></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>　　我没有打算开始一个“魔鬼的步伐”系列。但一些读者请我解释为什么我在上个月的专栏文章”<a href=\"http://www.javaworld.com/article/2073649/core-java/why-extends-is-evil.html\" target=\"_blank\" rel=\"external\">Why extends Is Evil</a>”中提到你应该避免使用get/set方法。</p>\n<p>　　尽管getter/setter方法在Java中是很常见的，但是他们不是特别符合面向对象的思想。事实上，他们会使你的代码变得难易维护。此外，大量getter和setter方法的出现是一个危险信号，它意味着你的程序不能被很好的符合OO思想。</p>\n<p>　　这篇文章解释了为什么你不应该使用getters和setters方法（在你能用他们的时候），并且提出一个可以帮助你跳出getter/setter误区的设计思想。</p>\n<h2 id=\"设计的本质\"><a href=\"#设计的本质\" class=\"headerlink\" title=\"设计的本质\"></a>设计的本质</h2><p>　　在我开始一个具有有争议标题的技术专栏前，我想澄清一些事情。</p>\n<p>　　我被一些读者在”<a href=\"http://www.javaworld.com/article/2073649/core-java/why-extends-is-evil.html\" target=\"_blank\" rel=\"external\">Why extends Is Evil</a>”一文下的评论给震惊了。一些人相信我宣称面向对象不是朴素的因为extents有问题，好像这两个论点是等价的。那绝对不是我想说的，所以我要澄清一些元问题（meta-issues）。<br></p>","more":"<br>　　这个专栏和过去几个月的文章都在讨论设计。设计从本质上来说以一种权衡。每一个选择都有其两面性，你需要在既定标准中做出决定。好和坏不是绝对的，一个好的决定一旦换了个环境就未必如此了。<p></p>\n<p>　　如果你不能理解问题的两面性，你就不能做出一个明智的选择。事实上，如果你不理解每个行动会带来的所有后果，你就完全不能进行设计。你在黑暗中蹒跚前行。在“四人帮”的《设计模式》一书中每一章节都包含“Consequences”一小结用来说明哪些情况不适用当前模式，这绝不仅仅是一种偶然。</p>\n<p>　　阐述某些语言的特性或普遍的程序设计风格（比如存取方法）有问题不等于说你决不能在任何情况下使用他们。同样的，一个特性或风格被普遍使用不意味着你也可以使用它。那些不明就里的写了许多程序并且受雇于Sun或者微软的不明就里的程序员不能魔法般的提高程序开发和设计的能力。JAVA开发包中包含了很多伟大的代码。但是同样有一部分代码我确定是他们的作者羞于承认的。</p>\n<p>　　出于同样的原因，营销或者政治动机经常推动着设计风格。有时候程序要做了错误的决定但是企业为了宣传他们的技术多牛B，所以他们前调你现在用的方法是不太理想的。当你仅仅是因为“这事你们应该这么干”而草率的接受了某些程序实践，那么你的行为是不负责任的。许多失败的EJB工程证明了这个原则。基于EJB的技术当你正确使用时是伟大的技术，但是当你滥用它的时候也能彻底的击倒一个企业。</p>\n<p>　　我的观点是你不能盲目的写程序。你必须理解一个特性或习惯所能造成的破坏。在这情况下，你会处于一个更有利的位置去决定是否需要使用这些特性或风格。你的选择会更合理更实用。这些文章的目的是帮助你用更开阔的视野去思考你的程序。</p>\n<h2 id=\"数据抽象\"><a href=\"#数据抽象\" class=\"headerlink\" title=\"数据抽象\"></a>数据抽象</h2><p>　　面向对象系统一个基本的原则是不要暴露任何实现细节。这样你可以修改你的实现而不改动用户代码。所以在面向对象系统中你应该避免getter和setter方法因为他们通常会保留实现细节。<br>　　<br>　　让我们来看为什么，假设在你的程序中有1000次的getX()方法的调用，每一个调用都假设了一个特定类型值的返回。你必须在本地变量中储层这个返回值，并且变量的类型必须和返回类型是相匹配的。如果你需要改变对象的实现从而导致X类型的改变，那么你就摊上大麻烦了。<br>　　<br>　　如果X曾是int型，但现在必须是long型，你会得到1000个编译错误。如果你只是简单的将返回值强制转换成int型，代码讲被编译通过，但未必能正常工作（返回值可能被截断）。为了这一个改动你必须逐一修改1000个调用。我肯定我不愿意去做这么多工作。<br>　　<br>　　面向对象系统的一个基本原则是数据抽象，你应该完全隐藏一个对象是如何处理从其他模块中获得的消息。这就是为什么你应该将所有实例对象(非常量)申明为private。</p>\n<p>　　 如果你将一个成员申明为public,那么无论类发生了什么变化这个变量都不能被改变，因为你会破坏外部代码对这个成员的使用。你不会愿意搜索1000处调用仅仅是因为你改动了那个类。</p>\n<p>　　隐藏实现原则提供了一个快速的检验OO系统质量的测试方法：你能否把类改得面目全非，却不影响任何用户的使用？模块化的匪类是面向对象的前提，它使得程序更易维护。没有实现的隐藏其他OO特性也就无从谈起。<br>　　<br>　　Getter和Setter方法（也被称为存储器）和公有成员变量都是危险的。他们暴露了实现细节。如果你要改变被访问字段的类型该怎么办？你也必须改变存储器的返回类型。你在无数地方使用了这个返回值，因此你必须全部更改这些代码。我希望限制修改单个类的所带来的影响，而不是波及到整个程序。</p>\n<p>　　既然存储器违反了封装原则，你就有理由主张一个过度滥用存储器的系统不符合面向对象思想。如果你不只是为了写代码而是认真检查设计流程，你能完全摒弃存储器，这个流程至关重要。我会在后文更详尽的阐述这个问题。</p>\n<p>　　减少getter/setter方法不意味着某些数据讲不能在系统中流动。尽管如此，数据流动还是越少越好。据我的经验系统可维护性是与数据在两个对象间交互的数量成反比的。经管你可能不知道，但是你可以消除绝大多数的数据移动。<br>　　<br>　　通过细致的设计并且着眼于你应该干什么而不是你怎么干，你可以消除绝大的多数的getter/setter方法。不要去请求完成工作需要的信息，而是让持有相关信息的对象去完成工作。大多数存储器提供了访问代码的手段因为设计者没有认真思考动态模型：为了完成工作所需要互相发送的动态对象和消息。他们的设计工作错误的由设计类的层级（类图）开始，然后试图把那些类强塞进动态模型。这种方式从来不能奏效。要设计一个静态模型，你需要发现类与类直接按的关联，这些关联完全与信息流相符合。一个联系存在与两个类之间，当且仅当有一个类的对象向其他类的对象发送了消息。静态模型的主要目的就是为你的动态模型捕捉这些关联。</p>\n<p>　　没有一个清晰的动态模型的定义，你只能猜想你会怎么使用一个类的对象。因此，存储方法会被大量绑定到模型上，你必须提供经可能多的存储方法因为你根本不能预测是否会用到他们。这类设计完全靠猜的策略是效率低下的。你把时间浪费在了写无用的方法上（或者给类加了不必要的能力）。</p>\n<p>　　存储器也是习惯思维的产物。当面向过程的程序员门接触到了Java，他们试图开始构建相似的代码。面向过程语言没有类，但他们有C结构体（struct,你可以把他看做没有方法的类）。然后理所当然地开始模仿设计结构体的方式去设计一个类，这个类除了公有成员没有其他的东西。这些面向过程的程序员们在其他一些地方知道了成员应该是私有的，然后他们把成员改成了私有并且提供了共有的存储方法。其实他们只是让共有调用变得复杂，而并没有让系统变得面向对象。</p>\n<h2 id=\"绘制自己\"><a href=\"#绘制自己\" class=\"headerlink\" title=\"绘制自己\"></a>绘制自己</h2><p>　　全字段封装的一个分支存在于UI构造器中。如果你不能使用存储器，你就不能在一个UI构造类中调用<code>getAttribute()</code>方法。取而代之的是类会提供一个drawYourself(…)方法。<br>　　<br>　　<code>getIdentity()</code>方法当然也能工作，假如他实现了Identity接口返回一个对象。这个接口必须包含<code>drawYourself()</code>方法（或者<strong>give-me-a-Component-that-represents-your-identity</strong>）。虽然<code>getIdentity</code>用“get”开头，但是他不是一个存储器因为他没有返回一个字段。他返回一个包含适当行为的复杂对象。甚至当我获得了一个Identity对象，我仍然不知道identity内部的细节。</p>\n<p>　　当然，<code>drawYourself()</code>策略意味着我把UI代码放入了业务逻辑。考虑下当UI表现发生变化时会发生什么事情。假设我想让一个属性以完全不同的方式来呈现，今天identity是一个名字，明天是一个名字和id，后天是一个名字、id和一张图。我把这些代码改动带来的影响限制在了一个地方。如果我有一个<strong>give-me-a-Component-that-represents-your-identity</strong>类，我已经将identity的表现与系统的其余部分隔离了开来。</p>\n<p>　　牢记一点，我没有把任何代码放入业务逻辑。我依据AWT或Swing框架编写UI层。这些UI代码是AWT/Swing的实现。使用抽象层来将其与子系统的业务逻辑隔离开是核心所在。我可以在不改任何代码的情况下轻松的接驳到其他绘图环境，唯一的问题是代码稍显杂乱。你可以将代码移到内部类中来相处这个问题（或者使用Facade设计模式）</p>\n<h2 id=\"JavaBeans\"><a href=\"#JavaBeans\" class=\"headerlink\" title=\"JavaBeans\"></a>JavaBeans</h2><p>　　你可能会反对说：“那么JavaBeans怎么办？” 怎么办？你完全可以不使用getters和setter来构造JavaBeans。BeanCustomizer,BeanInfo, 和 BeanDescriptor类都是为了这个目的而存在的。JavaBeans规范设计师们将getter/setter风格放入了规范因为他们认为当你已经学会了什么才是正确的时候，getter/setter可以让人们更容易的构造一个bean。很遗憾，没人去这样做。</p>\n<p>　　存储器仅仅是被创建来作为标记特定属性的标签之用，因为类似UI生成器之类的需要标识他们。你不被建议去自己调用这些方法。他们是为自动工具的调用准备的。这工具使用在Class类中的内省API来找到方法并且更具方法名来推断指定属性是否存在。在实践中基于内省的风格没有奏效。它反而是的代码更复杂更面向过程化。不理解数据抽象的程序员调用存储器必然导致，代码很难维护。基于这个原因，元数据特性会被包含进Java1.5。你将不必再这样变现:</p>\n<pre><code>private int property;\npublic int getProperty  (　　 ){ return property; }\npublic void setProperty (int value}{ property = value; }\n</code></pre><p>将来可以这样</p>\n<pre><code>private @property int property;\n</code></pre><p>类似于UI构造工具将使用内审API直接找到元素而不先通过测试方法名再去判断元素是否存在。因此，在有没有运行时存储器来破坏你的代码了。</p>\n<h2 id=\"何时存储器是有用的？\"><a href=\"#何时存储器是有用的？\" class=\"headerlink\" title=\"何时存储器是有用的？\"></a>何时存储器是有用的？</h2><p>　　首先，在讨论之初我说就过如果某个存储器方法返回的是以接口为单位的实例（这个接口是被当前对象实现的）那么这个存储器就是有效的，因为接口隔离了实现类内部的倪安东。这类的方法（返回一个接口引用）不是一个普通意义上提供直接操作字段功能的“getter”方法。如果你改变了提供者的内部实现，你只要改变返回对象的定义就能适应这些变化。你依然保护了那些通过对象接口来访问的外部代码。</p>\n<p>　　其次，我认为所有的OO系统都有一个面向过程分界层。绝大多数OO程序运行在面向过程的操作系统只上并且与面向过程的数据库通讯。这些外部过程化子系统的接口是通用性质的。Java Database Connectivity(JDBC)设计者并不知道你为何目的使用数据库，所以数据库类必须设计的通用和高度灵活。一般来说，不必要的灵活性是有害的，但是对于这些API来说过度的灵活性是不可避免的。这些边界类被简单的使用存储方法加载因为设计者别无选择。</p>\n<p>　　事实上，设计者不知道用户如何调用的问题充斥着整个Java包。如果你不能预测你将如何使用类对象那么淘汰所有存储器就是困难的。受制于此，Java设计者已经做了一切他们能做的去隐藏实现。这并不是说你的代码也应该采用jdbc的设计风格。绝不应该！我们一定知道我们的类是如何被使用的，所以我们不用浪费时间去创建不必要的灵活性。</p>\n<h2 id=\"一个设计策略\"><a href=\"#一个设计策略\" class=\"headerlink\" title=\"一个设计策略\"></a>一个设计策略</h2><p>　　 所以我们怎么抛弃getter和setter呢？</p>\n<p>　　 以用例为中心的OO设计过程:用户执行的有输出结果的特定任务。（登录不是一个用例因为它在问题域中缺少有用的结果输出。所以绘制一个账单是一个用例。）一个面向对象的系统实现了创建包含用例的各种场景所需的活动。实现用例的运行时对象通过向另一个对象发送消息来完成工作。当然，不是所有的消息都是等价的。如果你只是简单的构建了一个使用对象和类的面向过程的程序，那么你就不很难完成所有工作。</p>\n<p>　　1989年，Kent Beck 和 Ward Cunningharn在教授面向对象的设计课程时，曾对改变过度依赖get/set的心理做了如下的阐述：</p>\n<pre><code>在教授面向对象的程序设计时最困难的是让学习者放弃那些在面向过程程序中司空见惯的全局信息获取，转而依赖类本身的信息去完成他们的任务。新手的设计充斥着全局思维：非理由的全局变量、不必要的指针以及在实现过程中对其他类不恰当的依赖。\n</code></pre><p>　　Cunningham发展了一套能够很好展示设计过程的教学方法:CRC卡片（类，职责，协作）。最基本的做法是做一套4x6规格的索引卡片，用来展示三个方面：</p>\n<ul>\n<li>类：类对象的名字</li>\n<li>职责：那些类可以做什么。这些职责应该专注于一个特定技术范围内</li>\n<li>协作：可与当前类对象通讯的其他类对象。这里的东西越少越好</li>\n</ul>\n<p>　　CRC卡片最初的构想是基于一个假设——事情总会发生变化。</p>\n<p>　　Beck和Cunningham然后挑选一个用例，然后决定哪些对象会被要求执行这个用例做出最全面的假设。他们通常从两个类开始着手，不断的添加其他类用以实现用例。他们从班上挑选一些人来代表那些对象并发给他们一张相关的CRC卡片。如果他们需要一些给定的类对象，那么一些学生会被挑选来代表那些对象。</p>\n<p>　　然后这个班级开始根据以下规则实现用例：</p>\n<ul>\n<li>通过与其他人的沟通来完成用例包含的动作。</li>\n<li>你只能与你的协作对象进行交流。如果你必须和其他人交流，你应该交由一个能与那人交流的协作对象去完成，如果依然不行，你必须在你的CRC卡片上添加一个协作这。</li>\n<li>你不能去直接获取用来完成工作的信息。取而代之的，你必须请求拥有这些信息的对象去完成这个工作。把完成任务必须的信息传递给协作者是可以的，但是请把这些互动保持在最低限度。</li>\n<li>如果一些事情必须完成但是又没人能完成，那么创建一个新类和CRC卡片或者在已有的类和CRC卡片中添加一个职责。</li>\n<li>如果卡片写的太满，你必须创建其他的类和CRC卡片去分担一些指着。类的复杂度被4x6卡片的容量所限制。<br>　　<br>　　整个交流的记录就是程序的动态模型。最终完成的CRC卡片就是静态模型。通过不断的尝试和实践你可以使用这个方法解决任何问题。</li>\n</ul>\n<p>　　我刚刚描述的这个过程就是面向对象设计过程，尽管为适应课堂教学做了简化。一些人使用CRC卡片设计真实的程序。然而，更多的时候，设计者使用统一建模语言（UML）设计动态和静态模型。OO系统的要点是对象的通讯。如果你仔细思考，get/set方法在通讯过程是不需要的。同样的，在你开始编码之前，如果你以这种方式设计，get / set方法将不会出现在你的代码中。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>　　让我们总结一下：除非逼不得已你应该避免使用存储器因为这些方法暴露了类是如何实现的信息，从而导致你的代码变得难以维护。有时get/set方法不可避免，但是根据面向对象设计经验去掉你现在代码中99%的get/set方法是没有困难的。</p>\n<p>　　getter/setter方法往往会在代码中起到作用因为编写者使用过程思维来思考问题的，摆脱这种过程思维的最好方法是设想定义明确职责的对象之间的对话。Cunningham的CRC卡片方法是一个伟大的入门手段。</p>"}],"PostAsset":[{"_id":"source/_posts/h5-video-inline/i1.png","slug":"i1.png","post":"cj5w0cufz0006ij660owynyls","modified":0,"renderable":0},{"_id":"source/_posts/h5-video-inline/i2.png","slug":"i2.png","post":"cj5w0cufz0006ij660owynyls","modified":0,"renderable":0},{"_id":"source/_posts/h5-video-inline/i8.png","slug":"i8.png","post":"cj5w0cufz0006ij660owynyls","modified":0,"renderable":0},{"_id":"source/_posts/hexo-install/helloworld.png","slug":"helloworld.png","post":"cj5w0cugc000cij66t5sz0myu","modified":0,"renderable":0},{"_id":"source/_posts/h5-long-push/i1.png","slug":"i1.png","post":"cj5w0cuft0002ij664vylva4w","modified":0,"renderable":0},{"_id":"source/_posts/h5-long-push/i2.png","slug":"i2.png","post":"cj5w0cuft0002ij664vylva4w","modified":0,"renderable":0},{"_id":"source/_posts/h5-long-push/i3.png","slug":"i3.png","post":"cj5w0cuft0002ij664vylva4w","modified":0,"renderable":0},{"_id":"source/_posts/h5-long-push/i4.png","slug":"i4.png","post":"cj5w0cuft0002ij664vylva4w","modified":0,"renderable":0},{"_id":"source/_posts/h5-video-inline/i3.jpg","slug":"i3.jpg","post":"cj5w0cufz0006ij660owynyls","modified":0,"renderable":0},{"_id":"source/_posts/h5-video-inline/i4.jpg","slug":"i4.jpg","post":"cj5w0cufz0006ij660owynyls","modified":0,"renderable":0},{"_id":"source/_posts/h5-video-inline/i5.jpg","slug":"i5.jpg","post":"cj5w0cufz0006ij660owynyls","modified":0,"renderable":0},{"_id":"source/_posts/h5-video-inline/i6.jpg","slug":"i6.jpg","post":"cj5w0cufz0006ij660owynyls","modified":0,"renderable":0},{"_id":"source/_posts/h5-video-inline/i7.png","slug":"i7.png","post":"cj5w0cufz0006ij660owynyls","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cj5w0cufo0000ij668elwhvrx","category_id":"cj5w0cufv0004ij662b718mh2","_id":"cj5w0cugd000dij66mv98de1i"},{"post_id":"cj5w0cuft0002ij664vylva4w","category_id":"cj5w0cufv0004ij662b718mh2","_id":"cj5w0cugh000iij66glbipryy"},{"post_id":"cj5w0cugf000hij66rohcy8qt","category_id":"cj5w0cufv0004ij662b718mh2","_id":"cj5w0cugj000nij66bm3es9vx"},{"post_id":"cj5w0cufz0006ij660owynyls","category_id":"cj5w0cufv0004ij662b718mh2","_id":"cj5w0cugk000rij665anni2bu"},{"post_id":"cj5w0cugc000cij66t5sz0myu","category_id":"cj5w0cugi000kij66frviymge","_id":"cj5w0cugk000tij66phr8n0gy"},{"post_id":"cj5w0cuge000eij66cdrq7f0z","category_id":"cj5w0cugj000oij6614eb9u6i","_id":"cj5w0cugl000wij66l04gkc61"},{"post_id":"cj5w0cugh000jij661mqy95by","category_id":"cj5w0cugj000oij6614eb9u6i","_id":"cj5w0cugl000yij66rn5ba3o3"}],"PostTag":[{"post_id":"cj5w0cufo0000ij668elwhvrx","tag_id":"cj5w0cufy0005ij66a0p22c2e","_id":"cj5w0cugj000mij66g3s2je0e"},{"post_id":"cj5w0cufo0000ij668elwhvrx","tag_id":"cj5w0cug9000bij66dyqr6076","_id":"cj5w0cugk000pij66prurdspt"},{"post_id":"cj5w0cufo0000ij668elwhvrx","tag_id":"cj5w0cugf000gij661gobge8g","_id":"cj5w0cugk000sij66yze33sx1"},{"post_id":"cj5w0cuft0002ij664vylva4w","tag_id":"cj5w0cufy0005ij66a0p22c2e","_id":"cj5w0cugm0011ij66w443o216"},{"post_id":"cj5w0cuft0002ij664vylva4w","tag_id":"cj5w0cugk000qij66s9ns7yx2","_id":"cj5w0cugm0012ij66fonw5yb8"},{"post_id":"cj5w0cuft0002ij664vylva4w","tag_id":"cj5w0cugk000vij6616uekvnr","_id":"cj5w0cugn0014ij667gaksua6"},{"post_id":"cj5w0cuft0002ij664vylva4w","tag_id":"cj5w0cugl000xij66fjqip1gv","_id":"cj5w0cugn0015ij662qez9hgb"},{"post_id":"cj5w0cuft0002ij664vylva4w","tag_id":"cj5w0cugl000zij665ydk4koy","_id":"cj5w0cugn0017ij66ue7af9js"},{"post_id":"cj5w0cufz0006ij660owynyls","tag_id":"cj5w0cufy0005ij66a0p22c2e","_id":"cj5w0cugo001aij662y2wx6yw"},{"post_id":"cj5w0cufz0006ij660owynyls","tag_id":"cj5w0cugn0013ij664utubtjj","_id":"cj5w0cugo001bij66cvwocq6p"},{"post_id":"cj5w0cufz0006ij660owynyls","tag_id":"cj5w0cugn0016ij66jjskgz3w","_id":"cj5w0cugp001dij66afbev33v"},{"post_id":"cj5w0cufz0006ij660owynyls","tag_id":"cj5w0cugl000zij665ydk4koy","_id":"cj5w0cugp001eij66iy8oiro4"},{"post_id":"cj5w0cug20008ij66vm5z9tuk","tag_id":"cj5w0cufy0005ij66a0p22c2e","_id":"cj5w0cugp001gij66cbvgobw5"},{"post_id":"cj5w0cug20008ij66vm5z9tuk","tag_id":"cj5w0cugn0019ij66nstyb57f","_id":"cj5w0cugq001hij66b0tvs7sd"},{"post_id":"cj5w0cugc000cij66t5sz0myu","tag_id":"cj5w0cugo001cij661wvnwigh","_id":"cj5w0cugr001jij66k8hnn97p"},{"post_id":"cj5w0cugc000cij66t5sz0myu","tag_id":"cj5w0cugp001fij66jsphta0a","_id":"cj5w0cugr001kij660xr3w3wz"},{"post_id":"cj5w0cuge000eij66cdrq7f0z","tag_id":"cj5w0cugq001iij66pd8t3vmj","_id":"cj5w0cugs001oij66czkw7ei9"},{"post_id":"cj5w0cuge000eij66cdrq7f0z","tag_id":"cj5w0cugr001lij66tvdamrpg","_id":"cj5w0cugs001pij66hufi7908"},{"post_id":"cj5w0cuge000eij66cdrq7f0z","tag_id":"cj5w0cugr001mij66m2hsg8jh","_id":"cj5w0cugu001rij66x22j0mmy"},{"post_id":"cj5w0cugf000hij66rohcy8qt","tag_id":"cj5w0cufy0005ij66a0p22c2e","_id":"cj5w0cugv001tij66319qme69"},{"post_id":"cj5w0cugf000hij66rohcy8qt","tag_id":"cj5w0cugn0019ij66nstyb57f","_id":"cj5w0cugv001uij66gx8br41z"},{"post_id":"cj5w0cugf000hij66rohcy8qt","tag_id":"cj5w0cugs001qij669t19uwe1","_id":"cj5w0cugw001wij66b9ipf25p"},{"post_id":"cj5w0cugh000jij661mqy95by","tag_id":"cj5w0cugq001iij66pd8t3vmj","_id":"cj5w0cuh50020ij66extwfi3q"},{"post_id":"cj5w0cugh000jij661mqy95by","tag_id":"cj5w0cugr001mij66m2hsg8jh","_id":"cj5w0cuh50021ij66xdc883p4"},{"post_id":"cj5w0cugh000jij661mqy95by","tag_id":"cj5w0cugw001xij66k8jknemx","_id":"cj5w0cuh50022ij66cfvi8wcm"},{"post_id":"cj5w0cugh000jij661mqy95by","tag_id":"cj5w0cuh3001yij665wddh4o8","_id":"cj5w0cuh50023ij6678ul1jlz"},{"post_id":"cj5w0cugh000jij661mqy95by","tag_id":"cj5w0cuh4001zij66z8uww3gt","_id":"cj5w0cuh50024ij664ph3dfoh"}],"Tag":[{"name":"H5","_id":"cj5w0cufy0005ij66a0p22c2e"},{"name":"canvas","_id":"cj5w0cug9000bij66dyqr6076"},{"name":"drawImage","_id":"cj5w0cugf000gij661gobge8g"},{"name":"touchstart","_id":"cj5w0cugk000qij66s9ns7yx2"},{"name":"touchend","_id":"cj5w0cugk000vij6616uekvnr"},{"name":"手势","_id":"cj5w0cugl000xij66fjqip1gv"},{"name":"移动端","_id":"cj5w0cugl000zij665ydk4koy"},{"name":"video","_id":"cj5w0cugn0013ij664utubtjj"},{"name":"inline","_id":"cj5w0cugn0016ij66jjskgz3w"},{"name":"viewport","_id":"cj5w0cugn0019ij66nstyb57f"},{"name":"Hexo","_id":"cj5w0cugo001cij661wvnwigh"},{"name":"安装","_id":"cj5w0cugp001fij66jsphta0a"},{"name":"Java","_id":"cj5w0cugq001iij66pd8t3vmj"},{"name":"继承","_id":"cj5w0cugr001lij66tvdamrpg"},{"name":"翻译","_id":"cj5w0cugr001mij66m2hsg8jh"},{"name":"测试数据","_id":"cj5w0cugs001qij669t19uwe1"},{"name":"存储器","_id":"cj5w0cugw001xij66k8jknemx"},{"name":"getter","_id":"cj5w0cuh3001yij665wddh4o8"},{"name":"setter","_id":"cj5w0cuh4001zij66z8uww3gt"}]}}